(*********************************************

  Import-Export
  Version   := RSLogix 5000 v20.04
  Owner     := Illawarra Coal, South32
  Exported  := Fri Jul 29 15:40:32 2016

  Note:  File encoded in UTF-8.  Only edit file in a program 
         which supports UTF-8 (like Notepad, not Wordpad).

**********************************************)
IE_VER := 2.11;

CONTROLLER AA9_TBS_CLX (ProcessorType := "1756-L71",
                        Major := 20,
                        CompatibilityMode := V20.01,
                        TimeSlice := 20,
                        ShareUnusedTimeSlice := 1,
                        CommPath := "10_20_45_X\10.20.45.72\Backplane\0",
                        RedundancyEnabled := 0,
                        KeepTestEditsOnSwitchOver := 0,
                        DataTablePadPercentage := 50,
                        SecurityCode := 0,
                        ChangesToDetect := 16#ffff_ffff_ffff_ffff,
                        SFCExecutionControl := "CurrentActive",
                        SFCRestartPosition := "MostRecent",
                        SFCLastScan := "DontScan",
                        SerialNumber := 16#00a6_f28a,
                        MatchProjectToController := No,
                        CanUseRPIFromProducer := No,
                        InhibitAutomaticFirmwareUpdate := 0)
	DATATYPE AI15 (FamilyType := NoFamily)
		REAL AI[15];
	END_DATATYPE

	DATATYPE Always (FamilyType := NoFamily)
		DINT RL_WD_Out (Description := "RedLion Comms Watchdog output");
		DINT RL_WD_IN (Description := "RedLion Comms Watchdog input");
		DINT Zero (Description := "Always a Zero Value");
		SINT ZZZZZZZZZZAlways3 (Hidden := 1);
		BIT On ZZZZZZZZZZAlways3 : 0 (Description := "Always On or True");
		BIT Off ZZZZZZZZZZAlways3 : 1 (Description := "Always Off or False");
		BIT Tic_0_5secs ZZZZZZZZZZAlways3 : 2 (Description := "Half Second Tic");
		BIT Tic_1sec ZZZZZZZZZZAlways3 : 3 (Description := "One Second Tic");
		BIT Tic_2sec ZZZZZZZZZZAlways3 : 4 (Description := "Two Second Tic");
		BIT Tic_5sec ZZZZZZZZZZAlways3 : 5 (Description := "Five Second Tic");
		BIT Tic_10sec ZZZZZZZZZZAlways3 : 6 (Description := "Ten Second Tic");
		BIT Tic_30sec ZZZZZZZZZZAlways3 : 7 (Description := "Thirty Second Tic");
		SINT ZZZZZZZZZZAlways12 (Hidden := 1);
		BIT Tic_1min ZZZZZZZZZZAlways12 : 0 (Description := "One Minute Tic");
		BIT Tic_15min ZZZZZZZZZZAlways12 : 1 (Description := "Fifteen Minute Tic");
		BIT Tic_30min ZZZZZZZZZZAlways12 : 2 (Description := "Thirty Minute Tic");
		BIT Tic_1hr ZZZZZZZZZZAlways12 : 3 (Description := "One Hour Tic");
		BIT Flash_0_5sec ZZZZZZZZZZAlways12 : 4 (Description := "Fash Bit 0.5 second On 0.5 second Off");
		BIT Flash_1sec ZZZZZZZZZZAlways12 : 5 (Description := "Fash Bit 1 second On 1 second Off");
		BIT Flash_2sec ZZZZZZZZZZAlways12 : 6 (Description := "Flash Bit 2 seconds On 2 seconds Off");
		BIT PowerOn_5sec ZZZZZZZZZZAlways12 : 7 (Description := "Power On Delay - 5 seconds");
		SINT ZZZZZZZZZZAlways21 (Hidden := 1);
		BIT PowerOn_10secs ZZZZZZZZZZAlways21 : 0 (Description := "Power On Delay - 10 seconds");
		BIT PowerOn_1min ZZZZZZZZZZAlways21 : 1 (Description := "Power On Delay - 1 minute");
		BIT PowerOn_30min ZZZZZZZZZZAlways21 : 2 (Description := "Power On Delay - 30 minutes");
		BIT DailyOneshot ZZZZZZZZZZAlways21 : 3 (Description := "Tic - Once a Day at Midnight");
		BIT MonthlyOneShot ZZZZZZZZZZAlways21 : 4 (Description := "Tic - at the Start of Each Calender Month");
		BIT YearlyOneShot ZZZZZZZZZZAlways21 : 5 (Description := "Tic - at the Start of Each Calender Year");
	END_DATATYPE

	DATATYPE DI32 (FamilyType := NoFamily)
		DINT DI;
	END_DATATYPE

	DATATYPE DO32 (FamilyType := NoFamily)
		DINT DO;
	END_DATATYPE

	DATATYPE Gases (Description := "Values of gases officially read",
	                FamilyType := NoFamily)
		REAL Carbon_Dioxide (Description := "CO2 in %");
		REAL Carbon_Monoxide (Description := "CO in ppm");
		REAL Oxygen (Description := "O2 in %");
		REAL Methane (Description := "CH4 in %");
		REAL Ethane (Description := "C2H6 in %");
		REAL Propane (Description := "C3H8 in %");
		REAL Iso_Butane (Description := "C4H10 in %");
		REAL n_Butane (Description := "C4H10 in %");
		REAL C5Plus (Description := "%");
		DINT Age (Description := "Seconds since reading taken");
		DINT Seconds_Timestamp (Description := "Seconds since program start time that last reading was taken (internal use)");
		DINT Stale (Description := "Too old to be useful, so other members have been zero-ed. 1=T,0=F");
	END_DATATYPE

	DATATYPE GasesOnly (Description := "Values of gases when being buffered",
	                    FamilyType := NoFamily)
		REAL Carbon_Dioxide;
		REAL Carbon_Monoxide;
		REAL Oxygen;
		REAL Methane;
		REAL Ethane;
		REAL Propane;
		REAL Iso_Butane;
		REAL n_Butane;
		REAL C5Plus;
	END_DATATYPE

	DATATYPE Gas_Alm (FamilyType := NoFamily)
		SINT ZZZZZZZZZZGas_Alm0 (Hidden := 1);
		BIT A01 ZZZZZZZZZZGas_Alm0 : 0 (Description := "Current Sample$NPoint Low Flow");
		BIT A02 ZZZZZZZZZZGas_Alm0 : 1;
		BIT A03 ZZZZZZZZZZGas_Alm0 : 2;
		BIT A04 ZZZZZZZZZZGas_Alm0 : 3;
		BIT A05 ZZZZZZZZZZGas_Alm0 : 4;
		BIT A06 ZZZZZZZZZZGas_Alm0 : 5;
		BIT A07 ZZZZZZZZZZGas_Alm0 : 6;
		BIT A08 ZZZZZZZZZZGas_Alm0 : 7;
		SINT ZZZZZZZZZZGas_Alm9 (Hidden := 1);
		BIT A09 ZZZZZZZZZZGas_Alm9 : 0;
		BIT A10 ZZZZZZZZZZGas_Alm9 : 1;
		BIT A11 ZZZZZZZZZZGas_Alm9 : 2;
		BIT A12 ZZZZZZZZZZGas_Alm9 : 3;
		BIT A13 ZZZZZZZZZZGas_Alm9 : 4;
		BIT A14 ZZZZZZZZZZGas_Alm9 : 5;
		BIT A15 ZZZZZZZZZZGas_Alm9 : 6;
		BIT A16 ZZZZZZZZZZGas_Alm9 : 7;
		SINT ZZZZZZZZZZGas_Alm18 (Hidden := 1);
		BIT A17 ZZZZZZZZZZGas_Alm18 : 0;
		BIT A18 ZZZZZZZZZZGas_Alm18 : 1;
		BIT A19 ZZZZZZZZZZGas_Alm18 : 2;
		BIT A20 ZZZZZZZZZZGas_Alm18 : 3;
		BIT A21 ZZZZZZZZZZGas_Alm18 : 4;
		BIT A22 ZZZZZZZZZZGas_Alm18 : 5;
		BIT A23 ZZZZZZZZZZGas_Alm18 : 6;
		BIT A24 ZZZZZZZZZZGas_Alm18 : 7;
		SINT ZZZZZZZZZZGas_Alm27 (Hidden := 1);
		BIT A25 ZZZZZZZZZZGas_Alm27 : 0;
		BIT A26 ZZZZZZZZZZGas_Alm27 : 1;
		BIT A27 ZZZZZZZZZZGas_Alm27 : 2;
		BIT A28 ZZZZZZZZZZGas_Alm27 : 3;
		BIT A29 ZZZZZZZZZZGas_Alm27 : 4;
		BIT A30 ZZZZZZZZZZGas_Alm27 : 5;
		BIT A31 ZZZZZZZZZZGas_Alm27 : 6;
		BIT A32 ZZZZZZZZZZGas_Alm27 : 7;
	END_DATATYPE

	DATATYPE Gas_Stat (FamilyType := NoFamily)
		SINT ZZZZZZZZZZGas_Stat0 (Hidden := 1);
		BIT Wrns_Hlthy ZZZZZZZZZZGas_Stat0 : 0 (Description := "Gas Warnings$Nare Healthy");
		BIT Alms_Hlthy ZZZZZZZZZZGas_Stat0 : 1 (Description := "Gas Alarms$Nare Healthy");
	END_DATATYPE

	DATATYPE HMI_R_Gas (FamilyType := NoFamily)
		REAL CO2 (Description := "Scaled Reading of Carbon Dioxide");
		REAL CO (Description := "Scaled Reading of Carbon Monoxide");
		REAL O2 (Description := "Scaled Raeding of Oxygen");
		REAL CH4 (Description := "Scaled Reading of Methane");
		REAL Ch_Vac (Description := "Current Channel Gauge Vacuum in kPa");
		INT Ch_No (Description := "Channel Number Being Sampled");
		INT Prg_Per (Description := "Purge Period in Seconds");
		REAL Ch1_Vac (Description := "Channel Number 1 Vacuum Reding in kPa");
		REAL Ch2_Vac (Description := "Channel Number 2 Vacuum Reding in kPa");
		REAL Ch3_Vac (Description := "Channel Number 3 Vacuum Reding in kPa");
		REAL Ch4_Vac (Description := "Channel Number 4 Vacuum Reding in kPa");
		REAL Ch5_Vac (Description := "Channel Number 5 Vacuum Reding in kPa");
		REAL Ch6_Vac (Description := "Channel Number 6 Vacuum Reding in kPa");
		REAL Ch7_Vac (Description := "Channel Number 7 Vacuum Reding in kPa");
		REAL Ch8_Vac (Description := "Channel Number 8 Vacuum Reding in kPa");
		REAL Ch9_Vac (Description := "Channel Number 9 Vacuum Reding in kPa");
		REAL Ch10_Vac (Description := "Channel Number 10 Vacuum Reding in kPa");
		REAL Ch11_Vac (Description := "Channel Number 11 Vacuum Reding in kPa");
		REAL Ch12_Vac (Description := "Channel Number 12 Vacuum Reding in kPa");
		REAL Ch13_Vac (Description := "Channel Number 13 Vacuum Reding in kPa");
		REAL Ch14_Vac (Description := "Channel Number 14 Vacuum Reding in kPa");
		REAL Ch15_Vac (Description := "Channel Number 15 Vacuum Reding in kPa");
		REAL Ch16_Vac (Description := "Channel Number 16 Vacuum Reding in kPa");
		REAL Ch17_Vac (Description := "Channel Number 17 Vacuum Reding in kPa");
		REAL Ch18_Vac (Description := "Channel Number 18 Vacuum Reding in kPa");
		REAL Ch19_Vac (Description := "Channel Number 19 Vacuum Reding in kPa");
		REAL Ch20_Vac (Description := "Channel Number 20 Vacuum Reding in kPa");
		REAL Ch21_Vac (Description := "Channel Number 21 Vacuum Reding in kPa");
		REAL Ch22_Vac (Description := "Channel Number 22 Vacuum Reding in kPa");
		REAL Ch23_Vac (Description := "Channel Number 23 Vacuum Reding in kPa");
		REAL Ch24_Vac (Description := "Channel Number 24 Vacuum Reding in kPa");
		REAL Ch25_Vac (Description := "Channel Number 25 Vacuum Reding in kPa");
		REAL Ch26_Vac (Description := "Channel Number 26 Vacuum Reding in kPa");
		REAL Ch27_Vac (Description := "Channel Number 27 Vacuum Reding in kPa");
		REAL Ch28_Vac (Description := "Channel Number 28 Vacuum Reding in kPa");
		REAL Ch29_Vac (Description := "Channel Number 29 Vacuum Reding in kPa");
		REAL Ch30_Vac (Description := "Channel Number 30 Vacuum Reding in kPa");
		REAL Ch_Sam_Pres (Description := "Current Channel Sample Pressure");
		SINT ZZZZZZZZZZHMI_R_Gas38 (Hidden := 1);
		BIT Zero_Purge ZZZZZZZZZZHMI_R_Gas38 : 0 (Description := "Zero Gas Purge Timer Timing");
		BIT Zero_Purge_DN ZZZZZZZZZZHMI_R_Gas38 : 1 (Description := "Zero Gas Purge Timer Done");
		BIT Auto_Cal_Stat ZZZZZZZZZZHMI_R_Gas38 : 2 (Description := "Auto Cal Status for HMI");
		BIT Man_Cal_Stat ZZZZZZZZZZHMI_R_Gas38 : 3 (Description := "Manual Cal Status for HMI");
		BIT Cal_Flo_Alm1 ZZZZZZZZZZHMI_R_Gas38 : 4 (Description := "CH4 Cylinder Low Flow alarm");
		BIT Cal_Flo_Alm2 ZZZZZZZZZZHMI_R_Gas38 : 5 (Description := "CO2 Cylinder Low Flow Alarm");
		BIT Cal_Flo_Alm3 ZZZZZZZZZZHMI_R_Gas38 : 6 (Description := "CO Cylinder Low Flow Alarm");
		BIT Cal_Flo_Alm4 ZZZZZZZZZZHMI_R_Gas38 : 7 (Description := "O2 Cal Low Flow Alarm");
		SINT ZZZZZZZZZZHMI_R_Gas47 (Hidden := 1);
		BIT Cal_Flo_Alm5 ZZZZZZZZZZHMI_R_Gas47 : 0 (Description := "N2 Cylinder Low Flow Alarm");
		BIT Analyser_Purge ZZZZZZZZZZHMI_R_Gas47 : 1 (Description := "Analyser Purge Post Calibration");
	END_DATATYPE

	DATATYPE HMI_R_PLC (FamilyType := NoFamily)
		OB32 S2;
		OB32 S3;
		IB32 S4;
		IF16 S5;
		IF16 S6;
		IF16 S7;
	END_DATATYPE

	DATATYPE HMI_W (FamilyType := NoFamily)
		SINT ZZZZZZZZZZHMI_W0 (Hidden := 1);
		BIT Tog_Pmp ZZZZZZZZZZHMI_W0 : 0 (Description := "Toggle Pump$NSelection from HMI");
		BIT Tog_Bag_Sam_Start ZZZZZZZZZZHMI_W0 : 1 (Description := "Toggle Bag Sample Operation Start from HMI");
		BIT Tog_Bag_Sam_Stop ZZZZZZZZZZHMI_W0 : 2 (Description := "Toggle Bag Sample Operation Stop from HMI");
		BIT Man_Cal_Enter ZZZZZZZZZZHMI_W0 : 3 (Description := "Enter Manual Calibration Mode from HMI");
		BIT Man_Cal_Exit ZZZZZZZZZZHMI_W0 : 4 (Description := "Exit Manual Calibration Mode from HMI");
		BIT Flo_Zero ZZZZZZZZZZHMI_W0 : 5 (Description := "Flow Zero Gas to Analyser from HMI");
		BIT Man_Zero_Cal ZZZZZZZZZZHMI_W0 : 6 (Description := "Manual Zero Calibration, all channels -  from HMI");
		BIT Flo_CH4 ZZZZZZZZZZHMI_W0 : 7 (Description := "Flow CH4 Gas to Analyser from HMI");
		SINT ZZZZZZZZZZHMI_W9 (Hidden := 1);
		BIT Flo_CO2 ZZZZZZZZZZHMI_W9 : 0 (Description := "Flow CO2 Gas to Analyser from HMI");
		BIT Flo_CO ZZZZZZZZZZHMI_W9 : 1 (Description := "Flow CO Gas to Analyser from HMI");
		BIT Flo_O2 ZZZZZZZZZZHMI_W9 : 2 (Description := "Flow O2 to Analyser from HMI");
		BIT Man_Span_O2 ZZZZZZZZZZHMI_W9 : 3 (Description := "Manual Span Calibration O2 - from HMI");
		BIT Ack_Alm ZZZZZZZZZZHMI_W9 : 4 (Description := "Acknowledge Alarms");
	END_DATATYPE

	DATATYPE IB32 (FamilyType := NoFamily)
		SINT ZZZZZZZZZZIB320 (Hidden := 1);
		BIT DI00 ZZZZZZZZZZIB320 : 0 (Description := "Digital Input Channel 00");
		BIT DI01 ZZZZZZZZZZIB320 : 1 (Description := "Digital Input Channel 01");
		BIT DI02 ZZZZZZZZZZIB320 : 2 (Description := "Digital Input Channel 02");
		BIT DI03 ZZZZZZZZZZIB320 : 3 (Description := "Digital Input Channel 03");
		BIT DI04 ZZZZZZZZZZIB320 : 4 (Description := "Digital Input Channel 04");
		BIT DI05 ZZZZZZZZZZIB320 : 5 (Description := "Digital Input Channel 05");
		BIT DI06 ZZZZZZZZZZIB320 : 6 (Description := "Digital Input Channel 06");
		BIT DI07 ZZZZZZZZZZIB320 : 7 (Description := "Digital Input Channel 07");
		SINT ZZZZZZZZZZIB329 (Hidden := 1);
		BIT DI08 ZZZZZZZZZZIB329 : 0 (Description := "Digital Input Channel 08");
		BIT DI09 ZZZZZZZZZZIB329 : 1 (Description := "Digital Input Channel 09");
		BIT DI10 ZZZZZZZZZZIB329 : 2 (Description := "Digital Input Channel 10");
		BIT DI11 ZZZZZZZZZZIB329 : 3 (Description := "Digital Input Channel 11");
		BIT DI12 ZZZZZZZZZZIB329 : 4 (Description := "Digital Input Channel 12");
		BIT DI13 ZZZZZZZZZZIB329 : 5 (Description := "Digital Input Channel 13");
		BIT DI14 ZZZZZZZZZZIB329 : 6 (Description := "Digital Input Channel 14");
		BIT DI15 ZZZZZZZZZZIB329 : 7 (Description := "Digital Input Channel 15");
		SINT ZZZZZZZZZZIB3218 (Hidden := 1);
		BIT DI16 ZZZZZZZZZZIB3218 : 0 (Description := "Digital Input Channel 16");
		BIT DI17 ZZZZZZZZZZIB3218 : 1 (Description := "Digital Input Channel 17");
		BIT DI18 ZZZZZZZZZZIB3218 : 2 (Description := "Digital Input Channel 18");
		BIT DI19 ZZZZZZZZZZIB3218 : 3 (Description := "Digital Input Channel 19");
		BIT DI20 ZZZZZZZZZZIB3218 : 4 (Description := "Digital Input Channel 20");
		BIT DI21 ZZZZZZZZZZIB3218 : 5 (Description := "Digital Input Channel 21");
		BIT DI22 ZZZZZZZZZZIB3218 : 6 (Description := "Digital Input Channel 22");
		BIT DI23 ZZZZZZZZZZIB3218 : 7 (Description := "Digital Input Channel 23");
		SINT ZZZZZZZZZZIB3227 (Hidden := 1);
		BIT DI24 ZZZZZZZZZZIB3227 : 0 (Description := "Digital Input Channel 24");
		BIT DI25 ZZZZZZZZZZIB3227 : 1 (Description := "Digital Input Channel 25");
		BIT DI26 ZZZZZZZZZZIB3227 : 2 (Description := "Digital Input Channel 26");
		BIT DI27 ZZZZZZZZZZIB3227 : 3 (Description := "Digital Input Channel 27");
		BIT DI28 ZZZZZZZZZZIB3227 : 4 (Description := "Digital Input Channel 28");
		BIT DI29 ZZZZZZZZZZIB3227 : 5 (Description := "Digital Input Channel 29");
		BIT DI30 ZZZZZZZZZZIB3227 : 6 (Description := "Digital Input Channel 30");
		BIT DI31 ZZZZZZZZZZIB3227 : 7 (Description := "Digital Input Channel 31");
	END_DATATYPE

	DATATYPE IF16 (FamilyType := NoFamily)
		REAL AI00 (Description := "Channel 0 Analog Input Value in milliamps");
		REAL AI01 (Description := "Channel 1 Analog Input Value in milliamps");
		REAL AI02 (Description := "Channel 2 Analog Input Value in milliamps");
		REAL AI03 (Description := "Channel 3 Analog Input Value in milliamps");
		REAL AI04 (Description := "Channel 4 Analog Input Value in milliamps");
		REAL AI05 (Description := "Channel 5 Analog Input Value in milliamps");
		REAL AI06 (Description := "Channel 6 Analog Input Value in milliamps");
		REAL AI07 (Description := "Channel 7 Analog Input Value in milliamps");
		REAL AI08 (Description := "Channel 8 Analog Input Value in milliamps");
		REAL AI09 (Description := "Channel 9 Analog Input Value in milliamps");
		REAL AI10 (Description := "Channel 10 Analog Input Value in milliamps");
		REAL AI11 (Description := "Channel 11 Analog Input Value in milliamps");
		REAL AI12 (Description := "Channel 12 Analog Input Value in milliamps");
		REAL AI13 (Description := "Channel 13 Analog Input Value in milliamps");
		REAL AI14 (Description := "Channel 14 Analog Input Value in milliamps");
		REAL AI15 (Description := "Channel 15 Analog Input Value in milliamps");
		SINT ZZZZZZZZZZIF1616 (Hidden := 1);
		BIT Rng_Flt_Ch00 ZZZZZZZZZZIF1616 : 0 (Description := "Range Fault Analog Input Ch00");
		BIT Rng_Flt_Ch01 ZZZZZZZZZZIF1616 : 1 (Description := "Range Fault Analog Input Ch01");
		BIT Rng_Flt_Ch02 ZZZZZZZZZZIF1616 : 2 (Description := "Range Fault Analog Input Ch02");
		BIT Rng_Flt_Ch03 ZZZZZZZZZZIF1616 : 3 (Description := "Range Fault Analog Input Ch03");
		BIT Rng_Flt_Ch04 ZZZZZZZZZZIF1616 : 4 (Description := "Range Fault Analog Input Ch04");
		BIT Rng_Flt_Ch05 ZZZZZZZZZZIF1616 : 5 (Description := "Range Fault Analog Input Ch05");
		BIT Rng_Flt_Ch06 ZZZZZZZZZZIF1616 : 6 (Description := "Range Fault Analog Input Ch06");
		BIT Rng_Flt_Ch07 ZZZZZZZZZZIF1616 : 7 (Description := "Range Fault Analog Input Ch07");
		SINT ZZZZZZZZZZIF1625 (Hidden := 1);
		BIT Rng_Flt_Ch08 ZZZZZZZZZZIF1625 : 0 (Description := "Range Fault Analog Input Ch08");
		BIT Rng_Flt_Ch09 ZZZZZZZZZZIF1625 : 1 (Description := "Range Fault Analog Input Ch09");
		BIT Rng_Flt_Ch10 ZZZZZZZZZZIF1625 : 2 (Description := "Range Fault Analog Input Ch10");
		BIT Rng_Flt_Ch11 ZZZZZZZZZZIF1625 : 3 (Description := "Range Fault Analog Input Ch11");
		BIT Rng_Flt_Ch12 ZZZZZZZZZZIF1625 : 4 (Description := "Range Fault Analog Input Ch12");
		BIT Rng_Flt_Ch13 ZZZZZZZZZZIF1625 : 5 (Description := "Range Fault Analog Input Ch13");
		BIT Rng_Flt_Ch14 ZZZZZZZZZZIF1625 : 6 (Description := "Range Fault Analog Input Ch14");
		BIT Rng_Flt_Ch15 ZZZZZZZZZZIF1625 : 7 (Description := "Range Fault Analog Input Ch15");
	END_DATATYPE

	DATATYPE Local_Chassis (FamilyType := NoFamily)
		DO32 S2;
		DO32 S3;
		DI32 S4;
		IF16 S5;
		IF16 S6;
		IF16 S7;
	END_DATATYPE

	DATATYPE MBConnection (Description := "A connection object.",
	                       FamilyType := NoFamily)
		STRING MBTU_DestAddress (Description := "The IP address and connection timeout for the Modbus TCP device to connect to.   Should be of the form 111.222.333.444?port=502$NNOTE: port must be all lower case!");
		SINT ZZZZZZZZZZMBConnecti1 (Hidden := 1);
		BIT MBTU_Enable ZZZZZZZZZZMBConnecti1 : 0 (Description := "A 1 here enables the communications to this IP address, a 0 disables it.");
		DINT MBTI_NumberOfTransactions (Description := "Do not modify this unless changing the the size of the transactions_XX array to match.  Should be 1 less than the size of the arrray.");
		SINT ZZZZZZZZZZMBConnecti4 (Hidden := 1);
		BIT MBTI_Connected ZZZZZZZZZZMBConnecti4 : 0 (Description := "Indicates if the socket is actively connected.");
		DINT MBTI_ConnLastError (Description := "The last recorded socket error for this connection.  0  good, -6 connection failed, -7 Delete all failed, -8 Create Soc failed, -9 Connection failed, -10 connection dropped, -11 error in setting socket parameter.");
	END_DATATYPE

	DATATYPE MBTransaction (Description := "MB Transaction- .",
	                        FamilyType := NoFamily)
		SINT ZZZZZZZZZZMBTransact0 (Hidden := 1);
		BIT Enabled ZZZZZZZZZZMBTransact0 : 0 (Description := "Enables (1) or disables (0) the transaction");
		INT PollInterval (Description := "Number of base poll times in which to activate the transaction A value of 15 = 1.5 seconds.");
		INT TransType (Description := "Transaction code for the Modbus Protocol. Acceptable values are 1-Coil Read, 2- Discrete Input read, 3-Holding Register Read, 4-Input Register Read, 5-Write Single Coil, 6-Single Register Write, 15-Multiple Coil Write, 16 Multiple Register Write");
		SINT UID (Description := "Unit Identifier Only used if going through a gateway or bridge in which case it is the device address on the other side of the gateway.  Other wise leave as 0");
		INT BeginAddress (Description := "Beginning address to read data from or write data to in the remote device.");
		INT Count (Description := "The count of items to read from or write to in the remote device.if applicable");
		INT LocalOffset (Description := "Offset into local Data arrays MBTU_MB_xxxx for the data for this transaction (read or write).");
		SINT ZZZZZZZZZZMBTransact8 (Hidden := 1);
		BIT TransComplete ZZZZZZZZZZMBTransact8 : 0 (Description := "Transaction Complete Flag.  Check the TransStat to see if the transaction was successful. or if a modbus exception code was returned.");
		INT TransStat (Description := "Status result of the transaction.  0 = success, anything else indicates a modbus exception.");
		STR_462 Request (Description := "Actual buffer used to build the modbus request that is transmited to the remote node.");
		SINT ZZZZZZZZZZMBTransact12 (Hidden := 1);
		BIT ReqBuilt ZZZZZZZZZZMBTransact12 : 0 (Description := "Transaction request string is built, clear this if anything is changed in a read operation to rebuild the Request string.");
		INT TransID (Description := "Serial Number of the actual Ethernet Transaction used to match to the appropriate Reply");
		INT TransLastError (Description := "Last Error on transaction.  0-Success, -2 Network write error, -3 Local write error, -4 Network Read Error, -5 Local Read Error, -6 Connection failed..$N-12 Invalid Trans code, -13 Out of data array range.");
	END_DATATYPE

	DATATYPE OB32 (FamilyType := NoFamily)
		SINT ZZZZZZZZZZOB320 (Hidden := 1);
		BIT DO00 ZZZZZZZZZZOB320 : 0 (Description := "Digital Output Channel 00");
		BIT DO01 ZZZZZZZZZZOB320 : 1 (Description := "Digital Output Channel 01");
		BIT DO02 ZZZZZZZZZZOB320 : 2 (Description := "Digital Output Channel 02");
		BIT DO03 ZZZZZZZZZZOB320 : 3 (Description := "Digital Output Channel 03");
		BIT DO04 ZZZZZZZZZZOB320 : 4 (Description := "Digital Output Channel 04");
		BIT DO05 ZZZZZZZZZZOB320 : 5 (Description := "Digital Output Channel 05");
		BIT DO06 ZZZZZZZZZZOB320 : 6 (Description := "Digital Output Channel 06");
		BIT DO07 ZZZZZZZZZZOB320 : 7 (Description := "Digital Output Channel 07");
		SINT ZZZZZZZZZZOB329 (Hidden := 1);
		BIT DO08 ZZZZZZZZZZOB329 : 0 (Description := "Digital Output Channel 08");
		BIT DO09 ZZZZZZZZZZOB329 : 1 (Description := "Digital Output Channel 09");
		BIT DO10 ZZZZZZZZZZOB329 : 2 (Description := "Digital Output Channel 10");
		BIT DO11 ZZZZZZZZZZOB329 : 3 (Description := "Digital Output Channel 11");
		BIT DO12 ZZZZZZZZZZOB329 : 4 (Description := "Digital Output Channel 12");
		BIT DO13 ZZZZZZZZZZOB329 : 5 (Description := "Digital Output Channel 13");
		BIT DO14 ZZZZZZZZZZOB329 : 6 (Description := "Digital Output Channel 14");
		BIT DO15 ZZZZZZZZZZOB329 : 7 (Description := "Digital Output Channel 15");
		SINT ZZZZZZZZZZOB3218 (Hidden := 1);
		BIT DO16 ZZZZZZZZZZOB3218 : 0 (Description := "Digital Output Channel 16");
		BIT DO17 ZZZZZZZZZZOB3218 : 1 (Description := "Digital Output Channel 17");
		BIT DO18 ZZZZZZZZZZOB3218 : 2 (Description := "Digital Output Channel 18");
		BIT DO19 ZZZZZZZZZZOB3218 : 3 (Description := "Digital Output Channel 19");
		BIT DO20 ZZZZZZZZZZOB3218 : 4 (Description := "Digital Output Channel 20");
		BIT DO21 ZZZZZZZZZZOB3218 : 5 (Description := "Digital Output Channel 21");
		BIT DO22 ZZZZZZZZZZOB3218 : 6 (Description := "Digital Output Channel 22");
		BIT DO23 ZZZZZZZZZZOB3218 : 7 (Description := "Digital Output Channel 23");
		SINT ZZZZZZZZZZOB3227 (Hidden := 1);
		BIT DO24 ZZZZZZZZZZOB3227 : 0 (Description := "Digital Output Channel 24");
		BIT DO25 ZZZZZZZZZZOB3227 : 1 (Description := "Digital Output Channel 25");
		BIT DO26 ZZZZZZZZZZOB3227 : 2 (Description := "Digital Output Channel 26");
		BIT DO27 ZZZZZZZZZZOB3227 : 3 (Description := "Digital Output Channel 27");
		BIT DO28 ZZZZZZZZZZOB3227 : 4 (Description := "Digital Output Channel 28");
		BIT DO29 ZZZZZZZZZZOB3227 : 5 (Description := "Digital Output Channel 29");
		BIT DO30 ZZZZZZZZZZOB3227 : 6 (Description := "Digital Output Channel 30");
		BIT DO31 ZZZZZZZZZZOB3227 : 7 (Description := "Digital Output Channel 31");
	END_DATATYPE

	DATATYPE OpenConnParams (Description := "Params for the OpenConnection Service",
	                         FamilyType := NoFamily)
		DINT Timeout;
		STRING DestAddr;
	END_DATATYPE

	DATATYPE PLC_TIME (FamilyType := NoFamily)
		DINT Year (Description := "PLC Wallclock Year Value");
		DINT Month (Description := "PLC Wallclock Month Value");
		DINT Day (Description := "PLC Wallclock Day Value");
		DINT Hour (Description := "PLC Wallclock Hour Value");
		DINT Minute (Description := "PLC Wallclock Minute Value");
		DINT Second (Description := "PLC Wallclock Seconds Value");
		DINT uSec (Description := "PLC Wallclock Microseconds Value");
	END_DATATYPE

	DATATYPE R1_S1_AI_Raw (FamilyType := NoFamily)
		INT AI00 (Description := "Spare");
		INT AI01 (Description := "Spare");
		INT AI02 (Description := "Spare");
		INT AI03 (Description := "Spare");
		INT AI04 (Description := "Spare");
		INT AI05 (Description := "Spare");
		INT AI06 (Description := "Spare");
		INT AI07 (Description := "Spare");
	END_DATATYPE

	DATATYPE READ_DATA_REQ (FamilyType := NoFamily)
		DINT Timeout;
		DINT BufLen;
	END_DATATYPE

	DATATYPE READ_RESP_STR (FamilyType := NoFamily)
		SockAddr FromAddr;
		STR_4096 Buf;
	END_DATATYPE

	DATATYPE REQUEST_PARAMETERS (FamilyType := NoFamily)
		DINT Type (Description := "1 - TCP 2- UPD");
		SockAddr Addr;
	END_DATATYPE

	DATATYPE SCADA_R_Gas (FamilyType := NoFamily)
		Gas_Alm Alm;
		Gas_Stat Stat;
	END_DATATYPE

	DATATYPE SCADA_R_Sys (Description := "Tube Bundle System Alarms",
	                      FamilyType := NoFamily)
		BOOL Alm[32];
	END_DATATYPE

	DATATYPE SockAddr (FamilyType := NoFamily)
		INT Family (Description := "Address Family Must be 2");
		INT Port (Description := "Port Number");
		DINT Addr (Description := "IP Address");
	END_DATATYPE

	DATATYPE String_1 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[1] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STR_1 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[1] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STR_4096 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[4096] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STR_462 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[462] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STR_OUT (FamilyType := NoFamily)
		DINT LEN;
		SINT BUFF[480];
	END_DATATYPE

	DATATYPE TIME_OF_PLC (FamilyType := NoFamily)
		DINT Year (Description := "PLC Wallclock Year Value");
		DINT Month (Description := "PLC Wallclock Month Value");
		DINT Day (Description := "PLC Wallclock Day Value");
		DINT Hour (Description := "PLC Wallclock Hour Value");
		DINT Minute (Description := "PLC Wallclock Minute Value");
		DINT Second (Description := "PLC Wallclock Seconds Value");
		DINT uSec (Description := "PLC Wallclock Microseconds Value");
		DINT Completely_Written (Description := "Will always be 1 except if it is not yet ready to be read");
	END_DATATYPE

	DATATYPE Tube_Seq_Item (Description := "Tube Sequence Item goes in an array",
	                        FamilyType := NoFamily)
		DINT Tube_Num (Description := "Physical Tube Number");
		DINT Duration (Description := "Time in seconds between switches");
		SINT ZZZZZZZZZZTube_Seq_I2 (Hidden := 1);
		BIT Enabled ZZZZZZZZZZTube_Seq_I2 : 0 (Description := "Able to be switched to");
	END_DATATYPE

	DATATYPE WRT_DATA (FamilyType := NoFamily)
		DINT Timeout;
		SockAddr ToAddr;
		STR_OUT Buffer;
	END_DATATYPE

	MODULE Local (Parent := "Local",
	              ParentModPortId := 1,
	              CatalogNumber := "1756-L71",
	              Vendor := 1,
	              ProductType := 14,
	              ProductCode := 92,
	              Major := 20,
	              Minor := 12,
	              PortLabel := "RxBACKPLANE",
	              ChassisSize := 10,
	              Slot := 0,
	              Mode := 2#0000_0000_0000_0001,
	              CompatibleModule := 0,
	              KeyMask := 2#0000_0000_0001_1111)
	END_MODULE

	MODULE AA9_TBS_Ethernet (Parent := "Local",
	                         ParentModPortId := 1,
	                         CatalogNumber := "1756-EN2T",
	                         Vendor := 1,
	                         ProductType := 12,
	                         ProductCode := 166,
	                         Major := 3,
	                         Minor := 1,
	                         PortLabel := "RxBACKPLANE",
	                         Slot := 1,
	                         NodeAddress := "10.20.45.72",
	                         CommMethod := 536870914,
	                         Mode := 2#0000_0000_0000_0000,
	                         CompatibleModule := 1,
	                         KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>4325481</ConfigID></public>___]]]
	END_MODULE

	MODULE AA9_TBS_DO1 (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1756-OB32",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 17,
	                    Major := 3,
	                    Minor := 2,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 2,
	                    CommMethod := 536870913,
	                    ConfigMethod := 8388609,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111)
			ConfigData  := [28,18,1,0,0,0,0,0,0,0];
			CONNECTION Standard (Rate := 20000,
			                     EventID := 0)
					InputData  := [0,64];
					InputForceData := [0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData  := [64];
					OutputForceData := [64,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE AA9_TBS_DO2 (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1756-OB32",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 17,
	                    Major := 3,
	                    Minor := 2,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 3,
	                    CommMethod := 536870913,
	                    ConfigMethod := 8388609,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111)
			ConfigData  := [28,18,1,0,0,0,0,0,0,0];
			CONNECTION Standard (Rate := 20000,
			                     EventID := 0)
					InputData  := [0,14849];
					InputForceData := [0,0,0,0,1,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData  := [14849];
					OutputForceData := [1,58,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE AA9_TBS_DI1 (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1756-IB32/B",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 12,
	                    Major := 3,
	                    Minor := 6,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 4,
	                    CommMethod := 536870913,
	                    ConfigMethod := 8388609,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111)
			ConfigData  := [28,16,1,0,0,0,1,1,1,1,1,1,1,1,-1,-1];
			CONNECTION StandardInput (Rate := 20000,
			                          EventID := 0)
					InputData  := [0,524289];
					InputForceData := [0,0,0,0,1,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE AA9_TBS_AI1 (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1756-IF16",
	                    Vendor := 1,
	                    ProductType := 10,
	                    ProductCode := 6,
	                    Major := 1,
	                    Minor := 5,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 5,
	                    CommMethod := 536870914,
	                    ConfigMethod := 8388610,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111)
			ConfigData  := [392,40,1,2,100,[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3
		,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000
		,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001
		,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002
		,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000
		,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3
		,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000
		,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001
		,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002
		,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000
		,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000]];
			CONNECTION FloatSingleEndedNoAlm (Rate := 100000,
			                                  EventID := 0)
					InputData  := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8.03594131e+001,-8.87803192e+001,-8.14370575e+001,-5.38522263e+001
		,-7.23114700e+001,-6.58201141e+001,-7.54266129e+001,-1.37568665e+000,-3.21297455e+000,-1.38746262e+000
		,-1.29324341e+000,-1.69171524e+000,-1.41886900e+000,-1.38157654e+000,-7.11612015e+001,-7.82728424e+001
		,14031];
					InputForceData := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,-74,-96,-62,-117,-109,-79,-62,-61,-35,-94,-62,-99,1,85,-62,-125,-89,-112,-62,-32
		,103,-124,-62,-102,-3,-106,-62,-128,85,-81,-65,-112,0,77,-64,96,-104,-79,-65,96,8,-91,-65,-128,9,-40,-65,-128
		,-99,-75,-65,96,89,-78,-65,-114,86,-114,-62,-80,-118,-100,-62,107,54,-72,-62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE AA9_TBS_AI2 (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1756-IF16",
	                    Vendor := 1,
	                    ProductType := 10,
	                    ProductCode := 6,
	                    Major := 1,
	                    Minor := 5,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 6,
	                    CommMethod := 536870914,
	                    ConfigMethod := 8388610,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111)
			ConfigData  := [392,40,1,2,100,[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3
		,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000
		,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001
		,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002
		,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000
		,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3
		,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000
		,2.00000000e+001,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001
		,-1.00000000e+002,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002
		,0.00000000e+000,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,-1.00000000e+002,0.00000000e+000
		,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000,2.00000000e+001,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,0.00000000e+000,1.00000000e+002,0.00000000e+000]];
			CONNECTION FloatSingleEndedNoAlm (Rate := 100000,
			                                  EventID := 0)
					InputData  := [16384,-32768,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,-1.40316772e+000,-4.56393967e+001,-4.85700264e+001,-1.32072449e+000
		,-1.36391068e+000,-1.47187042e+000,-1.38746262e+000,-1.40905762e+000,-1.39138794e+000,-7.31182251e+001
		,-1.46598053e+000,-8.96596985e+001,-1.35998154e+000,-1.41886900e+000,6.59561157e-003,2.34584500e+001
		,21144];
					InputForceData := [0,64,0,-128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,-96,27,-76,-65,118,-3,51,-62,-116,5,63,-62,-128,13,-87,-65,-32,-107,-81,-65
		,64,102,-68,-65,-128,-41,-80,-65,-96,-36,-76,-65,-64,-103,-78,-65,-118,61,-110,-62,-32,37,-68,-65,-65,77,-77
		,-62,-96,18,-83,-65,-32,28,-75,-65,0,32,-40,59,-120,-16,-68,65,-92,80,116,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE AA9_TBS_AI3 (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1756-IF16",
	                    Vendor := 1,
	                    ProductType := 10,
	                    ProductCode := 6,
	                    Major := 1,
	                    Minor := 5,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 7,
	                    CommMethod := 536870914,
	                    ConfigMethod := 8388610,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111)
			ConfigData  := [392,40,1,2,100,[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000,2.00000000e+001,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000,2.00000000e+001,0.00000000e+000],[0,3,0
		,4.00000000e+000,2.00000000e+001,0.00000000e+000,1.00000000e+001,0.00000000e+000],[0,3,0,4.00000000e+000
		,2.00000000e+001,0.00000000e+000,1.00000000e+002,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001
		,4.00000000e+000,2.00000000e+001,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000
		,2.00000000e+001,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000,2.00000000e+001
		,0.00000000e+000],[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000,2.00000000e+001,0.00000000e+000
		],[0,3,0,4.00000000e+000,2.00000000e+001,4.00000000e+000,2.00000000e+001,0.00000000e+000],[0,0,0
		,-1.00000000e+001,1.00000000e+001,-1.00000000e+001,1.00000000e+001,0.00000000e+000],[0,0,0,-1.00000000e+001
		,1.00000000e+001,-1.00000000e+001,1.00000000e+001,0.00000000e+000],[0,0,0,-1.00000000e+001,1.00000000e+001
		,-1.00000000e+001,1.00000000e+001,0.00000000e+000],[0,0,0,-1.00000000e+001,1.00000000e+001,-1.00000000e+001
		,1.00000000e+001,0.00000000e+000],[0,0,0,-1.00000000e+001,1.00000000e+001,-1.00000000e+001,1.00000000e+001
		,0.00000000e+000],[0,0,0,-1.00000000e+001,1.00000000e+001,-1.00000000e+001,1.00000000e+001,0.00000000e+000
		],[0,0,0,-1.00000000e+001,1.00000000e+001,-1.00000000e+001,1.00000000e+001,0.00000000e+000]];
			CONNECTION FloatSingleEndedNoAlm (Rate := 100000,
			                                  EventID := 0)
					InputData (COMMENT.CH0DATA := "Gas Guard CH4 Sensor 4-20mA",
            COMMENT.CH1DATA := "Gas Guard O2 Sensor 4-20mA",
            COMMENT.CH2DATA := "Mass Flow Controller 4-20mA",
            COMMENT.CH3DATA := "Servomex O2 cell 4-20mA") := [496,-32768,0,0,0,0,64,64,64,64,64,0,0,0,0,0,0,0,4.04768562e+000,1.74894047e+001,4.92462158e-001,2.00037231e+001
		,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,-1.25125889e-003
		,-9.38444166e-004,-1.25125889e-003,-1.25125889e-003,-1.25125889e-003,-1.25125889e-003,-1.87688833e-003
		,4648];
					InputForceData := [-16,1,0,-128,0,0,0,0,64,64,64,64,64,0,0,0,0,0,0,0,-92,-122,-127,64,77,-22,-117,65,0,36,-4,62,-96,7,-96,65,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,72,1,-92,-70,-20,1,118,-70,72,1,-92,-70,72,1,-92,-70,72,1,-92,-70,72,1,-92,-70,-20,1,-10,-70,40,18,36,-70
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	ADD_ON_INSTRUCTION_DEFINITION LinearScalingIn (Description := "$N",
	                                               Revision := "1.0",
	                                               ExecutePrescan := No,
	                                               ExecutePostscan := No,
	                                               ExecuteEnableInFalse := No,
	                                               CreatedDate := "2012-03-27T05:10:49.342Z",
	                                               CreatedBy := "AUC\cdrysdale-v",
	                                               EditedDate := "2014-07-07T07:34:34.395Z",
	                                               EditedBy := "Jasdip_LT3\Paul Owen",
	                                               SoftwareRevision := "v20.00")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			InputMin : REAL (Description := "Minimum Raw Data Value",
			                    Usage := Input,
			                    RADIX := Float,
			                    Required := Yes,
			                    Visible := Yes,
			                    DefaultData := 0.00000000e+000);
			InputMax : REAL (Description := "Maximum Raw Data Value",
			                    Usage := Input,
			                    RADIX := Float,
			                    Required := Yes,
			                    Visible := Yes,
			                    DefaultData := 0.00000000e+000);
			OutputMin : REAL (Description := "Minimum Engineering Output Value",
			                     Usage := Input,
			                     RADIX := Float,
			                     Required := Yes,
			                     Visible := Yes,
			                     DefaultData := 0.00000000e+000);
			OutputMax : REAL (Description := "Maximum Engineering Output Value",
			                     Usage := Input,
			                     RADIX := Float,
			                     Required := Yes,
			                     Visible := Yes,
			                     DefaultData := 0.00000000e+000);
			Input : REAL (Description := "Current Raw Input Value",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			Output : REAL (Description := "Output Value in Engineering Units$N(Final calculation step: DividedValue + OutputMin)",
			                  Usage := Output,
			                  RADIX := Float,
			                  Required := Yes,
			                  Visible := Yes,
			                  ExternalAccess := Read/Write,
			                  DefaultData := 0.00000000e+000);
		END_PARAMETERS

		LOCAL_TAGS
			ADCFraction : REAL (Description := "Difference betwen current input value and InputMin$N(Current Input - InputMin)",
			                      RADIX := Float,
			                      ExternalAccess := None,
			                      DefaultData := 0.00000000e+000);
			ADCRange : REAL (Description := "Difference between InputMax and InputMin $N(InputMax - InputMin)",
			                   RADIX := Float,
			                   ExternalAccess := None,
			                   DefaultData := 0.00000000e+000);
			OutputRange : REAL (Description := "Difference between Output Max and OutputMin$N(OutputMax - OutputMin)",
			                      RADIX := Float,
			                      ExternalAccess := None,
			                      DefaultData := 0.00000000e+000);
			MultipliedNumerator : REAL (Description := "Numerator value which is the result of multiplying the ADCFraction and the OutputRange",
			                              RADIX := Float,
			                              ExternalAccess := None,
			                              DefaultData := 0.00000000e+000);
			DividedValue : REAL (Description := "Temporary Value resulting from MultipliedNumerator / ADCRange",
			                       RADIX := Float,
			                       ExternalAccess := None,
			                       DefaultData := 0.00000000e+000);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "THis is a Add-On Instruction for scaling a linear relationship from an ADC to engineering Values$N"
				    "$N"
				    "Output =  (Current ADC Value - InputMin)*(OutputMax - OutputMin)                                                 $N"
				    "____________________________________________               + Output Min$N"
				    "( Input Max - InputMin)                                    $N"
				    "$N"
				    "$N"
				    "Output   =                            (ADCFraction)*(OutputRange)                                                                            $N"
				    "___________________________________               + Output Min$N"
				    "( InputRange)                                    ";
				N: NOP();
				RC: "Calculate the ADCFraction, OutputRange and ADCRAnge";
				N: SUB(Input,InputMin,ADCFraction)SUB(OutputMax,OutputMin,OutputRange)SUB(InputMax,InputMin,ADCRange);
				RC: "Calcualte the Numerator and then divide by the Input Range$N"
				    "$N"
				    "MultipliedNumerator = ADCFraction * Output Range$N"
				    "";
				N: MUL(ADCFraction,OutputRange,MultipliedNumerator)DIV(MultipliedNumerator,ADCRange,DividedValue);
				RC: "Output =  OutputMin plus the DividedValue";
				N: ADD(DividedValue,OutputMin,Output);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION MBUS_REAL (Description := "Transfer Modbus 16Bit Address Registers n and n+1 to a real Data Type for RA Modbus TCP Implementation.",
	                                         Revision := "1.0",
	                                         RevisionNote := "Version 1.0$NInital concept Code 30 June 2014",
	                                         Vendor := "INACO",
	                                         ExecutePrescan := No,
	                                         ExecutePostscan := No,
	                                         ExecuteEnableInFalse := No,
	                                         CreatedDate := "2014-07-01T01:50:57.626Z",
	                                         CreatedBy := "EWS01\Administrator",
	                                         EditedDate := "2014-07-01T05:21:55.721Z",
	                                         EditedBy := "Adrian-PC\Adrian",
	                                         SoftwareRevision := "v20.01")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			REG1 : INT (Description := "16Bit Register (n)",
			                Usage := Input,
			                RADIX := Decimal,
			                Required := Yes,
			                Visible := Yes,
			                ExternalAccess := Read Only,
			                DefaultData := 0);
			REG2 : INT (Description := "16Bit Register (n+1)",
			                Usage := Input,
			                RADIX := Decimal,
			                Required := Yes,
			                Visible := Yes,
			                ExternalAccess := Read Only,
			                DefaultData := 0);
			VAL : REAL (Description := "Converted Value",
			               Usage := Output,
			               RADIX := Float,
			               Required := Yes,
			               Visible := Yes,
			               ExternalAccess := Read/Write,
			               DefaultData := 0.00000000e+000);
		END_PARAMETERS

		LOCAL_TAGS
			TEMPD : DINT (RADIX := Decimal,
			                ExternalAccess := None,
			                DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "Move Bits from Low and High Registers$N"
				    "";
				N: BTD(REG1,0,TEMPD,0,16)BTD(REG2,0,TEMPD,16,16);
				N: COP(TEMPD,VAL,1);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	TAG
		A1_C5PLUS_RAW : REAL (RADIX := Float) := 1.75711100e-002;
		A1_CARBON_DIOXIDE : REAL (Description := "Carbon Dioxide reading from Precisive Analyser 1",
		            RADIX := Float) := 3.02316099e-001;
		A1_CO2_RAW : REAL (RADIX := Float) := 2.94770000e-001;
		A1_Diagnostics : REAL[8] (RADIX := Float) := [6.68211594e+001,9.90948200e-001,5.99619980e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000];
		A1_Discrete_Inputs : BOOL[32] (Description := "Precisive CH4-CO2 Analyser",
		            COMMENT[0] := "Precisive CH4-CO2 Analyser Status: On = FAULT",
		            COMMENT[1] := "Precisive CH4-CO2 Analyser Gas Cell Low Temp: ON = HIGH",
		            COMMENT[2] := "Precisive CH4-CO2 Analyser Gas Cell High Temp: ON = LOW",
		            COMMENT[3] := "Precisive CH4-CO2 Analyser Purge Status: On = PURGING",
		            COMMENT[4] := "Precisive CH4-CO2 Analyser Re-zeroing Status: On = RE_ZEROING",
		            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0];
		A1_ETHANE_RAW : REAL (RADIX := Float) := 2.15036739e-002;
		A1_Iso_BUTANE_RAW : REAL (RADIX := Float) := 8.18605255e-003;
		A1_METHANE : REAL (Description := "Methane reading from Precisive Analyser 1",
		            COMMENT.0 := "Methane Reading from Precisive Analyser 1",
		            COMMENT.1 := "Carbon Dioxide Reading from Precisive Analyser 1",
		            COMMENT.2 := "Carbon Monoxide Reading from Precisive Analyser 2",
		            COMMENT.3 := "Oxygen Reading from Servomex Analyser",
		            RADIX := Float) := 1.11144614e+000;
		A1_METHANE_RAW : REAL (RADIX := Float) := 1.11144614e+000;
		A1_n_BUTANE_RAW : REAL (RADIX := Float) := 1.82405789e-003;
		A1_PROPANE_RAW : REAL (RADIX := Float) := 4.97750640e-002;
		A1_Write_Hold_Reg : INT[8] (COMMENT[0] := "Precisive 1 Prediction Beam Average Time",
		            COMMENT[1] := "Precisvie 1 Zero Beam Average Time",
		            COMMENT[2] := "Precisive 1 Purge Average Time",
		            RADIX := Decimal) := [5,30,60,0,0,0,0,0];
		A2_CARBON_MONOXIDE : REAL (Description := "Carbon Monoxide reading from Precisive Analyser 2",
		            RADIX := Float) := 0.00000000e+000;
		A2_CO_RAW : REAL (RADIX := Float) := 0.00000000e+000;
		A2_Diagnostics : REAL[8] (RADIX := Float) := [9.69029465e+001,1.00261354e+000,6.00060005e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000];
		A2_Discrete_Inputs : BOOL[32] (Description := "Precisive CH4-CO2 Analyser Gas Cell Re-zeroing: On = RE-ZEROING",
		            COMMENT[0] := "Precisive CO-O2 Analyser Status: On = FAULT",
		            COMMENT[1] := "Precisive CO-O2 Analyser Gas Cell Low Temp: ON = HIGH",
		            COMMENT[2] := "Precisive CO-O2 Analyser Gas Cell High Temp: ON = LOW",
		            COMMENT[3] := "Precisive CO-O2 Analyser Purge Status: On = PURGING",
		            COMMENT[4] := "Precisive CO-O2 Analyser Re-zeroing Status: On = RE_ZEROING",
		            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0];
		A2_OXYGEN : REAL (Description := "Oxygen reading from Servomex Cell inside Precisive Analyser 2",
		            RADIX := Float) := 2.00037231e+001;
		A2_OXYGEN_RAW : REAL (RADIX := Float) := 2.00037231e+001;
		A2_Write_Hold_Reg : INT[8] (COMMENT[0] := "Precisive 2 Prediction Beam Average Time",
		            COMMENT[1] := "Precisvie 2 Zero Beam Average Time",
		            COMMENT[2] := "Precisive 2 Purge Average Time",
		            RADIX := Decimal) := [30,30,60,0,0,0,0,0];
		Always : Always  := [59897,0,0,5,-128,7];
		APC_ENVR_RAIL_LW901_ALARM : BOOL (Description := "Rail Monitoring LW901 General Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_BLUE : BOOL (Description := "Rail Monitoring LW901 Blue Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_CREST_EXTENSOMETER : BOOL (Description := "Rail Monitoring LW901 Crest Extensometer Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_DISPLACEMENT : BOOL (Description := "Rail Monitoring LW901 Displacement Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_FIXED_INCLINOMETER : BOOL (Description := "Rail Monitoring LW901 In Place Inclonometer Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_GREY : BOOL (Description := "Rail Monitoring LW901 Grey Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_PIEZOMETER : BOOL (Description := "Rail Monitoring LW901 Piezometer Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_RED : BOOL (Description := "Rail Monitoring LW901 Red Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_STEP_DISPLACEMENT : BOOL (Description := "Rail Monitoring LW901 Step Displacement Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_STRESS : BOOL (Description := "Rail Monitoring LW901 Stress Alarm",
		            RADIX := Decimal) := 0;
		APC_ENVR_RAIL_LW901_YELLOW : BOOL (Description := "Rail Monitoring LW901 Yellow Alarm",
		            RADIX := Decimal) := 0;
		CONSTANT_Count_Up_Holding : DINT (Description := "Always set to 2 because after the second time will enter Fast Holding mode",
		            RADIX := Decimal) := 2;
		CONSTANT_Dead_Time : DINT (Description := "Milliseconds to wait after the official sample until switch to the next tube in the sequence",
		            RADIX := Decimal) := 4000;
		CONSTANT_Fast_Holding_Dead_Time : DINT (Description := "Once in Fast Holding, milliseconds to wait after official sample before $'switching$' again",
		            RADIX := Decimal) := 2000;
		CONSTANT_Fast_Holding_Duration : DINT (Description := "Once in Fast Holding, the milliseconds duration between $'switches$'",
		            RADIX := Decimal) := 5000;
		CONSTANT_One_Second : DINT (Description := "A Timer can do something every second",
		            RADIX := Decimal) := 1000;
		CONSTANT_Seq_Capacity : DINT (Description := "Capacity of SMRTGS_W_Tubes_Seq array, which is one less than its size, given that 0th element not used",
		            RADIX := Decimal) := 99;
		CONSTANT_Stale_Reading_Age : DINT (Description := "Number of seconds at which a Reading is considered to old to be worth displaying in Citect anymore",
		            RADIX := Decimal) := 604800;
		CONSTANT_Zero : DINT (Description := "Used for initialisation only by Counters that do not need PRE and Timers that set it dynamically",
		            RADIX := Decimal) := 0;
		Global_Logic : BOOL[32] (Description := "Alarm Reset",
		            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0];
		HMI_R_Gas : HMI_R_Gas  := [3.02316099e-001,0.00000000e+000,2.06412888e+001,1.11144614e+000,-7.54266129e+001,7,151,-8.03594131e+001
				,-8.87803192e+001,-8.14370575e+001,-5.38522263e+001,-7.23114700e+001,-6.58201141e+001,-7.54266129e+001
				,-1.37568665e+000,-3.21297455e+000,-1.38746262e+000,-1.29324341e+000,-1.69171524e+000,-1.41886900e+000
				,-1.38157654e+000,-7.11612015e+001,-7.82728424e+001,-1.40316772e+000,-4.56393967e+001,-4.85700264e+001
				,-1.32072449e+000,-1.36391068e+000,-1.47187042e+000,-1.38746262e+000,-1.40905762e+000,-1.39138794e+000
				,-7.31182251e+001,-1.46598053e+000,-8.96596985e+001,-1.35998154e+000,-1.41886900e+000,2.34584500e+001
				,0,0];
		HMI_R_PLC : HMI_R_PLC  := [[64,0,0,0],[1,58,0,0],[1,0,8,0],[7.14249420e+000,5.79514885e+000,6.97101307e+000,1.14766083e+001,8.42859459e+000
				,9.38524055e+000,7.93174171e+000,1.97814598e+001,1.94859238e+001,1.97786331e+001,1.97927666e+001
				,1.97293262e+001,1.97726669e+001,1.97805176e+001,8.61640644e+000,7.47571754e+000,0,0],[1.97754936e+001
				,1.27944298e+001,1.23980770e+001,1.97874279e+001,1.97808323e+001,1.97644997e+001,1.97789478e+001
				,1.97761192e+001,1.97776909e+001,8.29951286e+000,1.97654419e+001,5.65539074e+000,1.97830315e+001
				,1.97732944e+001,0.00000000e+000,7.77847767e+000,0,64],[4.04611492e+000,1.74894047e+001,4.92854595e-001
				,2.00037231e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,-1.25125889e-003,-9.38444166e-004,-1.25125889e-003,-9.38444166e-004,-1.25125889e-003,-9.38444166e-004
				,-1.87688833e-003,-72,19]];
		HMI_W : HMI_W  := [0,0];
		L1 : Local_Chassis (Description := "Layout of the PLC by slots",
		            COMMENT.S2 := "Second slot - 32 Digital outputs",
		            COMMENT.S3 := "Third slot - 32 Digital outputs",
		            COMMENT.S3.DO.0 := "Sample Pump Outlet Solenoid$N 0 = Pump A$N 1 = Pump B",
		            COMMENT.S3.DO.1 := "Sample Pump Inlet Solenoid$N0 = Pump B$N1 = Pump A",
		            COMMENT.S3.DO.2 := "Bag Sample Solenoid",
		            COMMENT.S3.DO.3 := "Calibration Solenoid - Flow to analysers switches from sample to cal gas",
		            COMMENT.S3.DO.4 := "Zero Gas Solenoid",
		            COMMENT.S3.DO.5 := "Methane Cylinder Solenoid",
		            COMMENT.S3.DO.6 := "Carbon Dioxide Cylinder Solenoid",
		            COMMENT.S3.DO.7 := "Carbon Monoxide Cylinder Solenoid",
		            COMMENT.S3.DO.8 := "Sample Pump A Control",
		            COMMENT.S3.DO.9 := "Sample Pump B Control",
		            COMMENT.S3.DO.10 := "Bag Sample Pump Control",
		            COMMENT.S3.DO.11 := "Bypass Pump 1 Control",
		            COMMENT.S3.DO.12 := "Bypass Pump 2 Control",
		            COMMENT.S3.DO.13 := "Bypass Pump 3 Control",
		            COMMENT.S3.DO.16 := "Fire Damper Control",
		            COMMENT.S3.DO.17 := "Blue Strobe - Ventilation Alarm",
		            COMMENT.S3.DO.18 := "Red Strobe - Gas Alarm",
		            COMMENT.S4 := "Fourth Slot - 32 Digital Inputs",
		            COMMENT.S4.DI.0 := "Dehumidifier High Temp Alarm",
		            COMMENT.S4.DI.16 := "Fire System Isolated",
		            COMMENT.S4.DI.17 := "Fire Alarm",
		            COMMENT.S4.DI.18 := "Fire System Fault",
		            COMMENT.S4.DI.19 := "Safety Relay Gas Alarm",
		            COMMENT.S4.DI.20 := "Low Oxygen in Gas Room Alarm - Safety Contactor 6",
		            COMMENT.S4.DI.21 := "Ventilation Fail Alarm - Safety Contactor 4",
		            COMMENT.S4.DI.22 := "Fire Alarm - Safety Contactor 5",
		            COMMENT.S4.DI.23 := "Gas Room Ventilation System Bypassed",
		            COMMENT.S4.DI.24 := "UPS AC Fail",
		            COMMENT.S5 := "Fifth slot - 16 Analogue inputs",
		            COMMENT.S5.AI00 := "Vacuum Transmitter - Sample Point 1",
		            COMMENT.S5.AI01 := "Vacuum Transmitter - Sample Point 2",
		            COMMENT.S5.AI02 := "Vacuum Transmitter - Sample Point 3",
		            COMMENT.S5.AI03 := "Vacuum Transmitter - Sample Point 4",
		            COMMENT.S5.AI04 := "Vacuum Transmitter - Sample Point 5",
		            COMMENT.S5.AI05 := "Vacuum Transmitter - Sample Point 6",
		            COMMENT.S5.AI06 := "Vacuum Transmitter - Sample Point 7",
		            COMMENT.S5.AI07 := "Vacuum Transmitter - Sample Point 8",
		            COMMENT.S5.AI08 := "Vacuum Transmitter - Sample Point 9",
		            COMMENT.S5.AI09 := "Vacuum Transmitter - Sample Point 10",
		            COMMENT.S5.AI10 := "Vacuum Transmitter - Sample Point 11",
		            COMMENT.S5.AI11 := "Vacuum Transmitter - Sample Point 12",
		            COMMENT.S5.AI12 := "Vacuum Transmitter - Sample Point 13",
		            COMMENT.S5.AI13 := "Vacuum Transmitter - Sample Point 14",
		            COMMENT.S5.AI14 := "Vacuum Transmitter - Sample Point 15",
		            COMMENT.S5.AI15 := "Vacuum Transmitter - Sample Point 16",
		            COMMENT.S5[0] := "VacuumTransmitter - Sample Point 1",
		            COMMENT.S5[1] := "VacuumTransmitter - Sample Point 2",
		            COMMENT.S5[2] := "VacuumTransmitter - Sample Point 3",
		            COMMENT.S5[3] := "VacuumTransmitter - Sample Point 4",
		            COMMENT.S5[4] := "VacuumTransmitter - Sample Point 5",
		            COMMENT.S5[5] := "VacuumTransmitter - Sample Point 6",
		            COMMENT.S5[6] := "VacuumTransmitter - Sample Point 7",
		            COMMENT.S5[7] := "VacuumTransmitter - Sample Point 8",
		            COMMENT.S5[8] := "VacuumTransmitter - Sample Point 9",
		            COMMENT.S5[9] := "VacuumTransmitter - Sample Point 10",
		            COMMENT.S5[10] := "VacuumTransmitter - Sample Point 11",
		            COMMENT.S5[11] := "VacuumTransmitter - Sample Point 12",
		            COMMENT.S5[12] := "VacuumTransmitter - Sample Point 13",
		            COMMENT.S5[13] := "VacuumTransmitter - Sample Point 14",
		            COMMENT.S5[14] := "VacuumTransmitter - Sample Point 15",
		            COMMENT.S5[15] := "VacuumTransmitter - Sample Point 16",
		            COMMENT.S6 := "Sixth slot - 16 Analogue inputs",
		            COMMENT.S6.AI00 := "Vacuum Transmitter - Sample Point 17",
		            COMMENT.S6.AI01 := "Vacuum Transmitter - Sample Point 18",
		            COMMENT.S6.AI02 := "Vacuum Transmitter - Sample Point 19",
		            COMMENT.S6.AI03 := "Vacuum Transmitter - Sample Point 20",
		            COMMENT.S6.AI04 := "Vacuum Transmitter - Sample Point 21",
		            COMMENT.S6.AI05 := "Vacuum Transmitter - Sample Point 22",
		            COMMENT.S6.AI06 := "Vacuum Transmitter - Sample Point 23",
		            COMMENT.S6.AI07 := "Vacuum Transmitter - Sample Point 24",
		            COMMENT.S6.AI08 := "Vacuum Transmitter - Sample Point 25",
		            COMMENT.S6.AI09 := "Vacuum Transmitter - Sample Point 26",
		            COMMENT.S6.AI10 := "Vacuum Transmitter - Sample Point 27",
		            COMMENT.S6.AI11 := "Vacuum Transmitter - Sample Point 28",
		            COMMENT.S6.AI12 := "Vacuum Transmitter - Sample Point 29",
		            COMMENT.S6.AI13 := "Vacuum Transmitter - Sample Point 30",
		            COMMENT.S6.AI15 := "Sampe Pressure Transmitter",
		            COMMENT.S6[0] := "VacuumTransmitter - Sample Point 17",
		            COMMENT.S6[1] := "VacuumTransmitter - Sample Point 18",
		            COMMENT.S6[2] := "VacuumTransmitter - Sample Point 19",
		            COMMENT.S6[3] := "VacuumTransmitter - Sample Point 20",
		            COMMENT.S6[4] := "VacuumTransmitter - Sample Point 21",
		            COMMENT.S6[5] := "VacuumTransmitter - Sample Point 22",
		            COMMENT.S6[6] := "VacuumTransmitter - Sample Point 23",
		            COMMENT.S6[7] := "VacuumTransmitter - Sample Point 24",
		            COMMENT.S6[8] := "VacuumTransmitter - Sample Point 25",
		            COMMENT.S6[9] := "VacuumTransmitter - Sample Point 26",
		            COMMENT.S6[10] := "VacuumTransmitter - Sample Point 27",
		            COMMENT.S6[11] := "VacuumTransmitter - Sample Point 28",
		            COMMENT.S6[12] := "VacuumTransmitter - Sample Point 29",
		            COMMENT.S6[13] := "VacuumTransmitter - Sample Point 30",
		            COMMENT.S6[15] := "Sample Pressure Transmitter 4-20mA",
		            COMMENT.S7 := "Seventh slot - 16 Analogue inputs",
		            COMMENT.S7.AI00 := "Gas Guard CH4 Reading",
		            COMMENT.S7.AI01 := "Gas guard O2 Reading",
		            COMMENT.S7.AI02 := "Mass Flow Controller - Flow Rate",
		            COMMENT.S7[0] := "Gas Guard CH4 Reading",
		            COMMENT.S7[1] := "Gas Guard O2 Reading",
		            COMMENT.S7[2] := "Mass Flow Controller Flow Rate") := [[64],[14849],[524289],[-8.03574524e+001,-8.87822800e+001,-8.14311676e+001,-5.32299843e+001,-7.23173599e+001
				,-6.63618774e+001,-7.54913864e+001,-1.36391068e+000,-3.21100998e+000,-1.38157654e+000,-1.28931808e+000
				,-1.69564056e+000,-1.41886900e+000,-1.36979675e+000,-7.11553116e+001,-7.82767639e+001,0
				,0],[-1.40709300e+000,-4.49975200e+001,-4.77554169e+001,-1.32072449e+000,-1.37176132e+000
				,-1.47187042e+000,-1.38157654e+000,-1.41298294e+000,-1.39531708e+000,-7.31201935e+001,-1.46990585e+000
				,-8.96518478e+001,-1.35213089e+000,-1.41494370e+000,6.59561157e-003,2.36174469e+001,0,0],[4.04768562e+000
				,1.74894047e+001,4.92462158e-001,2.00037231e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,-1.25125889e-003,-9.38444166e-004,-1.25125889e-003,-1.25125889e-003
				,-1.25125889e-003,-1.25125889e-003,-1.87688833e-003,0,0]];
		MBTI_Buf_Len_Sent : DINT (Description := "Value returned from a Write MSG block to indicate the number of bytes sent.",
		            RADIX := Decimal) := 12;
		MBTI_DestAddress_00 : OpenConnParams (Description := "Params for the OpenConnection Service Don$'t set address here, set it in the MBTU_Connections array.") := [5000,[20,'10.20.45.71?port=50202$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				]];
		MBTI_DestAddress_01 : OpenConnParams (Description := "Params for the OpenConnection Service Don$'t set address here, set it in the MBTU_Connections array.") := [5000,[20,'10.20.45.70?port=50202$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				]];
		MBTI_DestAddress_02 : OpenConnParams (Description := "Params for the OpenConnection Service Don$'t set address here, set it in the MBTU_Connections array.") := [5000,[20,'10.20.45.71?port=50202$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				]];
		MBTI_DestAddress_03 : OpenConnParams (Description := "Params for the OpenConnection Service Don$'t set address here, set it in the MBTU_Connections array.") := [5000,[20,'10.20.45.70?port=50202$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				]];
		MBTI_Instance : DINT[4] (Description := "Used to temporarily store the instance value for sockets.",
		            RADIX := Decimal) := [20882,27539,26847,17858];
		MBTI_Read_Data_Req : READ_DATA_REQ[4] (Description := "Array to store the buffer length and timeout for read request.  Leave the timeout = 0 Index = connection id.") := [[0,484],[0,484],[0,484],[0,484]];
		MBTI_Read_Resp : READ_RESP_STR[4] (Description := "Array to store the data received for each connection.  index = connection id.") := [[[0,0,0],[0,'=$8D$00$00$00$06$00$05$00$00$00$00$8E(y<$B0$E0$F0=K$1E$CB<$06$15::$EF$F1J<$8F$EC$18>$96$FDgB$C4$AE$C8?}$D9$16Bo$A4oB$85$00$00$00$00$DE$DB?$0B$FA$B3@$9D$00$00$00$00$E8$04=$9D$18$96?$CC$C8$048$04B$11$D7$02+$03$t$00$DE$00$DE$0F$FF$00$00$00$00$00$00$00$00$00$00$03$E7$04D$00$00$00$00$00$00$00$00$00$00$02$FD$1A$l$10$E1$04W$00$C8$048$04B$11$D7$02+$03$t$00$DE$00$DE$0F$FF$00$00$00$00$00$00$00$00$00$00$03$E7$04D$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$1Ea$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$1Ea$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00{
				]],[[0,0,0],[0,'=$8E$00$00$00$06$00$05$00$00$00$00$00$E9$FFE$83$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00U$A4?$80$06%Bp$CEOB$C1$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00,[$00$00$00$06$00$05$00$00$00$00,_$00$00$00$06$00$10$00$10$00$03,`$00$00$00;$00$048s$E4@$8D$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00u$CE<v$00$00$00$00$00$00$00$00dK?$80$F9*Bo$07$D8B$AF$00$00$00$00$00$00$00$00$00$00$00$00,b$00$00$00$06$00$05$00$00$00$00,g$00$00$00$06$00$10$00$10$00$03,h$00$00$00$06$00$10$00$10$00$03$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$01M$00$DE$00w8$A0$00$00$00$F3$00$04$F0$02$9A$00$01$00$02$00$03$01M$15$B2$03$t"$B8$1Ea
				
				]],[[0,0,0],[0,'A9$00$00$00$06$00$10$00$11$00$02$00$00$03$01$85$02$CB$00$00$03$t"$B8$1Ea09$00$00$00$01M$15$B2$03$t"$B8$1Ea
				]]];
		MBTI_Write_Data_Out : WRT_DATA[4] (Description := "Input params used on write operations.  Index = Connection ID.") := [[500,[2,0,0],[12,[61,-115,0,0,0,6,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-115,61,0,0
				,0,0,116,2,0,-128,8,0,0,-128]]],[500,[2,0,0],[12,[61,-114,0,0,0,6,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,1,0,-114,61,0,0,0,0,116,2,0,-128,8,0,0,-128]]],[500,[2,0,0],[17,[65,40,0,0,0,11,0,16,0,17,0,2,4,0,5,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,40,65,0,0,0,0,116,2,0,-128,8,0,0,-128]]],[500,[2,0,0],[17,[65,57,0,0,0,11,0,16,0,17,0,2,4,0
				,30,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,57,65,0,0,0,0,116,2,0,-128,18,0,0,-128]]]];
		MBTU_Connections : MBConnection[4] (Description := "Array of connections objects. Configure you connection and see its status here.") := [[[20,'10.20.45.71?port=502$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				],1,4,1,0],[[20,'10.20.45.70?port=502$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				],1,4,1,0],[[20,'10.20.45.71?port=502$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				],0,4,0,0],[[20,'10.20.45.70?port=502$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				],0,4,0,0]];
		MBTU_EnetModulePort : STRING (Description := "Path to desired slot of  ENET module 1769 $'$$01$$00$'  1756  $'$$01$$xx. This will be written into all the CIP message blocks during initialization") := [2,'$01$01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
				];
		MBTU_EnMBTCP : BOOL (Description := "Enables MB Communications",
		            RADIX := Decimal) := 1;
		MBTU_MB_0xx : BOOL[1024] (Description := "Local data storage used for reading to and writing from.  Coil Values.",
		            COMMENT[1] := "Precisive Analyser 1: Perform Re Zero",
		            COMMENT[2] := "Precisive Analyser 2: Perform Re Zero",
		            RADIX := Decimal) := [2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#0
				,2#0,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#1,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1
				,2#1,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0];
		MBTU_MB_1xx : BOOL[1024] (Description := "Local data storage used for reading to and writing from.  Descrete inputl Values.",
		            COMMENT[1] := "Precisive Analyser 1 - Status Indicator",
		            COMMENT[2] := "Precisive Analyser 1 - Gas Cell Low Temp: On = High",
		            COMMENT[3] := "Precisive Analyser 1 - Gas Cell High Temp: On = Low",
		            COMMENT[4] := "Precisive Analyser 1 - Gas Cell Purge Status: On = PURGING",
		            COMMENT[5] := "Precisive Analyser 1 - Gas Cell Re-zeroing Status: On = RE-ZEROING",
		            COMMENT[6] := "Precisive Analyser 1 - Emitter Tune Status: On = TUNING LIGHT SOURCE",
		            COMMENT[7] := "Precisive Analyser 2 - Status Indicator",
		            COMMENT[8] := "Precisive Analyser 2 - Gas Cell Low Temp: On = High",
		            COMMENT[9] := "Precisive Analyser 2 - Gas Cell High Temp: On = Low",
		            COMMENT[10] := "Precisive Analyser 2 - Gas Cell Purge Status: On = PURGING",
		            COMMENT[11] := "Precisive Analyser 2 - Gas Cell Re-zeroing Status: On = RE-ZEROING",
		            COMMENT[12] := "Precisive Analyser 2 - Emitter Tune Status: On = TUNING LIGHT SOURCE",
		            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#0,2#1,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#1
				,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#0,2#1,2#0,2#0
				,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#1,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#1,2#1
				,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0
				,2#0,2#0,2#0,2#1,2#0,2#1,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#1,2#0,2#1,2#1,2#0,2#1,2#0,2#0,2#0,2#0
				,2#0,2#0,2#1,2#1,2#0,2#1,2#0,2#1,2#0,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#1,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1
				,2#1,2#0,2#1,2#1,2#1,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#1,2#1,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0
				,2#1,2#1,2#1,2#0,2#0,2#1,2#1,2#1,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0];
		MBTU_MB_3xx : INT[256] (Description := "Local data storage used for reading to and writing from.  Input Register Values.",
		            RADIX := Decimal) := [0,17374,16270,10361,15536,-7952,15691,7883,15366,5434,15087,-3766,15503,-5096,16022,-665,17092,-20792
				,16253,-9962,17007,-23441,17029,0,0,-8485,16139,-1357,16541,0,16126,0,-16512,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5633,17795,0,0,0,0,0,0,0,0,0,0,0,0,21924,16256
				,1573,17008,-12721,17089,0,0,0,0,0,0,0,11985,0,-16512,0,0,0,0,0,432,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0];
		MBTU_MB_4xx : INT[256] (Description := "Local data storage used for reading to and writing from.  Holding register  Values.",
		            COMMENT[1] := "Precisive Analyser 1 Prediction Average Time",
		            COMMENT[2] := "Precisive Analyser 1 Purge Average Time",
		            COMMENT[3] := "Precisive Analyser 1 Zero Average Time",
		            COMMENT[10] := "Precisive Analyser 2 Prediction Average Time",
		            COMMENT[11] := "Precisive Analyser 2 Purge Average Time",
		            COMMENT[12] := "Precisive Analyser 2 Zero Average Time",
		            RADIX := Decimal) := [333,5,30,60,16256,0,16256,0,16256,0,30,30,60,0,16256,0,16256,5,60,30,0,16256,0,16256,0,16256,0,16256,0,16256,0,16256
				,0,16256,0,16256,5,60,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,788,0,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,0,0,12,4,5,6,7,8,9,10,11,12,13,91,92
				,333,0,0,0,0,98,7799,0,0,0,0,5678,0,0,0,0,0,0,0,0,0,0,0,0,0,118,119,0,0,999,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
				,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		MBTU_SocketParams : REQUEST_PARAMETERS (Description := "Input to the Create socket Msg instructions.  This should not require modifications.for nomral Modbus use.") := [1,[2,0,0]];
		MBTU_Transactions_00 : MBTransaction[5] (Description := "Transaction definitions for Connection to
				
				],1,15751,0],[1,30,16,0,16,3,1,1,0,[19,'=$88$00$00$00$r
				
				
				],1,15757,0]];
		MBTU_Transactions_01 : MBTransaction[5] (Description := "Transaction definitions for Connection to
				],0,17657,2],[1,10,16,0,16,3,17,1,0,[19,'=$8A$00$00$00$r
				],1,15754,0],[1,30,16,0,16,3,10,1,0,[19,'=$8B$00$00$00$r
				
				
				],1,15758,0]];
		MBTU_Transactions_02 : MBTransaction[5]  := [[0,10,2,0,0,6,1,1,0,[12,'$t
				],0,2554,0],[0,10,4,1,50,10,50,1,-1,[12,'xg$00$00$00$06$01$04$002$00$l
				],0,30823,2],[0,10,5,1,202,1,202,1,-1,[12,'xt
				],0,30836,2],[0,10,6,1,202,1,202,1,-1,[12,'x
				
				],0,16680,0]];
		MBTU_Transactions_03 : MBTransaction[5]  := [[0,10,4,1,100,22,100,1,-1,[12,':M$00$00$00$06$01$04$00d
				],0,14925,2],[0,10,5,1,203,1,203,1,-1,[12,':f
				
				],0,14975,2],[0,10,15,1,210,12,210,0,-1,[15,':$A0$00$00$00$t$01$0F$00$D2$00$p
				
				],0,16697,0]];
		METHANE_READING : REAL (RADIX := Float) := 0.00000000e+000;
		Null_Char : String_1  := [0,'$00'];
		O2_Calibrated_Reading : REAL (Description := "Oxygen Reading$NCalibrated with Zero$Nand Span Gas",
		            RADIX := Float) := 2.06412888e+001;
		O2_Cal_Scaling : LinearScalingIn  := [3,2.70549774e-001,2.02510509e+001,0.00000000e+000,2.08999996e+001,2.00017600e+001,2.06392365e+001
				,1.97312107e+001,1.99805012e+001,2.08999996e+001,4.12382294e+002,2.06392365e+001];
		PLC_TIME : PLC_TIME  := [2016,7,29,15,37,16,914719];
		Purge_Timer : TIMER  := [1766282,60000,0];
		R1S1Ch0_Spare : REAL (RADIX := Float) := 0.00000000e+000;
		R1_S1_AI_Raw : R1_S1_AI_Raw  := [3200,3200,3200,3200,3200,3200,3200,3200];
		SCADA_R_Analyser_Calibrating_Auto_Input : BOOL (Description := "Analyser has put itself into Calibration mode. SMARTGAS-connect will record$NInput$NMapped",
		            RADIX := Decimal) := 0;
		SCADA_R_Analyser_Calibrating_Man_Input : BOOL (Description := "User has put into Calibration mode. Input$NMapped",
		            RADIX := Decimal) := 0;
		SCADA_R_Bag_Sampling_Input : BOOL (Description := "User telling the analyser to read from the Bag Sample outlet$NInput Mapped",
		            RADIX := Decimal) := 0;
		SCADA_R_Gas : SCADA_R_Gas (COMMENT.ALM.A03 := "Bypass Pump 1 Fault",
		            COMMENT.ALM.A04 := "Bypass Pump 2 Fault",
		            COMMENT.ALM.A05 := "Bypass Pump 3 Fault",
		            COMMENT.ALM.A06 := "Mass Flow Controller Low Flow Alarm",
		            COMMENT.ALM.A07 := "CH4 Cylinder Low Flow Alarm",
		            COMMENT.ALM.A08 := "CO2 Cylinder Low Flow Alarm",
		            COMMENT.ALM.A09 := "CO Cylinder Low Flow Alarm",
		            COMMENT.ALM.A10 := "O2 Cal Low Flow Alarm",
		            COMMENT.ALM.A11 := "N2 Cylinder Low Flow Alarm") := [[61,0,0,0],[0]];
		SCADA_R_Maintenance_Input : BOOL (Description := "User has indicated that no analyser readings are to be relied upon$NInput Mapped",
		            RADIX := Decimal) := 0;
		SCADA_R_Official_Seq_Index : DINT (Description := "Index have officially sampled in the Tubes_Seq",
		            RADIX := Decimal) := 0;
		SCADA_R_Official_Tube_Num : DINT (Description := "Latest officially sampled Tube Number",
		            RADIX := Decimal) := 0;
		SCADA_R_Readings : Gases[33] (Description := "All gas readings for every tube, suitable for Citect. Starts at 1") := [[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,0],[1.25430062e-001,1.90839660e+000,2.09164257e+001
				,2.26712719e-001,0.00000000e+000,0.00000000e+000,0.00000000e+000,1.93535200e-002,0.00000000e+000
				,4108,45162027,0],[3.00370038e-001,1.23260832e+000,2.06412888e+001,1.11549640e+000,1.02262199e-002
				,3.28260437e-002,2.98657715e-002,5.73137961e-002,1.68556292e-002,3390,45162745,0],[1.30939081e-001
				,1.42455149e+000,2.09841824e+001,2.06432119e-001,0.00000000e+000,1.37759121e-002,5.09756897e-003
				,1.90524515e-002,1.17384912e-002,335,45165800,0],[3.90203506e-001,6.99089468e-001,2.04359646e+001
				,9.67558800e-001,0.00000000e+000,6.85775466e-003,0.00000000e+000,0.00000000e+000,1.26282340e-002
				,2671,45163464,0],[2.29299635e-001,1.91206753e-001,2.07460060e+001,7.71301210e-001,0.00000000e+000
				,0.00000000e+000,1.47348456e-002,0.00000000e+000,1.87685825e-002,1952,45164183,0],[2.98221648e-001
				,8.94028783e-001,2.06392365e+001,1.15456247e+000,2.33748071e-002,2.95972489e-002,3.84079926e-002
				,5.31732365e-002,0.00000000e+000,155,45165980,0],[2.94790983e-001,1.06559825e+000,2.06392365e+001
				,1.10630345e+000,1.07929600e-002,5.40137477e-002,0.00000000e+000,9.77643579e-003,0.00000000e+000
				,694,45165441,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[1.78142500e-001,9.42313731e-001
				,2.08137627e+001,5.43005884e-001,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,4.92566079e-002,1233,45164902,0],[1.01255305e-001,1.09492242e+000,2.09841824e+001,0.00000000e+000
				,0.00000000e+000,1.17355846e-002,0.00000000e+000,4.28006165e-002,4.39440086e-002,514,45165621
				,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[1.13230675e-001,7.68479943e-001,2.09841824e+001
				,1.55054078e-001,0.00000000e+000,2.25050282e-002,0.00000000e+000,0.00000000e+000,3.32616940e-002
				,8421,45157714,0],[1.14742883e-001,1.92198050e+000,2.09492779e+001,1.56103373e-001,0.00000000e+000
				,3.62512358e-002,0.00000000e+000,6.40828535e-003,4.40948419e-002,7702,45158433,0],[0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[2.15031207e-001
				,6.62981749e-001,2.07788582e+001,6.04296386e-001,0.00000000e+000,3.39602157e-002,0.00000000e+000
				,4.99550579e-003,2.28641760e-002,6983,45159152,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0,0,1],[2.90283620e-001,0.00000000e+000,2.06761951e+001,1.00595582e+000,2.71431357e-002,1.92051718e-003
				,1.03859948e-002,2.56660394e-003,0.00000000e+000,6265,45159870,0],[0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0,0,1],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,1],[5.03868312e-002,0.00000000e+000
				,2.10560455e+001,1.00660394e-003,0.00000000e+000,2.22555175e-002,7.09835114e-003,4.23663706e-002
				,0.00000000e+000,5546,45160589,0],[5.28502613e-002,0.00000000e+000,2.10560455e+001,0.00000000e+000
				,0.00000000e+000,5.40575534e-002,0.00000000e+000,3.16566192e-002,2.47112866e-002,4827,45161308
				,0]];
		SCADA_R_Seq_Updated_Time : TIME_OF_PLC  := [2016,5,26,8,18,33,464324,1];
		SCADA_R_Smartgas_Sample : GasesOnly (Description := "SMARTGAS-connect collects its sample from this buffer") := [2.98221648e-001,8.94028783e-001,2.06392365e+001,1.15456247e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000];
		SCADA_R_Switched_To_Seq_Index : DINT (Description := "Starts at 0. Where currently are in the Tubes_Seq",
		            RADIX := Decimal) := 27;
		SCADA_R_Sys : SCADA_R_Sys (Description := "Tube Bundle System Alarms",
		            COMMENT.ALM[0] := "Dehumidifier High Temp Alarm",
		            COMMENT.ALM[1] := "Fire System Isolated",
		            COMMENT.ALM[2] := "Fire Alarm",
		            COMMENT.ALM[3] := "Fire System Fault",
		            COMMENT.ALM[4] := "Safety System Gas Alarm",
		            COMMENT.ALM[5] := "Safety System Ventilation Fail Alarm",
		            COMMENT.ALM[6] := "Fire Alarm - Safety Contactor 5",
		            COMMENT.ALM[7] := "Gas Room Ventilation System Bypassed",
		            COMMENT.ALM[8] := "UPS AC Fail",
		            COMMENT.ALM[9] := "Precisive CH4-CO2 Analyser Fault",
		            COMMENT.ALM[10] := "Precisive CO-O2 Analyser Fault") := [[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0]];
		SCADA_W_Res : BOOL (Description := "Alarm Reset$NRequest from$NSCADA",
		            RADIX := Decimal) := 0;
		SMRTGS_W_Holding_Seq_Index : DINT (Description := "Repeat continuously (Hold) at this Seq_Index",
		            RADIX := Decimal) := 0;
		SMRTGS_W_Pending_Tubes_Seq_Changes : BOOL (Description := "SMARTGAS-connect has written sequence changes to SMRTGS_W_Tubes_Seq_Buffer",
		            RADIX := Decimal) := 0;
		SMRTGS_W_Seq_Updated_Lock_R : DINT (RADIX := Decimal) := 0;
		SMRTGS_W_Seq_Updated_Lock_W : DINT (RADIX := Decimal) := 0;
		SMRTGS_W_Smartgas_Manual_Mode : BOOL (Description := "SMARTGAS-connect user is in Manual mode",
		            RADIX := Decimal) := 0;
		SMRTGS_W_Switched_To_Tube_Num : DINT (Description := "Starts at 1. The actual tube number are physically switched to",
		            RADIX := Decimal) := 7;
		SMRTGS_W_Take_Manual_Sample : BOOL (Description := "SMARTGAS-connect writes a TRUE to instruct this program to save a sample for it in SCADA_R_Smartgas_Sample",
		            RADIX := Decimal) := 0;
		SMRTGS_W_Tubes_Seq_Buffer : Tube_Seq_Item[100] (Description := "Sequence of Tubes. Allows repeats. Starts at 1") := [[0,0,0],[3,180000,1],[6,180000,1],[7,180000,1],[1,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[2,180000,1],[3,180000,1],[6,180000
				,1],[7,180000,1],[4,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[5,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[15,180000
				,1],[3,180000,1],[6,180000,1],[7,180000,1],[16,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[18,180000,1],[3,180000,1],[6,180000
				,1],[7,180000,1],[19,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[26,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[28,180000
				,1],[3,180000,1],[6,180000,1],[7,180000,1],[31,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[32,180000,1],[25,20000,0]];
		STATE : DINT (Description := "12 states starting at 0 which is $'Faulted$'",
		            RADIX := Decimal) := 2;
		Take_Manual_Sample_Counter : COUNTER (Description := "Diagnosis only. When not in Automatic mode, can observe SMARTGAS-connect taking samples") := [536870912,0,4];
		MBTI_Connect_Sock_MSG_00 : MESSAGE (Description := "Used to connect Connection 0.",
		                                  MessageType := CIP Generic,
		                                  RequestedLength := 28,
		                                  ConnectedFlag := 2,
		                                  ConnectionPath := "AA9_TBS_Ethernet",
		                                  CommTypeCode := 0,
		                                  ServiceCode := 16#004c,
		                                  ObjectType := 16#0342,
		                                  TargetObject := 20882,
		                                  AttributeNumber := 16#0000,
		                                  LocalIndex := 0,
		                                  LocalElement := "MBTI_DestAddress_00",
		                                  LargePacketUsage := No);
		MBTI_Connect_Sock_MSG_01 : MESSAGE (Description := "Used to connect Connection 1.",
		                                  MessageType := CIP Generic,
		                                  RequestedLength := 28,
		                                  ConnectedFlag := 2,
		                                  ConnectionPath := "AA9_TBS_Ethernet",
		                                  CommTypeCode := 0,
		                                  ServiceCode := 16#004c,
		                                  ObjectType := 16#0342,
		                                  TargetObject := 27539,
		                                  AttributeNumber := 16#0000,
		                                  LocalIndex := 0,
		                                  LocalElement := "MBTI_DestAddress_01",
		                                  LargePacketUsage := No);
		MBTI_Connect_Sock_MSG_02 : MESSAGE (Description := "Used to connect Connection 2.",
		                                  MessageType := CIP Generic,
		                                  RequestedLength := 28,
		                                  ConnectedFlag := 2,
		                                  ConnectionPath := "AA9_TBS_Ethernet",
		                                  CommTypeCode := 0,
		                                  ServiceCode := 16#004c,
		                                  ObjectType := 16#0342,
		                                  TargetObject := 26847,
		                                  AttributeNumber := 16#0000,
		                                  LocalIndex := 0,
		                                  LocalElement := "MBTI_DestAddress_02",
		                                  LargePacketUsage := No);
		MBTI_Connect_Sock_MSG_03 : MESSAGE (Description := "Used to connect Connection 3.",
		                                  MessageType := CIP Generic,
		                                  RequestedLength := 28,
		                                  ConnectedFlag := 2,
		                                  ConnectionPath := "AA9_TBS_Ethernet",
		                                  CommTypeCode := 0,
		                                  ServiceCode := 16#004c,
		                                  ObjectType := 16#0342,
		                                  TargetObject := 17858,
		                                  AttributeNumber := 16#0000,
		                                  LocalIndex := 0,
		                                  LocalElement := "MBTI_DestAddress_03",
		                                  LargePacketUsage := No);
		MBTI_Create_Sock_MSG_00 : MESSAGE (Description := "Creates the raw socket for Connection 0.",
		                                 MessageType := CIP Generic,
		                                 RequestedLength := 12,
		                                 ConnectedFlag := 2,
		                                 ConnectionPath := "AA9_TBS_Ethernet",
		                                 CommTypeCode := 0,
		                                 ServiceCode := 16#004b,
		                                 ObjectType := 16#0342,
		                                 TargetObject := 0,
		                                 AttributeNumber := 16#0000,
		                                 LocalIndex := 0,
		                                 LocalElement := "MBTU_SocketParams",
		                                 DestinationTag := "MBTI_Instance[0]",
		                                 LargePacketUsage := No);
		MBTI_Create_Sock_MSG_01 : MESSAGE (Description := "Creates the raw socket for Connection 1.",
		                                 MessageType := CIP Generic,
		                                 RequestedLength := 12,
		                                 ConnectedFlag := 2,
		                                 ConnectionPath := "AA9_TBS_Ethernet",
		                                 CommTypeCode := 0,
		                                 ServiceCode := 16#004b,
		                                 ObjectType := 16#0342,
		                                 TargetObject := 0,
		                                 AttributeNumber := 16#0000,
		                                 LocalIndex := 0,
		                                 LocalElement := "MBTU_SocketParams",
		                                 DestinationTag := "MBTI_Instance[1]",
		                                 LargePacketUsage := No);
		MBTI_Create_Sock_MSG_02 : MESSAGE (Description := "Creates the raw socket for Connection 2.",
		                                 MessageType := CIP Generic,
		                                 RequestedLength := 12,
		                                 ConnectedFlag := 2,
		                                 ConnectionPath := "AA9_TBS_Ethernet",
		                                 CommTypeCode := 0,
		                                 ServiceCode := 16#004b,
		                                 ObjectType := 16#0342,
		                                 TargetObject := 0,
		                                 AttributeNumber := 16#0000,
		                                 LocalIndex := 0,
		                                 LocalElement := "MBTU_SocketParams",
		                                 DestinationTag := "MBTI_Instance[2]",
		                                 LargePacketUsage := No);
		MBTI_Create_Sock_MSG_03 : MESSAGE (Description := "Creates the raw socket for Connection 3.",
		                                 MessageType := CIP Generic,
		                                 RequestedLength := 12,
		                                 ConnectedFlag := 2,
		                                 ConnectionPath := "AA9_TBS_Ethernet",
		                                 CommTypeCode := 0,
		                                 ServiceCode := 16#004b,
		                                 ObjectType := 16#0342,
		                                 TargetObject := 0,
		                                 AttributeNumber := 16#0000,
		                                 LocalIndex := 0,
		                                 LocalElement := "MBTU_SocketParams",
		                                 DestinationTag := "MBTI_Instance[3]",
		                                 LargePacketUsage := No);
		MBTI_Delete_All_MSG : MESSAGE (Description := "Used to disconnect and delete all sockets on shut down and initialization.",
		                             MessageType := CIP Generic,
		                             RequestedLength := 0,
		                             ConnectedFlag := 2,
		                             ConnectionPath := "AA9_TBS_Ethernet",
		                             CommTypeCode := 0,
		                             ServiceCode := 16#0051,
		                             ObjectType := 16#0342,
		                             TargetObject := 0,
		                             AttributeNumber := 16#0000,
		                             LocalIndex := 0,
		                             LargePacketUsage := No);
		MBTI_Delete_Socket_MSG_00 : MESSAGE (Description := "Closes and deletes the socket created for connection 0.",
		                                   MessageType := CIP Generic,
		                                   RequestedLength := 0,
		                                   ConnectedFlag := 2,
		                                   ConnectionPath := "AA9_TBS_Ethernet",
		                                   CommTypeCode := 0,
		                                   ServiceCode := 16#004f,
		                                   ObjectType := 16#0342,
		                                   TargetObject := 20882,
		                                   AttributeNumber := 16#0000,
		                                   LocalIndex := 0,
		                                   LargePacketUsage := No);
		MBTI_Delete_Socket_MSG_01 : MESSAGE (Description := "Closes and deletes the socket created for connection 1.",
		                                   MessageType := CIP Generic,
		                                   RequestedLength := 0,
		                                   ConnectedFlag := 2,
		                                   ConnectionPath := "AA9_TBS_Ethernet",
		                                   CommTypeCode := 0,
		                                   ServiceCode := 16#004f,
		                                   ObjectType := 16#0342,
		                                   TargetObject := 27539,
		                                   AttributeNumber := 16#0000,
		                                   LocalIndex := 0,
		                                   LargePacketUsage := No);
		MBTI_Delete_Socket_MSG_02 : MESSAGE (Description := "Closes and deletes the socket created for connection 2.",
		                                   MessageType := CIP Generic,
		                                   RequestedLength := 0,
		                                   ConnectedFlag := 2,
		                                   ConnectionPath := "AA9_TBS_Ethernet",
		                                   CommTypeCode := 0,
		                                   ServiceCode := 16#004f,
		                                   ObjectType := 16#0342,
		                                   TargetObject := 26847,
		                                   AttributeNumber := 16#0000,
		                                   LocalIndex := 0,
		                                   LargePacketUsage := No);
		MBTI_Delete_Socket_MSG_03 : MESSAGE (Description := "Closes and deletes the socket created for connection 3.",
		                                   MessageType := CIP Generic,
		                                   RequestedLength := 0,
		                                   ConnectedFlag := 2,
		                                   ConnectionPath := "AA9_TBS_Ethernet",
		                                   CommTypeCode := 0,
		                                   ServiceCode := 16#004f,
		                                   ObjectType := 16#0342,
		                                   TargetObject := 17858,
		                                   AttributeNumber := 16#0000,
		                                   LocalIndex := 0,
		                                   LargePacketUsage := No);
		MBTI_Read_Data_MSG_00 : MESSAGE (Description := "Does the incoming reads on Connection 0.",
		                               MessageType := CIP Generic,
		                               RequestedLength := 8,
		                               ConnectedFlag := 2,
		                               ConnectionPath := "AA9_TBS_Ethernet",
		                               CommTypeCode := 0,
		                               ServiceCode := 16#004d,
		                               ObjectType := 16#0342,
		                               TargetObject := 20882,
		                               AttributeNumber := 16#0000,
		                               LocalIndex := 0,
		                               LocalElement := "MBTI_Read_Data_Req[0]",
		                               DestinationTag := "MBTI_Read_Resp[0]",
		                               LargePacketUsage := No);
		MBTI_Read_Data_MSG_01 : MESSAGE (Description := "Does the incoming reads on Connection 1.",
		                               MessageType := CIP Generic,
		                               RequestedLength := 8,
		                               ConnectedFlag := 2,
		                               ConnectionPath := "AA9_TBS_Ethernet",
		                               CommTypeCode := 0,
		                               ServiceCode := 16#004d,
		                               ObjectType := 16#0342,
		                               TargetObject := 27539,
		                               AttributeNumber := 16#0000,
		                               LocalIndex := 0,
		                               LocalElement := "MBTI_Read_Data_Req[1]",
		                               DestinationTag := "MBTI_Read_Resp[1]",
		                               LargePacketUsage := No);
		MBTI_Read_Data_MSG_02 : MESSAGE (Description := "Does the incoming reads on Connection 2.",
		                               MessageType := CIP Generic,
		                               RequestedLength := 8,
		                               ConnectedFlag := 2,
		                               ConnectionPath := "AA9_TBS_Ethernet",
		                               CommTypeCode := 0,
		                               ServiceCode := 16#004d,
		                               ObjectType := 16#0342,
		                               TargetObject := 26847,
		                               AttributeNumber := 16#0000,
		                               LocalIndex := 0,
		                               LocalElement := "MBTI_Read_Data_Req[2]",
		                               DestinationTag := "MBTI_Read_Resp[2]",
		                               LargePacketUsage := No);
		MBTI_Read_Data_MSG_03 : MESSAGE (Description := "Does the incoming reads on Connection 3..",
		                               MessageType := CIP Generic,
		                               RequestedLength := 8,
		                               ConnectedFlag := 2,
		                               ConnectionPath := "AA9_TBS_Ethernet",
		                               CommTypeCode := 0,
		                               ServiceCode := 16#004d,
		                               ObjectType := 16#0342,
		                               TargetObject := 17858,
		                               AttributeNumber := 16#0000,
		                               LocalIndex := 0,
		                               LocalElement := "MBTI_Read_Data_Req[3]",
		                               DestinationTag := "MBTI_Read_Resp[3]",
		                               LargePacketUsage := No);
		MBTI_Write_Data_MSG_00 : MESSAGE (Description := "Does the out going writes on Connection 0.",
		                                MessageType := CIP Generic,
		                                RequestedLength := 28,
		                                ConnectedFlag := 2,
		                                ConnectionPath := "AA9_TBS_Ethernet",
		                                CommTypeCode := 0,
		                                ServiceCode := 16#004e,
		                                ObjectType := 16#0342,
		                                TargetObject := 20882,
		                                AttributeNumber := 16#0000,
		                                LocalIndex := 0,
		                                LocalElement := "MBTI_Write_Data_Out[0]",
		                                DestinationTag := "MBTI_Buf_Len_Sent",
		                                LargePacketUsage := No);
		MBTI_Write_Data_MSG_01 : MESSAGE (Description := "Does the out going writes on Connection 1.",
		                                MessageType := CIP Generic,
		                                RequestedLength := 28,
		                                ConnectedFlag := 2,
		                                ConnectionPath := "AA9_TBS_Ethernet",
		                                CommTypeCode := 0,
		                                ServiceCode := 16#004e,
		                                ObjectType := 16#0342,
		                                TargetObject := 27539,
		                                AttributeNumber := 16#0000,
		                                LocalIndex := 0,
		                                LocalElement := "MBTI_Write_Data_Out[1]",
		                                DestinationTag := "MBTI_Buf_Len_Sent",
		                                LargePacketUsage := No);
		MBTI_Write_Data_MSG_02 : MESSAGE (Description := "Does the out going writes on Connection 2.",
		                                MessageType := CIP Generic,
		                                RequestedLength := 33,
		                                ConnectedFlag := 2,
		                                ConnectionPath := "AA9_TBS_Ethernet",
		                                CommTypeCode := 0,
		                                ServiceCode := 16#004e,
		                                ObjectType := 16#0342,
		                                TargetObject := 26847,
		                                AttributeNumber := 16#0000,
		                                LocalIndex := 0,
		                                LocalElement := "MBTI_Write_Data_Out[2]",
		                                DestinationTag := "MBTI_Buf_Len_Sent",
		                                LargePacketUsage := No);
		MBTI_Write_Data_MSG_03 : MESSAGE (Description := "Does the out going writes on Connection 3.",
		                                MessageType := CIP Generic,
		                                RequestedLength := 33,
		                                ConnectedFlag := 2,
		                                ConnectionPath := "AA9_TBS_Ethernet",
		                                CommTypeCode := 0,
		                                ServiceCode := 16#004e,
		                                ObjectType := 16#0342,
		                                TargetObject := 17858,
		                                AttributeNumber := 16#0000,
		                                LocalIndex := 0,
		                                LocalElement := "MBTI_Write_Data_Out[3]",
		                                DestinationTag := "MBTI_Buf_Len_Sent",
		                                LargePacketUsage := No);
	END_TAG

	PROGRAM Common (MAIN := "Main",
	                MODE := 0,
	                DisableFlag := 0)
			TAG
				BYPASS1 : BOOL (RADIX := Decimal) := 0;
				CO2_READING : REAL (RADIX := Float) := 0.00000000e+000;
				Day_Last_Scan : DINT (RADIX := Decimal) := 29;
				Flash_Cnt : DINT (RADIX := Decimal) := 1145;
				GAS_CELL_PRESSURE : REAL (RADIX := Float) := 1.02010655e+000;
				GAS_CELL_TEMP : REAL (RADIX := Float) := 5.99780045e+001;
				Hrs_Last_Scan : DINT (RADIX := Decimal) := 15;
				LightSourceIntensity : REAL (RADIX := Float) := 8.74430847e+001;
				MB1 : MBUS_REAL  := [3,-5096,16022,2.94770000e-001,1050078232];
				MB10 : MBUS_REAL  := [3,1573,17008,6.00060005e+001,1114637861];
				MB15 : MBUS_REAL  := [3,10361,15536,2.15036739e-002,1018177657];
				MB16 : MBUS_REAL  := [3,-7952,15691,4.97750640e-002,1028382960];
				MB17 : MBUS_REAL  := [3,7883,15366,8.18605255e-003,1007034059];
				MB18 : MBUS_REAL  := [3,5434,15087,1.82405789e-003,988747066];
				MB19 : MBUS_REAL  := [3,-3766,15503,1.75711100e-002,1016066378];
				MB2 : MBUS_REAL  := [3,17374,16270,1.11144614e+000,1066288094];
				MB3 : MBUS_REAL  := [3,-23441,17029,6.68211594e+001,1116054639];
				MB4 : MBUS_REAL  := [3,-20792,16253,9.90948200e-001,1065201352];
				MB5 : MBUS_REAL  := [3,-9962,17007,5.99619980e+001,1114626326];
				MB6 : MBUS_REAL  := [3,0,0,0.00000000e+000,0];
				MB7 : MBUS_REAL  := [3,25662,15489,1.57948695e-002,1015112766];
				MB8 : MBUS_REAL  := [3,-12721,17089,9.69029465e+001,1119997519];
				MB9 : MBUS_REAL  := [3,21924,16256,1.00261354e+000,1065375140];
				Mins_Last_Scan : DINT (RADIX := Decimal) := 37;
				Month_Last_Scan : DINT (RADIX := Decimal) := 7;
				ONS : BOOL[32] (COMMENT[0] := "Two Seconds$NRising Edge",
				            COMMENT[1] := "Five Seconds$NRising Edge",
				            COMMENT[2] := "Ten Seconds$NRising Edge",
				            COMMENT[3] := "Thirty Seconds$NRising Edge",
				            COMMENT[4] := "Fifteen Minute$NRising Edge",
				            COMMENT[5] := "Thirty Minute$NRising Edge",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Power_Del_10sec : TIMER  := [-1609351941,10000,10001];
				Power_Del_1min : TIMER  := [-1609351937,600000,600000];
				Power_Del_30min : TIMER  := [-1609351941,1800000,1800000];
				Power_Del_5sec : TIMER  := [-1609351941,5000,5000];
				Result_Div10 : DINT (RADIX := Decimal) := 6;
				Result_Div2 : DINT (RADIX := Decimal) := 0;
				Result_Div30 : DINT (RADIX := Decimal) := 16;
				Result_Div5 : DINT (RADIX := Decimal) := 1;
				Result_MinDiv15 : DINT (RADIX := Decimal) := 7;
				Result_MinDiv30 : DINT (RADIX := Decimal) := 7;
				RL_WD_Tmr : TIMER  := [-1072481029,500000,60525];
				Secs_Last_Scan : DINT (RADIX := Decimal) := 16;
				Year_Last_Scan : DINT (RADIX := Decimal) := 2016;
				_0_5Sec_Flash : TIMER  := [-1072481025,500,486];
				_500ms_Time : TIMER  := [1260794,0,0];
			END_TAG

			ROUTINE Control_Logic 
					RC: "This Routine sets up useful logic conditions such as time, Always On, Always Off and various time periods after powerup.$N"
					    "It also provides a synchronised flashing function for use with indication.$N"
					    "In this routine, regular pulses for 1 second and over are synchronised with the PLC clock and are therefore accurate over long time periods. (Unlike other methods which have cummulative errors due to scan times.)$N"
					    "====================$N"
					    "This routine is standard in all CLX PLCs";
					N: NOP();
					RC: "Update from PLC Time$N"
					    "==================";
					N: GSV(WallClockTime,?,LocalDateTime,PLC_TIME.Year);
					RC: "Always Zero$N"
					    "===========";
					N: MOV(0,Always.Zero);
					RC: "Always On Bit$N"
					    "============";
					N: [XIC(Always.On) ,XIO(Always.On) ]OTE(Always.On);
					RC: "Always Off Bit$N"
					    "=============";
					N: XIC(Always.Off)XIO(Always.Off)OTE(Always.Off);
					RC: "Half Second Tic$N"
					    "==============$N"
					    "This tic is not accurate over long time periods.";
					N: [XIO(_500ms_Time.DN) TON(_500ms_Time,?,?) ,XIC(_500ms_Time.DN) OTE(Always.Tic_0_5secs) ];
					RC: "One second Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: NEQ(PLC_TIME.Second,Secs_Last_Scan)[OTE(Always.Tic_1sec) ,MOV(PLC_TIME.Second,Secs_Last_Scan) ];
					RC: "Two second Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: XIC(Always.Tic_1sec)[MOD(PLC_TIME.Second,2,Result_Div2) ,EQU(Result_Div2,0) ONS(ONS[0]) OTE(Always.Tic_2sec) ];
					RC: "Five second Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: XIC(Always.Tic_1sec)[MOD(PLC_TIME.Second,5,Result_Div5) ,EQU(Result_Div5,0) ONS(ONS[1]) OTE(Always.Tic_5sec) ];
					RC: "Ten second Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: XIC(Always.Tic_1sec)[MOD(PLC_TIME.Second,10,Result_Div10) ,EQU(Result_Div10,0) ONS(ONS[2]) OTE(Always.Tic_10sec) ];
					RC: "Thirty second Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: XIC(Always.Tic_1sec)[MOD(PLC_TIME.Second,30,Result_Div30) ,EQU(Result_Div30,0) ONS(ONS[3]) OTE(Always.Tic_30sec) ];
					RC: "One minute Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: NEQ(PLC_TIME.Minute,Mins_Last_Scan)[OTE(Always.Tic_1min) ,MOV(PLC_TIME.Minute,Mins_Last_Scan) ];
					RC: "Fifteen Minute Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: XIC(Always.Tic_1min)[MOD(PLC_TIME.Minute,15,Result_MinDiv15) ,EQU(Result_MinDiv15,0) ONS(ONS[4]) OTE(Always.Tic_15min) ];
					RC: "30 Minute Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: XIC(Always.Tic_1min)[MOD(PLC_TIME.Minute,30,Result_MinDiv30) ,EQU(Result_MinDiv30,0) ONS(ONS[5]) OTE(Always.Tic_30min) ];
					RC: "One Hour Tic$N"
					    "===============$N"
					    "This tic is accurate over long time periods.";
					N: NEQ(PLC_TIME.Hour,Hrs_Last_Scan)[OTE(Always.Tic_1hr) ,MOV(PLC_TIME.Hour,Hrs_Last_Scan) ];
					RC: "Flashing Timers$N"
					    "================$N"
					    "Timers are synchronised so that other combinations of flashing are possible.$N"
					    "Flash_1sec ORed with Flash_2sec = 3 seconds on and 1 second off$N"
					    "Not Flash_2sec ANDed with Flash_1sec = 1 second on and 3 seconds off$N"
					    "";
					N: [XIO(_0_5Sec_Flash.DN) TON(_0_5Sec_Flash,?,?) ,XIC(_0_5Sec_Flash.DN) ADD(Flash_Cnt,1,Flash_Cnt) ,XIC(Flash_Cnt.0) OTE(Always.Flash_0_5sec) ,XIC(Flash_Cnt.1) OTE(Always.Flash_1sec) ,XIC(Flash_Cnt.2) OTE(Always.Flash_2sec) ,GEQ(Flash_Cnt,4096) CLR(Flash_Cnt) ];
					RC: "Power Up Delay - On after five seconds$N"
					    "==================================";
					N: XIO(S:FS)[TON(Power_Del_5sec,?,?) ,XIC(Power_Del_5sec.DN) OTE(Always.PowerOn_5sec) ];
					RC: "Power Up Delay - On after ten seconds$N"
					    "==================================";
					N: XIO(S:FS)[TON(Power_Del_10sec,?,?) ,XIC(Power_Del_10sec.DN) OTE(Always.PowerOn_10secs) ];
					RC: "Power Up Delay - On after one minute$N"
					    "==================================";
					N: XIO(S:FS)[TON(Power_Del_1min,?,?) ,XIC(Power_Del_1min.DN) OTE(Always.PowerOn_1min) ];
					RC: "Power Up Delay - On after thirty minutes$N"
					    "==================================";
					N: XIO(S:FS)[TON(Power_Del_30min,?,?) ,XIC(Power_Del_30min.DN) OTE(Always.PowerOn_30min) ];
					RC: "Daily Tic at Midnight$N"
					    "==================";
					N: NEQ(PLC_TIME.Day,Day_Last_Scan)[OTE(Always.DailyOneshot) ,MOV(PLC_TIME.Day,Day_Last_Scan) ];
					RC: "Monthy Tic at Month End and Midnight$N"
					    "==================";
					N: NEQ(PLC_TIME.Month,Month_Last_Scan)[OTE(Always.MonthlyOneShot) ,MOV(PLC_TIME.Month,Month_Last_Scan) ];
					RC: "Yearly Tic at Year End and Midnight$N"
					    "==================";
					N: NEQ(PLC_TIME.Year,Year_Last_Scan)[OTE(Always.YearlyOneShot) ,MOV(PLC_TIME.Year,Year_Last_Scan) ];
					RC: "Create the Blank ASCII character that is all zeros.$N"
					    "=========================================";
					N: FLL(0,Null_Char,1);
					RC: "Create a rolling watchdog counter.$N"
					    "================================$N"
					    "This is read by the other devices as part of the communication packages to prove that data tables are updating";
					N: XIO(RL_WD_Tmr.DN)[TON(RL_WD_Tmr,?,?) ,MOV(RL_WD_Tmr.ACC,Always.RL_WD_Out) ];
					N: XIC(SCADA_W_Res)[OTE(Global_Logic[0]) ,OTU(SCADA_W_Res) ];
			END_ROUTINE

			ROUTINE CONV_REAL_A1 (Description := "MAP MODBUS REGISTERS TO REAL")
					RC: "Methane Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB2,MBTU_MB_3xx[1],MBTU_MB_3xx[2],A1_METHANE_RAW);
					N: MUL(A1_METHANE_RAW,1,A1_METHANE);
					RC: "Carbon Dioxide Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB1,MBTU_MB_3xx[13],MBTU_MB_3xx[14],A1_CO2_RAW);
					N: MUL(A1_CO2_RAW,1.0256,A1_CARBON_DIOXIDE);
					RC: "Light Source Intensity - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB3,MBTU_MB_3xx[21],MBTU_MB_3xx[22],A1_Diagnostics[0]);
					RC: "Gas Cell Pressure - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB4,MBTU_MB_3xx[17],MBTU_MB_3xx[18],A1_Diagnostics[1]);
					RC: "Gas Cell Temperature - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB5,MBTU_MB_3xx[19],MBTU_MB_3xx[20],A1_Diagnostics[2]);
					N: XIC(MBTU_MB_1xx[1])OTE(A1_Discrete_Inputs[0]);
					N: XIC(MBTU_MB_1xx[2])OTE(A1_Discrete_Inputs[1]);
					N: XIC(MBTU_MB_1xx[3])OTE(A1_Discrete_Inputs[2]);
					N: XIC(MBTU_MB_1xx[4])OTE(A1_Discrete_Inputs[3]);
					N: XIC(MBTU_MB_1xx[5])OTE(A1_Discrete_Inputs[4]);
					N: XIO(MBTU_MB_1xx[1])[MOV(5,MBTU_MB_4xx[1]) ,MOV(30,MBTU_MB_4xx[2]) ,MOV(60,MBTU_MB_4xx[3]) ];
					RC: "Ethane Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB15,MBTU_MB_3xx[3],MBTU_MB_3xx[4],A1_ETHANE_RAW);
					RC: "Propane Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB16,MBTU_MB_3xx[5],MBTU_MB_3xx[6],A1_PROPANE_RAW);
					RC: "iso-Butane Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB17,MBTU_MB_3xx[7],MBTU_MB_3xx[8],A1_Iso_BUTANE_RAW);
					RC: "n-Butane Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB18,MBTU_MB_3xx[9],MBTU_MB_3xx[10],A1_n_BUTANE_RAW);
					RC: "C5+ Reading - Precisive Analyser 1$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB19,MBTU_MB_3xx[11],MBTU_MB_3xx[12],A1_C5PLUS_RAW);
			END_ROUTINE

			ROUTINE CONV_REAL_A2 (Description := "MAP MODBUS REGISTERS TO REAL")
					RC: "Carbon Monoxide Reading - Precisive Analyser 2$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB6,MBTU_MB_3xx[101],MBTU_MB_3xx[102],A2_CO_RAW);
					N: MUL(A2_CO_RAW,1.01522,A2_CARBON_MONOXIDE);
					RC: "Oxygen Reading - Precisive Analyser 2$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MOV(Local:7:I.Ch3Data,A2_OXYGEN_RAW);
					N: MUL(A2_OXYGEN_RAW,1,A2_OXYGEN);
					RC: "Light Source Intensity - Precisive Analyser 2$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB8,MBTU_MB_3xx[121],MBTU_MB_3xx[122],A2_Diagnostics[0]);
					RC: "Gas Cell Pressure - Precisive Analyser 2$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB9,MBTU_MB_3xx[117],MBTU_MB_3xx[118],A2_Diagnostics[1]);
					RC: "Gas Cell Temperature - Precisive Analyser 2$N"
					    "VAL = Computed reading location$N"
					    "==================================";
					N: MBUS_REAL(MB10,MBTU_MB_3xx[119],MBTU_MB_3xx[120],A2_Diagnostics[2]);
					N: XIC(MBTU_MB_1xx[7])OTE(A2_Discrete_Inputs[0]);
					N: XIC(MBTU_MB_1xx[2])OTE(A2_Discrete_Inputs[1]);
					N: XIC(MBTU_MB_1xx[3])OTE(A2_Discrete_Inputs[2]);
					N: XIC(MBTU_MB_1xx[4])OTE(A2_Discrete_Inputs[3]);
					N: XIC(MBTU_MB_1xx[5])OTE(A2_Discrete_Inputs[4]);
					N: XIO(MBTU_MB_1xx[7])[MOV(30,MBTU_MB_4xx[10]) ,MOV(30,MBTU_MB_4xx[11]) ,MOV(60,MBTU_MB_4xx[12]) ];
			END_ROUTINE

			ROUTINE Main 
					N: JSR(Control_Logic,0);
					N: JSR(CONV_REAL_A1,0);
					N: JSR(CONV_REAL_A2,0);
			END_ROUTINE

	END_PROGRAM

	PROGRAM MainProgram (MAIN := "Main",
	                     MODE := 0,
	                     DisableFlag := 0)
			TAG
				Alm1_Del : TIMER (Description := "Low Flow Alarm$Nfor Current Channel") := [-1609351815,10000,10000];
				Alm_Cal_Flo : TIMER  := [707120,10000,0];
				Alm_Cal_Flo1 : TIMER  := [827122,10000,0];
				Alm_Cal_Flo2 : TIMER  := [947122,10000,0];
				Alm_Cal_Flo3 : TIMER  := [947269,10000,0];
				Alm_Cal_Flo4 : TIMER  := [587122,10000,0];
				Auto_Cal_Disable : BOOL (RADIX := Decimal) := 0;
				Auto_Mode_Reset : BOOL (Description := "Switching Timer is to be reset while in normal (non-holding) Automatic mode",
				            RADIX := Decimal) := 0;
				Byp_Pmp_1 : BOOL (Description := "Bypass Pump 1 Healthy",
				            RADIX := Decimal) := 0;
				Byp_Pmp_2 : BOOL (Description := "Bypass Pump 2$NHealthy",
				            RADIX := Decimal) := 0;
				Byp_Pmp_3 : BOOL (Description := "Bypass Pump 3$NHealthy",
				            RADIX := Decimal) := 0;
				Carbon_Dioxide_Purge : TIMER  := [1067124,120000,0];
				Carbon_Monoxide_Purge : TIMER  := [1067124,120000,0];
				Ch_Faults : COUNTER (Description := "Number of$NConsecutive Low Flow Channel Faults") := [-2147483648,5,1];
				Count_Up_Hold_Moment : BOOL (Description := "Used to put the thread of logic onto the next rung when Holding but have not yet gone to Fast Holding",
				            RADIX := Decimal) := 0;
				Fast_Hold_Reset : BOOL (Description := "Switching Timer is to be reset at end of subsequent (shorter) periods of holding on a tube",
				            RADIX := Decimal) := 0;
				Holding_Switch_Counter : COUNTER (Description := "Used to count into Initial then Fast Holding modes") := [0,2,0];
				Initial_Hold_Reset : BOOL (Description := "Switching Timer is to be reset at end of initial (longer) period of holding on a tube",
				            RADIX := Decimal) := 0;
				Last_Channel : INT (RADIX := Decimal) := 7;
				Last_Holding_Seq_Index : DINT (Description := "Used to catch (will be different) the SMARTGAS-connect user$'s request to change which tube seq index is being held",
				            RADIX := Decimal) := 0;
				Leave_Auto_Moment : BOOL (Description := "To catch the moment the SMARTGAS-connect user has entered into Manual mode",
				            RADIX := Decimal) := 0;
				Leave_Auto_Moment_OSR : BOOL (Description := "One shot storage bit required for Leave_Auto_Moment",
				            RADIX := Decimal) := 0;
				Local_Logic : BOOL[32] (Description := "Sample Point$NChange",
				            COMMENT[0] := "Channel Number$Nhas Changed",
				            COMMENT[1] := "Toggle Pump$NSelection Request",
				            COMMENT[3] := "Toggle Bag Sample Operation Request",
				            COMMENT[4] := "Disable Manual Calibration for Auto Cal",
				            COMMENT[5] := "Manual Cal Mode from HMI",
				            COMMENT[10] := "SamplePoint 32 Energise for O2 Calibration",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Manual_Mode : BOOL (Description := "Not automatically switching. Has many sub-modes such as Bag Sampling, Smartgas Manual mode etc",
				            RADIX := Decimal) := 0;
				Max_Official_Tube_Num : DINT (Description := "Greatest officially read tube number, so we know how far Readings has been filled",
				            RADIX := Decimal) := 32;
				Methane_Gas_Purge : TIMER  := [1067124,120000,0];
				Methane_Validation : TIMER  := [0,120,0];
				O2_Cal_Reading : REAL (RADIX := Float) := 2.02510509e+001;
				O2_Zero_Cal_Reading : REAL (Description := "Oxygen Reading$NTaken with$NPure Nitrogen$N(Zero gas)",
				            RADIX := Float) := 2.70549774e-001;
				Official_Read_Moment : BOOL (Description := "Moment when the sample that will be used by SCADA can now be read",
				            RADIX := Decimal) := 0;
				Official_Read_Moment_OSR : BOOL (Description := "One shot storage bit required for Official_Read_Moment",
				            RADIX := Decimal) := 0;
				One_Second_Moment : BOOL (Description := "Capture the moment when a second has passed",
				            RADIX := Decimal) := 0;
				One_Second_Moment_OSR : BOOL (Description := "One shot storage bit for One_Second_Moment",
				            RADIX := Decimal) := 0;
				ONS : BOOL[32] (COMMENT[0] := "Zero Calibration$NComplete Rising$NEdge",
				            COMMENT[1] := "Calibration O2 Gas Purging Rising Edge",
				            COMMENT[2] := "Analyser Purge Timer Rising Edge",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Oxygen_Cal_Del : TIMER (Description := "Delay for Purging$NOxygen Calibration$Nand then Taking$NOxygen Reading") := [1067124,100000,0];
				Oxygen_Purge : TIMER (Description := "Period for$NPassing Oxygen$NCalibration Gas through Analyser") := [1067124,120000,0];
				Program_Seconds_Counter : COUNTER (Description := "How many seconds this program has been running for") := [536870912,0,45166136];
				Purge_Period : TIMER (Description := "Purge Period$NMeasurement$NTimer") := [-1072480903,2147418112,152193];
				R1S5Ch0_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-8.03574524e+001,7.14280796e+000
						,1.96425476e+001,1.00000000e+002,1.60000000e+001,3.14280762e+002,3.14280772e+000];
				R1S5Ch10_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.28931808e+000,1.97937088e+001
						,9.87106781e+001,1.00000000e+002,1.60000000e+001,1.57937085e+003,1.57937088e+001];
				R1S5Ch11_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.68778992e+000,1.97299538e+001
						,9.83122100e+001,1.00000000e+002,1.60000000e+001,1.57299536e+003,1.57299538e+001];
				R1S5Ch12_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.42279816e+000,1.97723522e+001
						,9.85772018e+001,1.00000000e+002,1.60000000e+001,1.57723523e+003,1.57723522e+001];
				R1S5Ch13_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.37765121e+000,1.97795753e+001
						,9.86223450e+001,1.00000000e+002,1.60000000e+001,1.57795752e+003,1.57795753e+001];
				R1S5Ch14_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-7.11553116e+001,8.61515045e+000
						,2.88446884e+001,1.00000000e+002,1.60000000e+001,4.61515015e+002,4.61514997e+000];
				R1S5Ch15_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-7.82630234e+001,7.47791624e+000
						,2.17369766e+001,1.00000000e+002,1.60000000e+001,3.47791626e+002,3.47791624e+000];
				R1S5Ch1_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-8.87842407e+001,5.79452133e+000
						,1.12157593e+001,1.00000000e+002,1.60000000e+001,1.79452148e+002,1.79452145e+000];
				R1S5Ch2_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-8.14311676e+001,6.97101307e+000
						,1.85688324e+001,1.00000000e+002,1.60000000e+001,2.97101318e+002,2.97101307e+000];
				R1S5Ch3_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-5.35852699e+001,1.14263573e+001
						,4.64147300e+001,1.00000000e+002,1.60000000e+001,7.42635681e+002,7.42635679e+000];
				R1S5Ch4_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-7.23212814e+001,8.42859459e+000
						,2.76787186e+001,1.00000000e+002,1.60000000e+001,4.42859497e+002,4.42859507e+000];
				R1S5Ch5_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-6.66877213e+001,9.32996464e+000
						,3.33122787e+001,1.00000000e+002,1.60000000e+001,5.32996460e+002,5.32996464e+000];
				R1S5Ch6_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-7.54010925e+001,7.93582535e+000
						,2.45989075e+001,1.00000000e+002,1.60000000e+001,3.93582520e+002,3.93582511e+000];
				R1S5Ch7_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.37568665e+000,1.97798900e+001
						,9.86243134e+001,1.00000000e+002,1.60000000e+001,1.57798900e+003,1.57798900e+001];
				R1S5Ch8_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-3.18549347e+000,1.94903221e+001
						,9.68145065e+001,1.00000000e+002,1.60000000e+001,1.54903210e+003,1.54903212e+001];
				R1S5Ch9_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.37765121e+000,1.97795753e+001
						,9.86223450e+001,1.00000000e+002,1.60000000e+001,1.57795752e+003,1.57795753e+001];
				R1S6Ch0_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.41101837e+000,1.97742367e+001
						,9.85889816e+001,1.00000000e+002,1.60000000e+001,1.57742371e+003,1.57742367e+001];
				R1S6Ch10_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.47187042e+000,1.97644997e+001
						,9.85281296e+001,1.00000000e+002,1.60000000e+001,1.57645007e+003,1.57645006e+001];
				R1S6Ch11_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-8.96538086e+001,5.65539074e+000
						,1.03461914e+001,1.00000000e+002,1.60000000e+001,1.65539063e+002,1.65539062e+000];
				R1S6Ch12_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.35409546e+000,1.97833443e+001
						,9.86459045e+001,1.00000000e+002,1.60000000e+001,1.57833447e+003,1.57833443e+001];
				R1S6Ch13_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.43064880e+000,1.97710953e+001
						,9.85693512e+001,1.00000000e+002,1.60000000e+001,1.57710962e+003,1.57710962e+001];
				R1S6Ch14_Conv : LinearScalingIn  := [0,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,1.41334534e-002,2.00022600e+001
						,1.00014130e+002,1.00000000e+002,1.60000000e+001,1.60022607e+003,1.60022600e+001];
				R1S6Ch15_Conv : LinearScalingIn  := [3,0.00000000e+000,1.00000000e+002,4.00000000e+000,2.00000000e+001,2.36625938e+001,7.78601500e+000
						,2.36625938e+001,1.00000000e+002,1.60000000e+001,3.78601500e+002,3.78601500e+000];
				R1S6Ch1_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-4.50583725e+001,1.27906609e+001
						,5.49416275e+001,1.00000000e+002,1.60000000e+001,8.79066040e+002,8.79066086e+000];
				R1S6Ch2_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-4.76984900e+001,1.23682413e+001
						,5.23015099e+001,1.00000000e+002,1.60000000e+001,8.36824158e+002,8.36824131e+000];
				R1S6Ch3_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.32268906e+000,1.97883682e+001
						,9.86773071e+001,1.00000000e+002,1.60000000e+001,1.57883691e+003,1.57883692e+001];
				R1S6Ch4_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.36587143e+000,1.97814598e+001
						,9.86341248e+001,1.00000000e+002,1.60000000e+001,1.57814600e+003,1.57814598e+001];
				R1S6Ch5_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.47579575e+000,1.97638721e+001
						,9.85242000e+001,1.00000000e+002,1.60000000e+001,1.57638721e+003,1.57638721e+001];
				R1S6Ch6_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.38353729e+000,1.97786331e+001
						,9.86164627e+001,1.00000000e+002,1.60000000e+001,1.57786340e+003,1.57786341e+001];
				R1S6Ch7_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.40512848e+000,1.97751808e+001
						,9.85948715e+001,1.00000000e+002,1.60000000e+001,1.57751794e+003,1.57751799e+001];
				R1S6Ch8_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-1.39727783e+000,1.97764359e+001
						,9.86027222e+001,1.00000000e+002,1.60000000e+001,1.57764355e+003,1.57764359e+001];
				R1S6Ch9_Conv : LinearScalingIn  := [3,-1.00000000e+002,0.00000000e+000,4.00000000e+000,2.00000000e+001,-7.31319656e+001,8.29888535e+000
						,2.68680344e+001,1.00000000e+002,1.60000000e+001,4.29888550e+002,4.29888535e+000];
				Raw_Sample : GasesOnly (Description := "Used to buffer inputs from the Analyser") := [2.98221648e-001,8.94028783e-001,2.06392365e+001,1.15456247e+000,2.33748071e-002,2.95972489e-002
						,3.84079926e-002,5.31732365e-002,0.00000000e+000];
				Readings_Age_Timer : TIMER (Description := "Marks out seconds") := [-1072480908,1000,304];
				Readings_Index_For_Age : DINT (Description := "The last Reading idx given an age, so we can keep cycling thru the Readings array",
				            RADIX := Decimal) := 12;
				Sample_Pump_Monthly_OneShot : BOOL (RADIX := Decimal) := 0;
				Sample_Pump_Sel : BOOL (Description := "Sample Pump$NSelection Control$N0 = Pump B$N1 = Pump A",
				            RADIX := Decimal) := 0;
				Sample_Solenoid_1 OF L1.S2.DO.0 (Description := "Sample Solenoid 1 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_10 OF L1.S2.DO.9 (Description := "Sample Solenoid 10 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_11 OF L1.S2.DO.10 (Description := "Sample Solenoid 11 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_12 OF L1.S2.DO.11 (Description := "Sample Solenoid 12 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_13 OF L1.S2.DO.12 (Description := "Sample Solenoid 13 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_14 OF L1.S2.DO.13 (Description := "Sample Solenoid 14 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_15 OF L1.S2.DO.14 (Description := "Sample Solenoid 15 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_16 OF L1.S2.DO.15 (Description := "Sample Solenoid 16 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_17 OF L1.S2.DO.16 (Description := "Sample Solenoid 17 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_18 OF L1.S2.DO.17 (Description := "Sample Solenoid 18 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_19 OF L1.S2.DO.18 (Description := "Sample Solenoid 19 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_2 OF L1.S2.DO.1 (Description := "Sample Solenoid 2 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_20 OF L1.S2.DO.19 (Description := "Sample Solenoid 20 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_21 OF L1.S2.DO.20 (Description := "Sample Solenoid 21 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_22 OF L1.S2.DO.21 (Description := "Sample Solenoid 22 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_23 OF L1.S2.DO.22 (Description := "Sample Solenoid 23 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_24 OF L1.S2.DO.23 (Description := "Sample Solenoid 24 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_25 OF L1.S2.DO.24 (Description := "Sample Solenoid 25 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_26 OF L1.S2.DO.25 (Description := "Sample Solenoid 26 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_27 OF L1.S2.DO.26 (Description := "Sample Solenoid 27 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_28 OF L1.S2.DO.27 (Description := "Sample Solenoid 28 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_29 OF L1.S2.DO.28 (Description := "Sample Solenoid 29 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_3 OF L1.S2.DO.2 (Description := "Sample Solenoid 3 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_30 OF L1.S2.DO.29 (Description := "Sample Solenoid 30 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_31 OF L1.S2.DO.30 (Description := "Sample Solenoid 31 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_32 OF L1.S2.DO.31 (Description := "Sample Solenoid 32 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_4 OF L1.S2.DO.3 (Description := "Sample Solenoid 4 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_5 OF L1.S2.DO.4 (Description := "Sample Solenoid 5 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_6 OF L1.S2.DO.5 (Description := "Sample Solenoid 6 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_7 OF L1.S2.DO.6 (Description := "Sample Solenoid 7 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_8 OF L1.S2.DO.7 (Description := "Sample Solenoid 8 Output Mapped",
				            RADIX := Decimal);
				Sample_Solenoid_9 OF L1.S2.DO.8 (Description := "Sample Solenoid 9 Output Mapped",
				            RADIX := Decimal);
				Scaled_Sample : GasesOnly (Description := "Used to buffer inputs from the Analyser that have been calculated") := [2.98221648e-001,8.94028783e-001,2.06392365e+001,1.15456247e+000,2.33748071e-002,2.95972489e-002
						,3.84079926e-002,5.31732365e-002,0.00000000e+000];
				STATE_ADT_Maintenance : BOOL (Description := "Maintenance mode started by a button in the T/B Shed. In this mode no samples are collected",
				            RADIX := Decimal) := 0;
				STATE_Analyser_Calibrating : BOOL (Description := "Analyser has autonomously started to calibrate itself",
				            RADIX := Decimal) := 0;
				STATE_Awaiting : BOOL (Description := "Little time is spend in this state. There has been no failure during initialisation",
				            RADIX := Decimal) := 0;
				STATE_Bag_Sampling : BOOL (Description := "Bag sampling button is ON",
				            RADIX := Decimal) := 0;
				STATE_Fast_Post_Sample : BOOL (Description := "Pause after a sample has been taken and before switch again to the same tube when $'fast$' holding",
				            RADIX := Decimal) := 0;
				STATE_Fast_Pre_Sample : BOOL (Description := "In fast holding mode a sample has not yet been taken",
				            RADIX := Decimal) := 0;
				STATE_Faulted : BOOL (Description := "Initialise subroutine has failed one of its validation checks",
				            RADIX := Decimal) := 0;
				STATE_Initial_Post_Sample : BOOL (Description := "After have sampled during initial longer stage of holding when have first arrived at the tube to be held",
				            RADIX := Decimal) := 0;
				STATE_Initial_Pre_Sample : BOOL (Description := "Before have sampled during initial longer stage of holding when have first arrived at the tube to be held",
				            RADIX := Decimal) := 0;
				STATE_Post_Sample : BOOL (Description := "After have sampled and waiting to switch to the next tube",
				            RADIX := Decimal) := 0;
				STATE_Pre_Sample : BOOL (Description := "Have switched to but not yet sampled",
				            RADIX := Decimal) := 1;
				STATE_SMARTGAS_connect_Manual : BOOL (Description := "SMARTGAS-connect user has gone to the manual screen that can be used to manually switch and sample",
				            RADIX := Decimal) := 0;
				Switching_Timer : TIMER (Description := "Marks out duration between switches") := [-1072480903,180000,152192];
				Switch_Moment : BOOL (Description := "Moment in time to switch to the next tube in the sequence",
				            RADIX := Decimal) := 0;
				TEMP_Analyser_Calibrating : BOOL (RADIX := Decimal) := 0;
				TEMP_Failed_Initialisation : BOOL (Description := "Only used within Initialise subroutine. Will be set to T when initialisation fails",
				            RADIX := Decimal) := 0;
				TEMP_Fast_Holding_Sampling : DINT (Description := "How long will be sampling when come to be Fast Holding",
				            RADIX := Decimal) := 3000;
				TEMP_Maybe_Seq_Index : DINT (Description := "When incrementing the sequence pointer (index) use this temp var to catch getting to end of the sequence",
				            RADIX := Decimal) := 27;
				TEMP_Reading_Idx : DINT (Description := "Used to pass param to subroutine when zeroing Readings",
				            RADIX := Decimal) := 32;
				TEMP_Up_To_Official_Duration : DINT (Description := "Milliseconds duration from switched-to to taken official sample",
				            RADIX := Decimal) := 176000;
				TEST : BOOL (RADIX := Decimal) := 0;
				Test1 : COUNTER  := [0,100,61];
				Test2 : COUNTER  := [536870912,100,233514];
				Test_Timer : TIMER  := [-1071231671,2000,844];
				Tubes_Seq : Tube_Seq_Item[100] (Description := "Sequence of Tubes. Allows repeats. Starts at 1") := [[0,0,0],[3,180000,1],[6,180000,1],[7,180000,1],[1,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[2,180000,1],[3,180000,1],[6,180000
						,1],[7,180000,1],[4,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[5,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[15,180000
						,1],[3,180000,1],[6,180000,1],[7,180000,1],[16,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[18,180000,1],[3,180000,1],[6,180000
						,1],[7,180000,1],[19,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[26,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[28,180000
						,1],[3,180000,1],[6,180000,1],[7,180000,1],[31,180000,1],[3,180000,1],[6,180000,1],[7,180000,1],[32,180000,1],[25,20000,0]];
				Tube_No_Last_Scan : DINT (RADIX := Decimal) := 7;
				Vent_Byp_Timer : TIMER  := [511628,1000,0];
				Zero_Calibration : TIMER  := [1067124,90000,0];
				Zero_Gas_Purge : TIMER  := [1067124,150000,0];
			END_TAG

			ROUTINE Alarms_Flow 
					RC: "Rung monitors all alarms generated from Sampling System$N"
					    "============================================$N"
					    "$N"
					    "";
					N: XIO(SCADA_R_Gas.Alm.A01)XIO(SCADA_R_Gas.Alm.A02)XIO(SCADA_R_Gas.Alm.A03)XIO(SCADA_R_Gas.Alm.A04)XIO(SCADA_R_Gas.Alm.A05)XIO(SCADA_R_Gas.Alm.A06)XIO(SCADA_R_Gas.Alm.A07)XIO(SCADA_R_Gas.Alm.A08)XIO(SCADA_R_Gas.Alm.A09)XIO(SCADA_R_Gas.Alm.A10)XIO(SCADA_R_Gas.Alm.A11)XIO(SCADA_R_Gas.Alm.A12)XIO(SCADA_R_Gas.Alm.A13)XIO(SCADA_R_Gas.Alm.A14)XIO(SCADA_R_Gas.Alm.A15)XIO(SCADA_R_Gas.Alm.A16)XIO(SCADA_R_Gas.Alm.A17)XIO(SCADA_R_Gas.Alm.A18)XIO(SCADA_R_Gas.Alm.A19)XIO(SCADA_R_Gas.Alm.A20)XIO(SCADA_R_Gas.Alm.A21)XIO(SCADA_R_Gas.Alm.A22)XIO(SCADA_R_Gas.Alm.A23)XIO(SCADA_R_Gas.Alm.A24)XIO(SCADA_R_Gas.Alm.A25)XIO(SCADA_R_Gas.Alm.A26)XIO(SCADA_R_Gas.Alm.A27)XIO(SCADA_R_Gas.Alm.A28)XIO(SCADA_R_Gas.Alm.A29)XIO(SCADA_R_Gas.Alm.A30)XIO(SCADA_R_Gas.Alm.A31)XIO(SCADA_R_Gas.Alm.A32)OTE(SCADA_R_Gas.Stat.Alms_Hlthy);
					N: XIC(Global_Logic[0])FLL(0,SCADA_R_Gas.Alm,1);
					RC: "Detect when there has been a change of sample solenoid$N"
					    "==============================================";
					N: NEQ(SMRTGS_W_Switched_To_Tube_Num,Tube_No_Last_Scan)[OTE(Local_Logic[2]) ,MOV(SMRTGS_W_Switched_To_Tube_Num,Tube_No_Last_Scan) ];
					RC: "Reset the low flow sample counter if there was no low flow alarm at the end of the sample and the next sample begins$N"
					    "======================================================================================";
					N: [XIC(Local_Logic[2]) XIO(SCADA_R_Gas.Alm.A01) ,XIC(Ch_Faults.DN) ]RES(Ch_Faults);
					RC: "Check to see if there are low flow issues with this sample channel$N"
					    "===============================================$N"
					    "$N"
					    "";
					N: LES(L1.S7.AI02,0.5)XIO(Local_Logic[2])[TON(Alm1_Del,?,?) ,XIC(Alm1_Del.DN) OTE(SCADA_R_Gas.Alm.A01) ];
					RC: "Count ther number of low flow faults$N"
					    "============================";
					N: XIC(SCADA_R_Gas.Alm.A01)CTU(Ch_Faults,?,?);
					RC: "CH4 Cylinder Low Flow Alarm Rung$N"
					    "Monitors pressure during Automatic and Manual Calibration$N"
					    "==============================================";
					N: XIC(L1.S3.DO.5)LES(L1.S7.AI02,0.5)[TON(Alm_Cal_Flo,?,?) ,XIC(Alm_Cal_Flo.DN) OTE(SCADA_R_Gas.Alm.A07) ];
					RC: "CO2 Cylinder Low Flow Alarm Rung$N"
					    "Monitors pressure during Automatic and Manual Calibration$N"
					    "==============================================";
					N: XIC(L1.S3.DO.6)LES(L1.S7.AI02,0.5)[TON(Alm_Cal_Flo1,?,?) ,XIC(Alm_Cal_Flo1.DN) OTE(SCADA_R_Gas.Alm.A08) ];
					RC: "CO Cylinder Low Flow Alarm Rung$N"
					    "Monitors pressure during Automatic and Manual Calibration$N"
					    "==============================================";
					N: XIC(L1.S3.DO.7)LES(L1.S7.AI02,0.5)[TON(Alm_Cal_Flo2,?,?) ,XIC(Alm_Cal_Flo2.DN) OTE(SCADA_R_Gas.Alm.A09) ];
					RC: "O2 Cal Low Flow Alarm Rung$N"
					    "Monitors pressure during Automatic and Manual Calibration$N"
					    "==============================================";
					N: XIC(SCADA_R_Analyser_Calibrating_Auto_Input)XIC(Local_Logic[10])LES(L1.S7.AI02,0.5)[TON(Alm_Cal_Flo3,?,?) ,XIC(Alm_Cal_Flo3.DN) OTE(SCADA_R_Gas.Alm.A10) ];
					RC: "N2 Cylinder Low Flow Alarm Rung$N"
					    "Monitors pressure during Automatic and Manual Calibration$N"
					    "==============================================";
					N: XIC(L1.S3.DO.4)LES(L1.S7.AI02,0.5)[TON(Alm_Cal_Flo4,?,?) ,XIC(Alm_Cal_Flo4.DN) OTE(SCADA_R_Gas.Alm.A11) ];
					RC: "Bypass Pump 1 Fault Rung$N"
					    "If all 10 Vacuum Transmitters monitoring Bypass Pump 1 display low vacuum then pump has failed$N"
					    "========================================================================$N"
					    "$N"
					    "$N"
					    "";
					N: LES(HMI_R_Gas.Ch1_Vac,-5)LES(HMI_R_Gas.Ch2_Vac,-5)LES(HMI_R_Gas.Ch3_Vac,-5)LES(HMI_R_Gas.Ch4_Vac,-5)LES(HMI_R_Gas.Ch5_Vac,-5)LES(HMI_R_Gas.Ch16_Vac,-5)LES(HMI_R_Gas.Ch17_Vac,-5)LES(HMI_R_Gas.Ch18_Vac,-5)LES(HMI_R_Gas.Ch19_Vac,-5)LES(HMI_R_Gas.Ch20_Vac,-5)OTE(Byp_Pmp_1);
					RC: "Bypass Pump 2 Fault Rung$N"
					    "If all 10 Vacuum Transmitters monitoring Bypass Pump 2 display low vacuum then pump has failed$N"
					    "========================================================================$N"
					    "$N"
					    "";
					N: LES(HMI_R_Gas.Ch6_Vac,-5)LES(HMI_R_Gas.Ch7_Vac,-5)LES(HMI_R_Gas.Ch8_Vac,-5)LES(HMI_R_Gas.Ch9_Vac,-5)LES(HMI_R_Gas.Ch10_Vac,-5)LES(HMI_R_Gas.Ch21_Vac,-5)LES(HMI_R_Gas.Ch22_Vac,-5)LES(HMI_R_Gas.Ch23_Vac,-5)LES(HMI_R_Gas.Ch24_Vac,-5)LES(HMI_R_Gas.Ch25_Vac,-5)OTE(Byp_Pmp_2);
					RC: "Bypass Pump 3 Fault Rung$N"
					    "If all 10 Vacuum Transmitters monitoring Bypass Pump 3 display low vacuum then pump has failed$N"
					    "========================================================================$N"
					    "$N"
					    "";
					N: LES(HMI_R_Gas.Ch11_Vac,-5)LES(HMI_R_Gas.Ch12_Vac,-5)LES(HMI_R_Gas.Ch13_Vac,-5)LES(HMI_R_Gas.Ch14_Vac,-5)LES(HMI_R_Gas.Ch15_Vac,-5)LES(HMI_R_Gas.Ch26_Vac,-5)LES(HMI_R_Gas.Ch27_Vac,-5)LES(HMI_R_Gas.Ch28_Vac,-5)LES(HMI_R_Gas.Ch29_Vac,-5)LES(HMI_R_Gas.Ch30_Vac,-5)OTE(Byp_Pmp_3);
					N: XIO(Byp_Pmp_1)OTE(SCADA_R_Gas.Alm.A03);
					N: XIO(Byp_Pmp_2)OTE(SCADA_R_Gas.Alm.A04);
					N: XIO(Byp_Pmp_3)OTE(SCADA_R_Gas.Alm.A05);
					RC: "Mass Flow Controller Low Flow Alarm$N"
					    "Output flow from MFC = <0.5Lpm then alarm$N"
					    "Bypassed during calibration";
					N: XIO(SCADA_R_Analyser_Calibrating_Auto_Input)XIO(SCADA_R_Analyser_Calibrating_Man_Input)LES(Local:7:I.Ch2Data,0.5)OTE(SCADA_R_Gas.Alm.A06);
			END_ROUTINE

			ROUTINE Alarms_System 
					RC: "Dehumidifier Temperature Alarm$N"
					    "Alarm Set Point is >6 degrees C$N"
					    "=========================";
					N: XIO(L1.S4.DI.0)OTE(SCADA_R_Sys.Alm[0]);
					RC: "Tube Bundle Hut Fire System Isolated$N"
					    "Output from Tube Bundle Hut Fire Panel$N"
					    "==============================";
					N: XIC(L1.S4.DI.16)OTE(SCADA_R_Sys.Alm[1]);
					RC: "Tube Bundle Hut Fire Alarm$N"
					    "Output from Tube Bundle Hut Fire Panel$N"
					    "==============================";
					N: XIC(L1.S4.DI.17)[OTE(SCADA_R_Sys.Alm[2]) ,OTE(L1.S3.DO.16) ];
					RC: "Tube Bundle Hut Fire System Fault$N"
					    "Output from Tube Bundle Hut Fire Panel$N"
					    "==============================";
					N: XIC(L1.S4.DI.18)OTE(SCADA_R_Sys.Alm[3]);
					RC: ">1.25% Methane detected in Tube Bundle Gas Room and/or$N"
					    "<19% Oxygen detected in Tube Bundle Gas Room $N"
					    "Power cut to Gas Room when energised$N"
					    "=======================================";
					N: XIO(L1.S4.DI.19)XIO(L1.S4.DI.21)XIO(L1.S4.DI.17)[OTE(SCADA_R_Sys.Alm[4]) ,OTE(L1.S3.DO.18) ];
					RC: "Tube Bundle Gas Room Ventilation System Failure$N"
					    "Power cut to Gas Room when energised$N"
					    "=======================================";
					N: XIC(L1.S4.DI.21)[OTE(SCADA_R_Sys.Alm[5]) ,OTE(L1.S3.DO.17) ];
					RC: "Tube Bundle Hut Fire Alarm Safety Contactor Auxillary$N"
					    "Power cut to Gas Room when energised$N"
					    "=======================================";
					N: XIC(L1.S4.DI.22)OTE(SCADA_R_Sys.Alm[6]);
					RC: "Tube Bundle Hut Ventilation System Alarm bypass for maintenance$N"
					    "=================================================";
					N: XIC(L1.S4.DI.23)OTE(SCADA_R_Sys.Alm[7]);
					RC: "UPS AC Fail Alarm$N"
					    "Mains power to Tube Bundle Hut failed$N"
					    "System running on UPS$N"
					    "Generator to take over system supply after 20 mins$N"
					    "==============================";
					N: XIC(L1.S4.DI.24)OTE(SCADA_R_Sys.Alm[8]);
					RC: "Precisive CH4-CO2 Analyser Fault$N"
					    "==========================";
					N: XIC(A1_Discrete_Inputs[0])OTE(SCADA_R_Sys.Alm[9]);
					RC: "Precisive CO-O2 Analyser Fault$N"
					    "==========================";
					N: XIC(A2_Discrete_Inputs[0])OTE(SCADA_R_Sys.Alm[10]);
			END_ROUTINE

			ROUTINE Analyser_Calibration 
					RC: "Analyser Automatic Calibration triggered at the begining of each month$N"
					    "Manual Calibration triggered from HMI$N"
					    "System switched to $QCalibrating$Q Mode$N"
					    "====================================================$N"
					    "$N"
					    "";
					N: XIC(Always.MonthlyOneShot)OTL(SCADA_R_Analyser_Calibrating_Auto_Input);
					N: XIC(HMI_W.Man_Cal_Enter)OTL(SCADA_R_Analyser_Calibrating_Man_Input);
					RC: "Disable Automatic Zero Sequence During Maual Calibration$N"
					    "============================================$N"
					    "$N"
					    "";
					N: XIC(HMI_W.Man_Cal_Enter)OTL(Local_Logic[5]);
					RC: "Analyser Calibration complete $N"
					    "System switched to Normal Operation$N"
					    "==============================";
					N: XIC(Oxygen_Purge.DN)ONS(ONS[5])OTU(SCADA_R_Analyser_Calibrating_Auto_Input);
					RC: "Enable Automatic Zero Sequence after Maual Calibration$N"
					    "============================================";
					N: XIC(Purge_Timer.DN)ONS(ONS[2])[OTU(Local_Logic[5]) ,OTU(SCADA_R_Analyser_Calibrating_Man_Input) ];
					RC: "Begin Zero Gas Purge Sequence Automatically or$N"
					    "Manually from HMI$N"
					    "==========================================$N"
					    "";
					N: [XIC(SCADA_R_Analyser_Calibrating_Auto_Input) XIO(Local_Logic[5]) ,XIC(HMI_W.Man_Zero_Cal) XIO(Local_Logic[4]) ][TON(Zero_Gas_Purge,?,?) ,TON(Zero_Calibration,?,?) ];
					RC: "Energize Calibration Solenoid during Automatic and Manual Calibration$N"
					    "Calibration Solenoid De-energized for Oxygen Calibration which samples fresh air outside the system$N"
					    "=========================================================================";
					N: [XIC(SCADA_R_Analyser_Calibrating_Auto_Input) ,XIC(SCADA_R_Analyser_Calibrating_Man_Input) ]XIO(Oxygen_Purge.TT)XIO(Local_Logic[10])OTE(L1.S3.DO.3);
					RC: "Energized Zero Gas Solenoid during Automatic Sequence$N"
					    "Can also energize manually via HMI$N"
					    "===========================================";
					N: [XIC(Zero_Gas_Purge.TT) ,XIC(HMI_W.Flo_Zero) XIO(Local_Logic[4]) ]OTE(L1.S3.DO.4);
					RC: "Initiate Precisive Analyser Zero Calibration Sequence Automatically or Manually from HMI$N"
					    "Capture the real Oxygen Reading at the end of the zero calibration period$N"
					    "=========================================================$N"
					    "This will be used for zero scaling";
					N: XIC(Zero_Gas_Purge.TT)XIO(SCADA_R_Gas.Alm.A02)[XIC(Zero_Calibration.TT) OTE(MBTU_MB_0xx[1]) ,XIC(Zero_Calibration.TT) OTE(MBTU_MB_0xx[2]) ,XIC(Zero_Calibration.DN) ONS(ONS[0]) MOV(A2_OXYGEN,O2_Zero_Cal_Reading) ];
					RC: "Automatic Zero Gas Purge Complete$N"
					    "Begin Methane Gas Purge$N"
					    "Disabled during Manual Calibration$N"
					    "======================$N"
					    "";
					N: XIC(Zero_Gas_Purge.DN)XIO(HMI_W.Flo_Zero)TON(Methane_Gas_Purge,?,?);
					RC: "Energise Methane Cylinder Solenoid during Automatic Calibration Sequence$N"
					    "Manual solenoid operation available from HMI$N"
					    "============================================";
					N: [XIC(Methane_Gas_Purge.TT) ,XIC(HMI_W.Flo_CH4) XIO(Local_Logic[4]) ]OTE(L1.S3.DO.5);
					RC: "Automatic Methane Gas Purge Complete$N"
					    "Begin Automatic Carbon Dioxide Gas Purge$N"
					    "=================================";
					N: XIC(Methane_Gas_Purge.DN)TON(Carbon_Dioxide_Purge,?,?);
					RC: "Energize Carbon Dioxide Cylinder Solenoid during Automatic Calibration Sequence$N"
					    "Manual solenoid operation available from HMI$N"
					    "============================================================";
					N: [XIC(Carbon_Dioxide_Purge.TT) ,XIC(HMI_W.Flo_CO2) XIO(Local_Logic[4]) ]OTE(L1.S3.DO.6);
					RC: "Automatic Carbon Dioxide Gas Purge Complete$N"
					    "Begin Automatic Carbon Monoxide Gas Purge$N"
					    "====================================";
					N: XIC(Carbon_Dioxide_Purge.DN)TON(Carbon_Monoxide_Purge,?,?);
					RC: "Energize Carbon Monoxide Cylinder Solenoid during Automatic Calibration Sequence$N"
					    "Manual solenoid operation available from HMI$N"
					    "============================================";
					N: [XIC(Carbon_Monoxide_Purge.TT) ,XIC(HMI_W.Flo_CO) XIO(Local_Logic[4]) ]OTE(L1.S3.DO.7);
					RC: "Automatic Carbon Monoxide Gas Purge Complete$N"
					    "Begin Automatic Oxygen Gas Purge$N"
					    "=====================================";
					N: XIC(Carbon_Monoxide_Purge.DN)[TON(Oxygen_Purge,?,?) ,TON(Oxygen_Cal_Del,?,?) ];
					RC: "Oxygen Gas Purge via Sample Point 32$N"
					    "=================================$N"
					    "";
					N: [XIC(Oxygen_Purge.TT) ,XIC(HMI_W.Flo_O2) ,[XIC(HMI_W.Man_Cal_Exit) ,XIC(Purge_Timer.TT) ] TON(Purge_Timer,?,?) ]OTE(Local_Logic[10]);
					RC: "Capture the real Oxygen Reading at the end of the calibration period$N"
					    "=========================================================$N"
					    "This will be used for span scaling";
					N: [XIC(Oxygen_Cal_Del.DN) ,XIC(HMI_W.Man_Span_O2) ]XIO(SCADA_R_Gas.Alm.A02)ONS(ONS[1])MOV(A2_OXYGEN,O2_Cal_Reading);
					RC: "This result compensates for any instrument drift of zero gas or span gas readings.$N"
					    "================================================================";
					N: LinearScalingIn(O2_Cal_Scaling,O2_Zero_Cal_Reading,O2_Cal_Reading,0,20.9,A2_OXYGEN,O2_Calibrated_Reading);
			END_ROUTINE

			ROUTINE Automatic_Mode_Logic 
					RC: "******************************************************************$N"
					    "Automatic Mode Logic$N"
					    "******************************************************************$N"
					    "Responsible for switching and sampling in Automatic mode. Automatic mode is made up of three sub-modes: Normal Automatic, Initial Holding and Fast Holding. Normal Automatic mode goes through the tubes sequence (Tubes_Seq) whereas the two Holding modes stay on one element (of type Tube_Seq_Item) from the tubes sequence. The first duration at the tube being held is longer than subsequently, when we can be assured the sample is not polluted with atmosphere from other tubes. This first duration is that of the element in the sequence. The SMARTGAS-connect Automatic mode screen is initialised from and (on exit) populates Tubes_Seq.";
					N: NOP();
					RC: "If not in Manual_Mode Switching_Timer will accumulate to its Preset value. In other rungs this timer has its Preset (PRE) set upon done (DN) being detected. Thus this timer is always running while in Automatic mode. When it is done (DN) another tube is usually switched to, and the duration for that tube is assigned to Switching_Timer.PRE, and one of Auto_Mode_Reset, Initial_Hold_Reset or Fast_Hold_Reset is set, causing rung 4 to reset this timer.$N"
					    " $N"
					    "If no tube is being held then the timer will be set to go for Tubes_Seq[SCADA_R_Switched_To_Seq_Index].Duration milliseconds. In other words the Switching_Timer will be set to go for the duration (Tube_Seq_Item.Duration) of the current element (SCADA_R_Switched_To_Seq_Index) in the tubes sequence (Tubes_Seq).$N"
					    "=================================================";
					N: XIO(Manual_Mode)TON(Switching_Timer,?,?);
					RC: "This rung creates a trigger for the moment that the user (through SMARTGAS-connect) / analyser has decided to leave Automatic mode. This is the same thing as going into Manual mode.$N"
					    "=================================================$N"
					    "";
					N: XIC(Manual_Mode)OSR(Leave_Auto_Moment_OSR,Leave_Auto_Moment);
					RC: "Going into Manual mode. All state is neutralised, apart from that which is kept for the return back to Automatic mode again. If we were in Holding mode (where SMRTGS_W_Holding_Seq_Index is non-zero) then Holding_Switch_Counter is reset for the same reason it was at rung 1 - to get a properly-purged first reading for the held tube as the first step in Holding mode when Automatic mode is re-entered. If we were not in Holding mode then SCADA_R_Switched_To_Seq_Index would be decremented. This is to counter what will happen when Automatic mode is re-entered, namely that rung 7 will increment the pointer (SCADA_R_Switched_To_Seq_Index) into Tubes_Seq.$N"
					    "=================================================";
					N: XIC(Leave_Auto_Moment)[MOV(0,SCADA_R_Official_Seq_Index) MOV(0,SCADA_R_Official_Tube_Num) MOV(0,Switching_Timer.PRE) MOV(SMRTGS_W_Holding_Seq_Index,Last_Holding_Seq_Index) [NEQ(SMRTGS_W_Holding_Seq_Index,0) RES(Holding_Switch_Counter) ,EQU(SMRTGS_W_Holding_Seq_Index,0) SUB(SCADA_R_Switched_To_Seq_Index,1,SCADA_R_Switched_To_Seq_Index) ,RES(Take_Manual_Sample_Counter) ] ,CTU(Test1,?,?) ];
					RC: "In Automatic mode when the Switching_Timer has completed it is set to be reset in three places which indicate the three main $'switch to switch$' stages of this program: Normal Automatic, Initial Holding and Fast Holding. Here we do the actual reset. As this is the end of the duration at a particular tube it is the right time to set the ‘official read’ registers back to zero. SMARTGAS-connect needs these registers to be non-zero only during dead time.$N"
					    "=================================================";
					N: XIO(Manual_Mode)[XIC(Auto_Mode_Reset) ,XIC(Initial_Hold_Reset) ,XIC(Fast_Hold_Reset) ][MOV(0,SCADA_R_Official_Seq_Index) MOV(0,SCADA_R_Official_Tube_Num) RES(Switching_Timer) ,CTU(Test2,?,?) ];
					RC: "Automatic mode has several states. The subroutine Automatic_Mode_State_Changes uses the current state of this program to set the STATE tag to one of two normal Automatic mode states: STATE_Pre_Sample, STATE_Post_Sample; OR one of four $'Holding mode within Automatic mode$' states: STATE_Initial_Pre_Sample, STATE_Initial_Post_Sample, STATE_Fast_Pre_Sample, STATE_Fast_Post_Sample. These last four are the four steps within Holding mode.$N"
					    "=================================================";
					N: JSR(Automatic_Mode_State_Changes,0);
					RC: "Catch that Switching_Timer has finished and name it Switch_Moment.$N"
					    "=================================================";
					N: XIC(Switching_Timer.DN)XIO(Manual_Mode)OTE(Switch_Moment);
					RC: "SMARTGAS-connect changes the register SMRTGS_W_Holding_Seq_Index to a non-zero number to indicate $'Holding mode within Automatic mode$'. This rung will detect that a different tube number is being held to last time (including if last time was zero, none held i.e. normal Automatic mode). When a different tube is held or when entering Holding mode Holding_Switch_Counter is reset. $N"
					    "=================================================$N"
					    "";
					N: XIC(Switch_Moment)NEQ(SMRTGS_W_Holding_Seq_Index,Last_Holding_Seq_Index)[RES(Holding_Switch_Counter) ,MOV(SMRTGS_W_Holding_Seq_Index,Last_Holding_Seq_Index) ];
					RC: "Increment the sequence pointer, respecting its maximum size in the rare case where the sequence is full$N"
					    "=================================================";
					N: XIC(Switch_Moment)EQU(SMRTGS_W_Holding_Seq_Index,0)ADD(SCADA_R_Switched_To_Seq_Index,1,TEMP_Maybe_Seq_Index)GRT(TEMP_Maybe_Seq_Index,CONSTANT_Seq_Capacity)MOV(1,TEMP_Maybe_Seq_Index);
					RC: "When at Switch_Moment and no tube is being held i.e. normal Automatic mode. Sets the next current Tube_Seq_Item (UDT) by either incrementing SCADA_R_Switched_To_Seq_Index or setting it back to 1 if Tubes_Seq[Maybe_Seq_Index].Enabled is false and so the end of the sequence has been reached. Thus the $'which tube$' (Tube_Seq_Item.Tube_Num) and $'for how long$' (Tube_Seq_Item.Duration) input values of the next element in the sequence are set. At the end of the rung indirectly resetting Switching_Timer with Auto_Mode_Reset means that it will go again for its newly set Switching_Timer.PRE. SMRTGS_W_Switched_To_Tube_Num is set to the new tube number. See Z_Output_Map for what happens when it is changed: the currently open solenoid is shut and the solenoid at tube number SMRTGS_W_Switched_To_Tube_Num is opened.$N"
					    "=================================================";
					N: XIC(Switch_Moment)EQU(SMRTGS_W_Holding_Seq_Index,0)[XIO(Tubes_Seq[TEMP_Maybe_Seq_Index].Enabled) MOV(1,SCADA_R_Switched_To_Seq_Index) ,XIC(Tubes_Seq[TEMP_Maybe_Seq_Index].Enabled) MOV(TEMP_Maybe_Seq_Index,SCADA_R_Switched_To_Seq_Index) ]MOV(Tubes_Seq[SCADA_R_Switched_To_Seq_Index].Tube_Num,SMRTGS_W_Switched_To_Tube_Num)MOV(Tubes_Seq[SCADA_R_Switched_To_Seq_Index].Duration,Switching_Timer.PRE)OTE(Auto_Mode_Reset);
					RC: "As with all Switch_Moment rungs the Switching_Timer has completed. While it was still in progress a SMARTGAS-connect user set SMRTGS_W_Holding_Seq_Index to a non-zero value, causing the first $'to coil$' pass through this rung. With Holding_Switch_Counter.PRE permanently set to 2 the second $'to coil$' pass through this rung will set Holding_Switch_Counter.DN to true and preclude any further $'to coil$' passes, until of course the counter is reset.$N"
					    "=================================================$N"
					    "";
					N: XIC(Switch_Moment)NEQ(SMRTGS_W_Holding_Seq_Index,0)XIO(Holding_Switch_Counter.DN)[CTU(Holding_Switch_Counter,?,?) ,OTE(Count_Up_Hold_Moment) ];
					RC: "Continuation of rung 10. The first complete ($'to coil$') scan of rung 10 increments Holding_Switch_Counter, but not so it becomes done (DN). So here SCADA_R_Switched_To_Seq_Index, SMRTGS_W_Switched_To_Tube_Num and Switching_Timer.PRE are all set using SMRTGS_W_Holding_Seq_Index as input. Holding mode has now set state which will be used not only by Switching_Timer but also by Citect, SMARTGAS-connect and the output rungs which move the solenoids. $N"
					    "$N"
					    "The next time this rung will be scanned is when Switching_Timer.PRE milliseconds is up (as with all Switch_Moment rungs). Holding_Switch_Counter will have accumulated to 2 and so have become done (DN) and all we need to do is set Switching_Timer.PRE to the (usually) quicker Subsequent_Holding_Duration_Const. Switched_To_Seq_Index and Switched_To_Tube_Num are kept as they are.$N"
					    "$N"
					    "Holding_Switch_Counter.DN will now remain true until the user does one of three things: $N"
					    "1./ takes the tube that is being held out of holding and Switching_Timer has completed causing a Switch_Moment$N"
					    "2./ holds a different tube and Switching_Timer has completed causing a Switch_Moment$N"
					    "3./ goes into Manual mode which immediately interrupts Switching_Timer$N"
					    "=================================================";
					N: XIC(Count_Up_Hold_Moment)[XIO(Holding_Switch_Counter.DN) MOV(SMRTGS_W_Holding_Seq_Index,SCADA_R_Switched_To_Seq_Index) MOV(Tubes_Seq[SCADA_R_Switched_To_Seq_Index].Tube_Num,SMRTGS_W_Switched_To_Tube_Num) MOV(Tubes_Seq[SCADA_R_Switched_To_Seq_Index].Duration,Switching_Timer.PRE) ,XIC(Holding_Switch_Counter.DN) MOV(CONSTANT_Fast_Holding_Duration,Switching_Timer.PRE) ]OTE(Initial_Hold_Reset);
					RC: "In Holding mode at Switch_Moment when the Initial Holding has completed. As you can see this rung does not need to set any state other than that required (Fast_Hold_Reset) to start Switching_Timer over again. SCADA_R_Switched_To_Seq_Index has already been set to SMRTGS_W_Holding_Seq_Index and SMRTGS_W_Switched_To_Tube_Num has already been set to the Tube_Seq_Item.Tube_Num at SCADA_R_Switched_To_Seq_Index. And Switching_Timer.PRE already reflects CONSTANT_Fast_Holding_Duration.$N"
					    "=================================================";
					N: XIC(Switch_Moment)NEQ(SMRTGS_W_Holding_Seq_Index,0)XIC(Holding_Switch_Counter.DN)OTE(Fast_Hold_Reset);
					RC: "Here the official time at which to take a sample (TEMP_Up_To_Official_Duration) is set to be Switching_Timer.PRE less CONSTANT_Dead_Time/CONSTANT_Fast_Holding_Dead_Time. The Switching_Timer accumulating up to or beyond TEMP_Up_To_Official_Duration marks the Official_Read_Moment, which will only be turned on for one scan cycle.$N"
					    "=================================================$N"
					    "";
					N: XIO(Manual_Mode)XIC(Switching_Timer.TT)[XIO(Holding_Switch_Counter.DN) SUB(Switching_Timer.PRE,CONSTANT_Dead_Time,TEMP_Up_To_Official_Duration) ,XIC(Holding_Switch_Counter.DN) SUB(CONSTANT_Fast_Holding_Duration,CONSTANT_Fast_Holding_Dead_Time,TEMP_Up_To_Official_Duration) ]GRT(TEMP_Up_To_Official_Duration,0)GEQ(Switching_Timer.ACC,TEMP_Up_To_Official_Duration)OSR(Official_Read_Moment_OSR,Official_Read_Moment);
					RC: "SCADA_R_Official_Tube_Num is updated with the tube that is about to be officially sampled with the call to Take_Official_Sample. As well as being used internally it may need to be viewed by external programs such as Citect. SCADA_R_Official_Seq_Index is continually monitored by SMARTGAS-connect so it can know when to read from $'its own$' set of floating point registers: SCADA_R_Smartgas_Sample.$N"
					    "=================================================$N"
					    "";
					N: XIC(Official_Read_Moment)MOV(SMRTGS_W_Switched_To_Tube_Num,SCADA_R_Official_Tube_Num)[JSR(Take_Official_Sample,0) ,MOV(SCADA_R_Switched_To_Seq_Index,SCADA_R_Official_Seq_Index) ];
					RC: "SMARTGAS-connect sets SMRTGS_W_Take_Manual_Sample to TRUE. This rung picks up that change and sets it back to FALSE after calling Take_Official_Sample.$N"
					    "=================================================";
					N: XIC(Manual_Mode)XIC(SMRTGS_W_Take_Manual_Sample)[JSR(Take_Official_Sample,0) ,XIO(SMRTGS_W_Take_Manual_Sample) OTE(SMRTGS_W_Take_Manual_Sample) ,CTU(Take_Manual_Sample_Counter,?,?) ];
			END_ROUTINE

			ROUTINE Automatic_Mode_State_Changes 
					RC: "******************************************************************$N"
					    "Automatic mode state changes$N"
					    "******************************************************************$N"
					    "Uses the state set in Automatic_Mode_Logic to set STATE. It is only concerned with the state changes that occur while in Automatic mode";
					N: NOP();
					N: XIC(Auto_Mode_Reset)MOV(2,STATE);
					N: XIC(Initial_Hold_Reset)MOV(4,STATE);
					N: XIC(Fast_Hold_Reset)MOV(6,STATE);
					N: XIC(Official_Read_Moment)[XIC(Holding_Switch_Counter.DN) MOV(7,STATE) ,XIO(Holding_Switch_Counter.DN) EQU(SMRTGS_W_Holding_Seq_Index,Last_Holding_Seq_Index) [EQU(SMRTGS_W_Holding_Seq_Index,0) MOV(3,STATE) ,NEQ(SMRTGS_W_Holding_Seq_Index,0) MOV(5,STATE) ] ,XIO(Holding_Switch_Counter.DN) NEQ(SMRTGS_W_Holding_Seq_Index,Last_Holding_Seq_Index) [EQU(Last_Holding_Seq_Index,0) MOV(3,STATE) ,NEQ(Last_Holding_Seq_Index,0) MOV(5,STATE) ] ];
			END_ROUTINE

			ROUTINE A_Input_Map 
					RC: "******************************************************************$N"
					    "Input Map$N"
					    "******************************************************************$N"
					    "This subroutine is called first at the start of every scan cycle. $N"
					    "The gases are populated using two Modbus subroutines: CONV_REAL_A1 and CONV_REAL_A2. SMARTGAS-connect logic can simply use A2_CARBON_MONOXIDE, A1_METHANE, A2_OXYGEN and A1_CARBON_DIOXIDE ";
					N: NOP();
					N: MOV(Local:4:I.Data,L1.S4.DI);
					N: COP(Local:5:I.Ch0Data,L1.S5.AI00,16);
					N: COP(Local:6:I.Ch0Data,L1.S6.AI00,16);
					N: COP(Local:7:I.Ch0Data,L1.S7.AI00,16);
			END_ROUTINE

			ROUTINE A_Populate_Tubes_Seq 
					RC: "******************************************************************$N"
					    "Populate Tubes Seq$N"
					    "******************************************************************$N"
					    "Called by Main on every scan cycle only when SMRTGS_W_Pending_Tubes_Seq_Changes is TRUE. It populates Tubes_Seq. Also called during Initialise.";
					N: NOP();
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[1].Tube_Num,Tubes_Seq[1].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[1].Duration,Tubes_Seq[1].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[1].Enabled)OTE(Tubes_Seq[1].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[2].Tube_Num,Tubes_Seq[2].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[2].Duration,Tubes_Seq[2].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[2].Enabled)OTE(Tubes_Seq[2].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[3].Tube_Num,Tubes_Seq[3].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[3].Duration,Tubes_Seq[3].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[3].Enabled)OTE(Tubes_Seq[3].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[4].Tube_Num,Tubes_Seq[4].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[4].Duration,Tubes_Seq[4].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[4].Enabled)OTE(Tubes_Seq[4].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[5].Tube_Num,Tubes_Seq[5].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[5].Duration,Tubes_Seq[5].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[5].Enabled)OTE(Tubes_Seq[5].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[6].Tube_Num,Tubes_Seq[6].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[6].Duration,Tubes_Seq[6].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[6].Enabled)OTE(Tubes_Seq[6].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[7].Tube_Num,Tubes_Seq[7].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[7].Duration,Tubes_Seq[7].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[7].Enabled)OTE(Tubes_Seq[7].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[8].Tube_Num,Tubes_Seq[8].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[8].Duration,Tubes_Seq[8].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[8].Enabled)OTE(Tubes_Seq[8].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[9].Tube_Num,Tubes_Seq[9].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[9].Duration,Tubes_Seq[9].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[9].Enabled)OTE(Tubes_Seq[9].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[10].Tube_Num,Tubes_Seq[10].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[10].Duration,Tubes_Seq[10].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[10].Enabled)OTE(Tubes_Seq[10].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[11].Tube_Num,Tubes_Seq[11].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[11].Duration,Tubes_Seq[11].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[11].Enabled)OTE(Tubes_Seq[11].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[12].Tube_Num,Tubes_Seq[12].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[12].Duration,Tubes_Seq[12].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[12].Enabled)OTE(Tubes_Seq[12].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[13].Tube_Num,Tubes_Seq[13].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[13].Duration,Tubes_Seq[13].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[13].Enabled)OTE(Tubes_Seq[13].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[14].Tube_Num,Tubes_Seq[14].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[14].Duration,Tubes_Seq[14].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[14].Enabled)OTE(Tubes_Seq[14].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[15].Tube_Num,Tubes_Seq[15].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[15].Duration,Tubes_Seq[15].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[15].Enabled)OTE(Tubes_Seq[15].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[16].Tube_Num,Tubes_Seq[16].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[16].Duration,Tubes_Seq[16].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[16].Enabled)OTE(Tubes_Seq[16].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[17].Tube_Num,Tubes_Seq[17].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[17].Duration,Tubes_Seq[17].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[17].Enabled)OTE(Tubes_Seq[17].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[18].Tube_Num,Tubes_Seq[18].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[18].Duration,Tubes_Seq[18].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[18].Enabled)OTE(Tubes_Seq[18].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[19].Tube_Num,Tubes_Seq[19].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[19].Duration,Tubes_Seq[19].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[19].Enabled)OTE(Tubes_Seq[19].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[20].Tube_Num,Tubes_Seq[20].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[20].Duration,Tubes_Seq[20].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[20].Enabled)OTE(Tubes_Seq[20].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[21].Tube_Num,Tubes_Seq[21].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[21].Duration,Tubes_Seq[21].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[21].Enabled)OTE(Tubes_Seq[21].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[22].Tube_Num,Tubes_Seq[22].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[22].Duration,Tubes_Seq[22].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[22].Enabled)OTE(Tubes_Seq[22].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[23].Tube_Num,Tubes_Seq[23].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[23].Duration,Tubes_Seq[23].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[23].Enabled)OTE(Tubes_Seq[23].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[24].Tube_Num,Tubes_Seq[24].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[24].Duration,Tubes_Seq[24].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[24].Enabled)OTE(Tubes_Seq[24].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[25].Tube_Num,Tubes_Seq[25].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[25].Duration,Tubes_Seq[25].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[25].Enabled)OTE(Tubes_Seq[25].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[26].Tube_Num,Tubes_Seq[26].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[26].Duration,Tubes_Seq[26].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[26].Enabled)OTE(Tubes_Seq[26].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[27].Tube_Num,Tubes_Seq[27].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[27].Duration,Tubes_Seq[27].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[27].Enabled)OTE(Tubes_Seq[27].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[28].Tube_Num,Tubes_Seq[28].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[28].Duration,Tubes_Seq[28].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[28].Enabled)OTE(Tubes_Seq[28].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[29].Tube_Num,Tubes_Seq[29].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[29].Duration,Tubes_Seq[29].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[29].Enabled)OTE(Tubes_Seq[29].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[30].Tube_Num,Tubes_Seq[30].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[30].Duration,Tubes_Seq[30].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[30].Enabled)OTE(Tubes_Seq[30].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[31].Tube_Num,Tubes_Seq[31].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[31].Duration,Tubes_Seq[31].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[31].Enabled)OTE(Tubes_Seq[31].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[32].Tube_Num,Tubes_Seq[32].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[32].Duration,Tubes_Seq[32].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[32].Enabled)OTE(Tubes_Seq[32].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[33].Tube_Num,Tubes_Seq[33].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[33].Duration,Tubes_Seq[33].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[33].Enabled)OTE(Tubes_Seq[33].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[34].Tube_Num,Tubes_Seq[34].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[34].Duration,Tubes_Seq[34].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[34].Enabled)OTE(Tubes_Seq[34].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[35].Tube_Num,Tubes_Seq[35].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[35].Duration,Tubes_Seq[35].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[35].Enabled)OTE(Tubes_Seq[35].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[36].Tube_Num,Tubes_Seq[36].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[36].Duration,Tubes_Seq[36].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[36].Enabled)OTE(Tubes_Seq[36].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[37].Tube_Num,Tubes_Seq[37].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[37].Duration,Tubes_Seq[37].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[37].Enabled)OTE(Tubes_Seq[37].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[38].Tube_Num,Tubes_Seq[38].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[38].Duration,Tubes_Seq[38].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[38].Enabled)OTE(Tubes_Seq[38].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[39].Tube_Num,Tubes_Seq[39].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[39].Duration,Tubes_Seq[39].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[39].Enabled)OTE(Tubes_Seq[39].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[40].Tube_Num,Tubes_Seq[40].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[40].Duration,Tubes_Seq[40].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[40].Enabled)OTE(Tubes_Seq[40].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[41].Tube_Num,Tubes_Seq[41].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[41].Duration,Tubes_Seq[41].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[41].Enabled)OTE(Tubes_Seq[41].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[42].Tube_Num,Tubes_Seq[42].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[42].Duration,Tubes_Seq[42].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[42].Enabled)OTE(Tubes_Seq[42].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[43].Tube_Num,Tubes_Seq[43].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[43].Duration,Tubes_Seq[43].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[43].Enabled)OTE(Tubes_Seq[43].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[44].Tube_Num,Tubes_Seq[44].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[44].Duration,Tubes_Seq[44].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[44].Enabled)OTE(Tubes_Seq[44].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[45].Tube_Num,Tubes_Seq[45].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[45].Duration,Tubes_Seq[45].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[45].Enabled)OTE(Tubes_Seq[45].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[46].Tube_Num,Tubes_Seq[46].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[46].Duration,Tubes_Seq[46].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[46].Enabled)OTE(Tubes_Seq[46].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[47].Tube_Num,Tubes_Seq[47].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[47].Duration,Tubes_Seq[47].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[47].Enabled)OTE(Tubes_Seq[47].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[48].Tube_Num,Tubes_Seq[48].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[48].Duration,Tubes_Seq[48].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[48].Enabled)OTE(Tubes_Seq[48].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[49].Tube_Num,Tubes_Seq[49].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[49].Duration,Tubes_Seq[49].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[49].Enabled)OTE(Tubes_Seq[49].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[50].Tube_Num,Tubes_Seq[50].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[50].Duration,Tubes_Seq[50].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[50].Enabled)OTE(Tubes_Seq[50].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[51].Tube_Num,Tubes_Seq[51].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[51].Duration,Tubes_Seq[51].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[51].Enabled)OTE(Tubes_Seq[51].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[52].Tube_Num,Tubes_Seq[52].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[52].Duration,Tubes_Seq[52].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[52].Enabled)OTE(Tubes_Seq[52].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[53].Tube_Num,Tubes_Seq[53].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[53].Duration,Tubes_Seq[53].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[53].Enabled)OTE(Tubes_Seq[53].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[54].Tube_Num,Tubes_Seq[54].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[54].Duration,Tubes_Seq[54].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[54].Enabled)OTE(Tubes_Seq[54].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[55].Tube_Num,Tubes_Seq[55].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[55].Duration,Tubes_Seq[55].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[55].Enabled)OTE(Tubes_Seq[55].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[56].Tube_Num,Tubes_Seq[56].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[56].Duration,Tubes_Seq[56].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[56].Enabled)OTE(Tubes_Seq[56].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[57].Tube_Num,Tubes_Seq[57].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[57].Duration,Tubes_Seq[57].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[57].Enabled)OTE(Tubes_Seq[57].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[58].Tube_Num,Tubes_Seq[58].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[58].Duration,Tubes_Seq[58].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[58].Enabled)OTE(Tubes_Seq[58].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[59].Tube_Num,Tubes_Seq[59].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[59].Duration,Tubes_Seq[59].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[59].Enabled)OTE(Tubes_Seq[59].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[60].Tube_Num,Tubes_Seq[60].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[60].Duration,Tubes_Seq[60].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[60].Enabled)OTE(Tubes_Seq[60].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[61].Tube_Num,Tubes_Seq[61].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[61].Duration,Tubes_Seq[61].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[61].Enabled)OTE(Tubes_Seq[61].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[62].Tube_Num,Tubes_Seq[62].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[62].Duration,Tubes_Seq[62].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[62].Enabled)OTE(Tubes_Seq[62].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[63].Tube_Num,Tubes_Seq[63].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[63].Duration,Tubes_Seq[63].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[63].Enabled)OTE(Tubes_Seq[63].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[64].Tube_Num,Tubes_Seq[64].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[64].Duration,Tubes_Seq[64].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[64].Enabled)OTE(Tubes_Seq[64].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[65].Tube_Num,Tubes_Seq[65].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[65].Duration,Tubes_Seq[65].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[65].Enabled)OTE(Tubes_Seq[65].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[66].Tube_Num,Tubes_Seq[66].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[66].Duration,Tubes_Seq[66].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[66].Enabled)OTE(Tubes_Seq[66].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[67].Tube_Num,Tubes_Seq[67].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[67].Duration,Tubes_Seq[67].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[67].Enabled)OTE(Tubes_Seq[67].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[68].Tube_Num,Tubes_Seq[68].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[68].Duration,Tubes_Seq[68].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[68].Enabled)OTE(Tubes_Seq[68].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[69].Tube_Num,Tubes_Seq[69].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[69].Duration,Tubes_Seq[69].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[69].Enabled)OTE(Tubes_Seq[69].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[70].Tube_Num,Tubes_Seq[70].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[70].Duration,Tubes_Seq[70].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[70].Enabled)OTE(Tubes_Seq[70].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[71].Tube_Num,Tubes_Seq[71].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[71].Duration,Tubes_Seq[71].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[71].Enabled)OTE(Tubes_Seq[71].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[72].Tube_Num,Tubes_Seq[72].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[72].Duration,Tubes_Seq[72].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[72].Enabled)OTE(Tubes_Seq[72].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[73].Tube_Num,Tubes_Seq[73].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[73].Duration,Tubes_Seq[73].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[73].Enabled)OTE(Tubes_Seq[73].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[74].Tube_Num,Tubes_Seq[74].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[74].Duration,Tubes_Seq[74].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[74].Enabled)OTE(Tubes_Seq[74].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[75].Tube_Num,Tubes_Seq[75].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[75].Duration,Tubes_Seq[75].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[75].Enabled)OTE(Tubes_Seq[75].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[76].Tube_Num,Tubes_Seq[76].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[76].Duration,Tubes_Seq[76].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[76].Enabled)OTE(Tubes_Seq[76].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[77].Tube_Num,Tubes_Seq[77].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[77].Duration,Tubes_Seq[77].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[77].Enabled)OTE(Tubes_Seq[77].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[78].Tube_Num,Tubes_Seq[78].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[78].Duration,Tubes_Seq[78].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[78].Enabled)OTE(Tubes_Seq[78].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[79].Tube_Num,Tubes_Seq[79].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[79].Duration,Tubes_Seq[79].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[79].Enabled)OTE(Tubes_Seq[79].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[80].Tube_Num,Tubes_Seq[80].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[80].Duration,Tubes_Seq[80].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[80].Enabled)OTE(Tubes_Seq[80].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[81].Tube_Num,Tubes_Seq[81].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[81].Duration,Tubes_Seq[81].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[81].Enabled)OTE(Tubes_Seq[81].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[82].Tube_Num,Tubes_Seq[82].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[82].Duration,Tubes_Seq[82].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[82].Enabled)OTE(Tubes_Seq[82].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[83].Tube_Num,Tubes_Seq[83].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[83].Duration,Tubes_Seq[83].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[83].Enabled)OTE(Tubes_Seq[83].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[84].Tube_Num,Tubes_Seq[84].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[84].Duration,Tubes_Seq[84].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[84].Enabled)OTE(Tubes_Seq[84].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[85].Tube_Num,Tubes_Seq[85].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[85].Duration,Tubes_Seq[85].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[85].Enabled)OTE(Tubes_Seq[85].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[86].Tube_Num,Tubes_Seq[86].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[86].Duration,Tubes_Seq[86].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[86].Enabled)OTE(Tubes_Seq[86].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[87].Tube_Num,Tubes_Seq[87].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[87].Duration,Tubes_Seq[87].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[87].Enabled)OTE(Tubes_Seq[87].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[88].Tube_Num,Tubes_Seq[88].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[88].Duration,Tubes_Seq[88].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[88].Enabled)OTE(Tubes_Seq[88].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[89].Tube_Num,Tubes_Seq[89].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[89].Duration,Tubes_Seq[89].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[89].Enabled)OTE(Tubes_Seq[89].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[90].Tube_Num,Tubes_Seq[90].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[90].Duration,Tubes_Seq[90].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[90].Enabled)OTE(Tubes_Seq[90].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[91].Tube_Num,Tubes_Seq[91].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[91].Duration,Tubes_Seq[91].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[91].Enabled)OTE(Tubes_Seq[91].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[92].Tube_Num,Tubes_Seq[92].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[92].Duration,Tubes_Seq[92].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[92].Enabled)OTE(Tubes_Seq[92].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[93].Tube_Num,Tubes_Seq[93].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[93].Duration,Tubes_Seq[93].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[93].Enabled)OTE(Tubes_Seq[93].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[94].Tube_Num,Tubes_Seq[94].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[94].Duration,Tubes_Seq[94].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[94].Enabled)OTE(Tubes_Seq[94].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[95].Tube_Num,Tubes_Seq[95].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[95].Duration,Tubes_Seq[95].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[95].Enabled)OTE(Tubes_Seq[95].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[96].Tube_Num,Tubes_Seq[96].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[96].Duration,Tubes_Seq[96].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[96].Enabled)OTE(Tubes_Seq[96].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[97].Tube_Num,Tubes_Seq[97].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[97].Duration,Tubes_Seq[97].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[97].Enabled)OTE(Tubes_Seq[97].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[98].Tube_Num,Tubes_Seq[98].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[98].Duration,Tubes_Seq[98].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[98].Enabled)OTE(Tubes_Seq[98].Enabled);
					N: MOV(SMRTGS_W_Tubes_Seq_Buffer[99].Tube_Num,Tubes_Seq[99].Tube_Num)MOV(SMRTGS_W_Tubes_Seq_Buffer[99].Duration,Tubes_Seq[99].Duration)XIC(SMRTGS_W_Tubes_Seq_Buffer[99].Enabled)OTE(Tubes_Seq[99].Enabled);
					
			END_ROUTINE

			ROUTINE HMI_Read 
					RC: "This routine builds a contiguous block of data for the the Panelview to read$N"
					    "==========================================================$N"
					    "This provides a local HMI view of the gas sampling operation";
					N: NOP();
					RC: "Set HMI Display for Carbon Dioxide$N"
					    "=============================";
					N: MOV(A1_CARBON_DIOXIDE,HMI_R_Gas.CO2);
					RC: "Set HMI Display for Carbon Monoxide$N"
					    "=============================";
					N: MOV(A2_CARBON_MONOXIDE,HMI_R_Gas.CO);
					RC: "Set HMI Display for Oxygen$N"
					    "=============================";
					N: MOV(O2_Calibrated_Reading,HMI_R_Gas.O2);
					RC: "Set HMI Display for Methane$N"
					    "=============================";
					N: MOV(A1_METHANE,HMI_R_Gas.CH4);
					RC: "Set Tube being sampled for HMI$N"
					    "=============================";
					N: MOV(SMRTGS_W_Switched_To_Tube_Num,HMI_R_Gas.Ch_No);
					RC: "Channel # 1 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,1)MOV(Local:5:I.Ch0Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 2 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,2)MOV(Local:5:I.Ch1Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 3 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,3)MOV(Local:5:I.Ch2Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 4 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,4)MOV(Local:5:I.Ch3Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 5 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,5)MOV(Local:5:I.Ch4Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 6 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,6)MOV(Local:5:I.Ch5Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 7 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,7)MOV(Local:5:I.Ch6Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 8 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,8)MOV(Local:5:I.Ch7Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 9 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,9)MOV(Local:5:I.Ch8Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 10 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,10)MOV(Local:5:I.Ch9Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 11 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,11)MOV(Local:5:I.Ch10Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 12 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,12)MOV(Local:5:I.Ch11Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 13 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,13)MOV(Local:5:I.Ch12Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 14 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,14)MOV(Local:5:I.Ch13Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 15 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,15)MOV(Local:5:I.Ch14Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 16 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,16)MOV(Local:5:I.Ch15Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 17 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,17)MOV(Local:6:I.Ch0Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 18 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,18)MOV(Local:6:I.Ch1Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 19 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,19)MOV(Local:6:I.Ch2Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 20 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,20)MOV(Local:6:I.Ch3Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 21 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,21)MOV(Local:6:I.Ch4Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 22 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,22)MOV(Local:6:I.Ch5Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 23 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,23)MOV(Local:6:I.Ch6Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 24 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,24)MOV(Local:6:I.Ch7Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 25 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,25)MOV(Local:6:I.Ch8Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 26 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,26)MOV(Local:6:I.Ch9Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 27 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,27)MOV(Local:6:I.Ch10Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 28 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,28)MOV(Local:6:I.Ch11Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 29 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,29)MOV(Local:6:I.Ch12Data,HMI_R_Gas.Ch_Vac);
					RC: "Channel # 30 Vacuum Value$N"
					    "=====================";
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,30)MOV(Local:6:I.Ch13Data,HMI_R_Gas.Ch_Vac);
					RC: "Monitor for a channel number change$N"
					    "============================";
					N: NEQ(HMI_R_Gas.Ch_No,Last_Channel)[OTE(Local_Logic[0]) ,MOV(HMI_R_Gas.Ch_No,Last_Channel) ];
					RC: "Purge Period Timer$N"
					    "===============$N"
					    "Reset each time the channel number changes";
					N: XIO(Local_Logic[0])XIO(Purge_Period.DN)TON(Purge_Period,?,?);
					RC: "Convert purge period timer from milliseconds to seconds.$N"
					    "==========================================";
					N: DIV(Purge_Period.ACC,1000,HMI_R_Gas.Prg_Per);
					RC: "Copy Analog Input Data into HMI Vacuum Readings$N"
					    "==========================================";
					N: COP(Local:5:I.Ch0Data,HMI_R_Gas.Ch1_Vac,16);
					RC: "Copy Analog Input Data into HMI Vacuum Readings$N"
					    "==========================================";
					N: COP(Local:6:I.Ch0Data,HMI_R_Gas.Ch17_Vac,14);
					RC: "Copy Analog Input Data into HMI Sample Pressure Reading$N"
					    "==========================================";
					N: COP(Local:6:I.Ch15Data,HMI_R_Gas.Ch_Sam_Pres,1);
					RC: "Copy Slot 2 Digital Data to HMI Read Tag$N"
					    "================================";
					N: COP(Local:2:O.Data,HMI_R_PLC.S2,1);
					RC: "Copy Slot 3 Digital Data to HMI Read Tag$N"
					    "================================";
					N: COP(Local:3:O.Data,HMI_R_PLC.S3,1);
					RC: "Copy Slot 4 Digital Data to HMI Read Tag$N"
					    "================================";
					N: COP(Local:4:I.Data,HMI_R_PLC.S4,1);
					RC: "Set Zero Gas Purge Timer for HMI";
					N: XIC(Zero_Gas_Purge.TT)OTE(HMI_R_Gas.Zero_Purge);
					RC: "Set Zero Gas Done Bit for HMI";
					N: XIC(Zero_Gas_Purge.DN)OTE(HMI_R_Gas.Zero_Purge_DN);
					RC: "Set Analyser Purge for HMI";
					N: XIC(Purge_Timer.TT)OTE(HMI_R_Gas.Analyser_Purge);
					RC: "****************************$N"
					    "Control Logix Analog Input Scaling$N"
					    "********************************$N"
					    "Analog Input Slot 5 channel 0$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch0Underrange) XIO(Local:5:I.Ch0Overrange) LinearScalingIn(R1S5Ch0_Conv,-100,0,4,20,Local:5:I.Ch0Data,HMI_R_PLC.S5.AI00) ,[XIC(Local:5:I.Ch0Underrange) ,XIC(Local:5:I.Ch0Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI00) ];
					N: XIC(Zero_Gas_Purge.TT)OTE(Local_Logic[18]);
					RC: "Analog Input Card Slot 5 - Channel 00 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch0Underrange) ,XIC(Local:5:I.Ch0Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch00);
					RC: "$N"
					    "Analog Input Slot 5 channel 1$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch1Underrange) XIO(Local:5:I.Ch1Overrange) LinearScalingIn(R1S5Ch1_Conv,-100,0,4.0,20.0,Local:5:I.Ch1Data,HMI_R_PLC.S5.AI01) ,[XIC(Local:5:I.Ch1Underrange) ,XIC(Local:5:I.Ch1Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI01) ];
					RC: "Analog Input Card Slot 5 - Channel 01 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch1Underrange) ,XIC(Local:5:I.Ch1Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch01);
					RC: "$N"
					    "Analog Input Slot 5 channel 2$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch2Underrange) XIO(Local:5:I.Ch2Overrange) LinearScalingIn(R1S5Ch2_Conv,-100,0,4.0,20.0,Local:5:I.Ch2Data,HMI_R_PLC.S5.AI02) ,[XIC(Local:5:I.Ch2Underrange) ,XIC(Local:5:I.Ch2Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI02) ];
					RC: "Analog Input Card Slot 5 - Channel 02 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch2Underrange) ,XIC(Local:5:I.Ch2Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch02);
					RC: "$N"
					    "Analog Input Slot 5 channel 3$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch3Underrange) XIO(Local:5:I.Ch3Overrange) LinearScalingIn(R1S5Ch3_Conv,-100,0,4.0,20.0,Local:5:I.Ch3Data,HMI_R_PLC.S5.AI03) ,[XIC(Local:5:I.Ch3Underrange) ,XIC(Local:5:I.Ch3Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI03) ];
					RC: "Analog Input Card Slot 5 - Channel 03 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch3Underrange) ,XIC(Local:5:I.Ch3Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch03);
					RC: "$N"
					    "Analog Input Slot 5 channel 4$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch4Underrange) XIO(Local:5:I.Ch4Overrange) LinearScalingIn(R1S5Ch4_Conv,-100,0,4.0,20.0,Local:5:I.Ch4Data,HMI_R_PLC.S5.AI04) ,[XIC(Local:5:I.Ch4Underrange) ,XIC(Local:5:I.Ch4Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI04) ];
					RC: "Analog Input Card Slot 5 - Channel 04 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch4Underrange) ,XIC(Local:5:I.Ch4Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch05);
					RC: "$N"
					    "Analog Input Slot 5 channel 5$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch5Underrange) XIO(Local:5:I.Ch5Overrange) LinearScalingIn(R1S5Ch5_Conv,-100,0,4.0,20.0,Local:5:I.Ch5Data,HMI_R_PLC.S5.AI05) ,[XIC(Local:5:I.Ch5Underrange) ,XIC(Local:5:I.Ch5Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI05) ];
					RC: "Analog Input Card Slot 5 - Channel 05 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch5Underrange) ,XIC(Local:5:I.Ch5Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch05);
					RC: "$N"
					    "Analog Input Slot 5 channel 6$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch6Underrange) XIO(Local:5:I.Ch6Overrange) LinearScalingIn(R1S5Ch6_Conv,-100,0,4.0,20.0,Local:5:I.Ch6Data,HMI_R_PLC.S5.AI06) ,[XIC(Local:5:I.Ch6Underrange) ,XIC(Local:5:I.Ch6Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI06) ];
					RC: "Analog Input Card Slot 5 - Channel 06 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch6Underrange) ,XIC(Local:5:I.Ch6Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch06);
					RC: "$N"
					    "Analog Input Slot 5 channel 7$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch6Underrange) XIO(Local:5:I.Ch6Overrange) LinearScalingIn(R1S5Ch7_Conv,-100,0,4.0,20.0,Local:5:I.Ch7Data,HMI_R_PLC.S5.AI07) ,[XIC(Local:5:I.Ch7Underrange) ,XIC(Local:5:I.Ch7Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI07) ];
					RC: "Analog Input Card Slot 5 - Channel 07 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch7Underrange) ,XIC(Local:5:I.Ch7Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch07);
					RC: "$N"
					    "Analog Input Slot 5 channel 8$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch8Underrange) XIO(Local:5:I.Ch8Overrange) LinearScalingIn(R1S5Ch8_Conv,-100,0,4.0,20.0,Local:5:I.Ch8Data,HMI_R_PLC.S5.AI08) ,[XIC(Local:5:I.Ch8Underrange) ,XIC(Local:5:I.Ch8Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI08) ];
					RC: "Analog Input Card Slot 5 - Channel 08 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch8Underrange) ,XIC(Local:5:I.Ch8Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch08);
					RC: "$N"
					    "Analog Input Slot 5 channel 9$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch9Underrange) XIO(Local:5:I.Ch9Overrange) LinearScalingIn(R1S5Ch9_Conv,-100,0,4.0,20.0,Local:5:I.Ch9Data,HMI_R_PLC.S5.AI09) ,[XIC(Local:5:I.Ch9Underrange) ,XIC(Local:5:I.Ch9Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI09) ];
					RC: "Analog Input Card Slot 5 - Channel 09 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch9Underrange) ,XIC(Local:5:I.Ch9Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch09);
					RC: "$N"
					    "Analog Input Slot 5 channel 10$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch10Underrange) XIO(Local:5:I.Ch10Overrange) LinearScalingIn(R1S5Ch10_Conv,-100,0,4.0,20.0,Local:5:I.Ch10Data,HMI_R_PLC.S5.AI10) ,[XIC(Local:5:I.Ch10Underrange) ,XIC(Local:5:I.Ch10Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI10) ];
					RC: "Analog Input Card Slot 5 - Channel 10 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch10Underrange) ,XIC(Local:5:I.Ch10Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch10);
					RC: "$N"
					    "Analog Input Slot 5 channel 11$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch11Underrange) XIO(Local:5:I.Ch11Overrange) LinearScalingIn(R1S5Ch11_Conv,-100,0,4.0,20.0,Local:5:I.Ch11Data,HMI_R_PLC.S5.AI11) ,[XIC(Local:5:I.Ch11Underrange) ,XIC(Local:5:I.Ch11Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI11) ];
					RC: "Analog Input Card Slot 5 - Channel 11 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch11Underrange) ,XIC(Local:5:I.Ch11Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch11);
					RC: "$N"
					    "Analog Input Slot 5 channel 12$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch12Underrange) XIO(Local:5:I.Ch12Overrange) LinearScalingIn(R1S5Ch12_Conv,-100,0,4.0,20.0,Local:5:I.Ch12Data,HMI_R_PLC.S5.AI12) ,[XIC(Local:5:I.Ch12Underrange) ,XIC(Local:5:I.Ch12Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI12) ];
					RC: "Analog Input Card Slot 5 - Channel 12 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch12Underrange) ,XIC(Local:5:I.Ch12Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch12);
					RC: "$N"
					    "Analog Input Slot 5 channel 13$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch13Underrange) XIO(Local:5:I.Ch13Overrange) LinearScalingIn(R1S5Ch13_Conv,-100,0,4.0,20.0,Local:5:I.Ch13Data,HMI_R_PLC.S5.AI13) ,[XIC(Local:5:I.Ch13Underrange) ,XIC(Local:5:I.Ch13Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI13) ];
					RC: "Analog Input Card Slot 5 - Channel 13 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch13Underrange) ,XIC(Local:5:I.Ch13Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch13);
					RC: "$N"
					    "Analog Input Slot 5 channel 14$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch14Underrange) XIO(Local:5:I.Ch14Overrange) LinearScalingIn(R1S5Ch14_Conv,-100,0,4.0,20.0,Local:5:I.Ch14Data,HMI_R_PLC.S5.AI14) ,[XIC(Local:5:I.Ch14Underrange) ,XIC(Local:5:I.Ch14Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI14) ];
					RC: "Analog Input Card Slot 5 - Channel 14 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch14Underrange) ,XIC(Local:5:I.Ch14Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch14);
					RC: "$N"
					    "Analog Input Slot 5 channel 15$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:5:I.Ch15Underrange) XIO(Local:5:I.Ch15Overrange) LinearScalingIn(R1S5Ch15_Conv,-100,0,4.0,20.0,Local:5:I.Ch15Data,HMI_R_PLC.S5.AI15) ,[XIC(Local:5:I.Ch15Underrange) ,XIC(Local:5:I.Ch15Overrange) ] MOV(0.0,HMI_R_PLC.S5.AI15) ];
					RC: "Analog Input Card Slot 5 - Channel 15 Range Fault$N"
					    "======================================";
					N: [XIC(Local:5:I.Ch15Underrange) ,XIC(Local:5:I.Ch15Overrange) ]OTE(HMI_R_PLC.S5.Rng_Flt_Ch15);
					RC: "****************************$N"
					    "Control Logix Analog Input Scaling$N"
					    "********************************$N"
					    "Analog Input Slot 6 channel 0$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch0Underrange) XIO(Local:6:I.Ch0Overrange) LinearScalingIn(R1S6Ch0_Conv,-100,0,4.0,20.0,Local:6:I.Ch0Data,HMI_R_PLC.S6.AI00) ,[XIC(Local:6:I.Ch0Underrange) ,XIC(Local:6:I.Ch0Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI00) ];
					RC: "Analog Input Card Slot 6 - Channel 00 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch0Underrange) ,XIC(Local:6:I.Ch0Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch00);
					RC: "$N"
					    "Analog Input Slot 6 channel 1$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch1Underrange) XIO(Local:6:I.Ch1Overrange) LinearScalingIn(R1S6Ch1_Conv,-100,0,4.0,20.0,Local:6:I.Ch1Data,HMI_R_PLC.S6.AI01) ,[XIC(Local:6:I.Ch1Underrange) ,XIC(Local:6:I.Ch1Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI01) ];
					RC: "Analog Input Card Slot 6 - Channel 01 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch1Underrange) ,XIC(Local:6:I.Ch1Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch01);
					RC: "$N"
					    "Analog Input Slot 6 channel 2$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch2Underrange) XIO(Local:6:I.Ch2Overrange) LinearScalingIn(R1S6Ch2_Conv,-100,0,4.0,20.0,Local:6:I.Ch2Data,HMI_R_PLC.S6.AI02) ,[XIC(Local:6:I.Ch2Underrange) ,XIC(Local:6:I.Ch2Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI02) ];
					RC: "Analog Input Card Slot 6 - Channel 02 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch2Underrange) ,XIC(Local:6:I.Ch2Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch02);
					RC: "$N"
					    "Analog Input Slot 6 channel 3$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch3Underrange) XIO(Local:6:I.Ch3Overrange) LinearScalingIn(R1S6Ch3_Conv,-100,0,4.0,20.0,Local:6:I.Ch3Data,HMI_R_PLC.S6.AI03) ,[XIC(Local:6:I.Ch3Underrange) ,XIC(Local:6:I.Ch3Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI03) ];
					RC: "Analog Input Card Slot 6 - Channel 03 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch3Underrange) ,XIC(Local:6:I.Ch3Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch03);
					RC: "$N"
					    "Analog Input Slot 6 channel 4$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch4Underrange) XIO(Local:6:I.Ch4Overrange) LinearScalingIn(R1S6Ch4_Conv,-100,0,4.0,20.0,Local:6:I.Ch4Data,HMI_R_PLC.S6.AI04) ,[XIC(Local:6:I.Ch4Underrange) ,XIC(Local:6:I.Ch4Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI04) ];
					RC: "Analog Input Card Slot 6 - Channel 04 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch4Underrange) ,XIC(Local:6:I.Ch4Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch05);
					RC: "$N"
					    "Analog Input Slot 6 channel 5$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch5Underrange) XIO(Local:6:I.Ch5Overrange) LinearScalingIn(R1S6Ch5_Conv,-100,0,4.0,20.0,Local:6:I.Ch5Data,HMI_R_PLC.S6.AI05) ,[XIC(Local:6:I.Ch5Underrange) ,XIC(Local:6:I.Ch5Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI05) ];
					RC: "Analog Input Card Slot 6 - Channel 05 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch5Underrange) ,XIC(Local:6:I.Ch5Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch05);
					RC: "$N"
					    "Analog Input Slot 6 channel 6$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch6Underrange) XIO(Local:6:I.Ch6Overrange) LinearScalingIn(R1S6Ch6_Conv,-100,0,4.0,20.0,Local:6:I.Ch6Data,HMI_R_PLC.S6.AI06) ,[XIC(Local:6:I.Ch6Underrange) ,XIC(Local:6:I.Ch6Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI06) ];
					RC: "Analog Input Card Slot 6 - Channel 06 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch6Underrange) ,XIC(Local:6:I.Ch6Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch06);
					RC: "$N"
					    "Analog Input Slot 6 channel 7$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch6Underrange) XIO(Local:6:I.Ch6Overrange) LinearScalingIn(R1S6Ch7_Conv,-100,0,4.0,20.0,Local:6:I.Ch7Data,HMI_R_PLC.S6.AI07) ,[XIC(Local:6:I.Ch7Underrange) ,XIC(Local:6:I.Ch7Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI07) ];
					RC: "Analog Input Card Slot 6 - Channel 07 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch7Underrange) ,XIC(Local:6:I.Ch7Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch07);
					RC: "$N"
					    "Analog Input Slot 6 channel 8$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch8Underrange) XIO(Local:6:I.Ch8Overrange) LinearScalingIn(R1S6Ch8_Conv,-100,0,4.0,20.0,Local:6:I.Ch8Data,HMI_R_PLC.S6.AI08) ,[XIC(Local:6:I.Ch8Underrange) ,XIC(Local:6:I.Ch8Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI08) ];
					RC: "Analog Input Card Slot 6 - Channel 08 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch8Underrange) ,XIC(Local:6:I.Ch8Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch08);
					RC: "$N"
					    "Analog Input Slot 6 channel 9$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch9Underrange) XIO(Local:6:I.Ch9Overrange) LinearScalingIn(R1S6Ch9_Conv,-100,0,4.0,20.0,Local:6:I.Ch9Data,HMI_R_PLC.S6.AI09) ,[XIC(Local:6:I.Ch9Underrange) ,XIC(Local:6:I.Ch9Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI09) ];
					RC: "Analog Input Card Slot 6 - Channel 09 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch9Underrange) ,XIC(Local:6:I.Ch9Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch09);
					RC: "$N"
					    "Analog Input Slot 6 channel 10$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch10Underrange) XIO(Local:6:I.Ch10Overrange) LinearScalingIn(R1S6Ch10_Conv,-100,0,4.0,20.0,Local:6:I.Ch10Data,HMI_R_PLC.S6.AI10) ,[XIC(Local:6:I.Ch10Underrange) ,XIC(Local:6:I.Ch10Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI10) ];
					RC: "Analog Input Card Slot 6 - Channel 10 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch10Underrange) ,XIC(Local:6:I.Ch10Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch10);
					RC: "$N"
					    "Analog Input Slot 6 channel 11$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch11Underrange) XIO(Local:6:I.Ch11Overrange) LinearScalingIn(R1S6Ch11_Conv,-100,0,4.0,20.0,Local:6:I.Ch11Data,HMI_R_PLC.S6.AI11) ,[XIC(Local:6:I.Ch11Underrange) ,XIC(Local:6:I.Ch11Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI11) ];
					RC: "Analog Input Card Slot 6 - Channel 11 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch11Underrange) ,XIC(Local:6:I.Ch11Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch11);
					RC: "$N"
					    "Analog Input Slot 6 channel 12$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch12Underrange) XIO(Local:6:I.Ch12Overrange) LinearScalingIn(R1S6Ch12_Conv,-100,0,4.0,20.0,Local:6:I.Ch12Data,HMI_R_PLC.S6.AI12) ,[XIC(Local:6:I.Ch12Underrange) ,XIC(Local:6:I.Ch12Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI12) ];
					RC: "Analog Input Card Slot 6 - Channel 12 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch12Underrange) ,XIC(Local:6:I.Ch12Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch12);
					RC: "$N"
					    "Analog Input Slot 6 channel 13$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch13Underrange) XIO(Local:6:I.Ch13Overrange) LinearScalingIn(R1S6Ch13_Conv,-100,0,4.0,20.0,Local:6:I.Ch13Data,HMI_R_PLC.S6.AI13) ,[XIC(Local:6:I.Ch13Underrange) ,XIC(Local:6:I.Ch13Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI13) ];
					RC: "Analog Input Card Slot 6 - Channel 13 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch13Underrange) ,XIC(Local:6:I.Ch13Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch13);
					RC: "$N"
					    "Analog Input Slot 6 channel 14$N"
					    "=================================$N"
					    " transducer range - 0 to -100 = 4 to 20ma";
					N: [XIO(Local:6:I.Ch14Underrange) XIO(Local:6:I.Ch14Overrange) LinearScalingIn(R1S6Ch14_Conv,-100,0,4.0,20.0,Local:6:I.Ch14Data,HMI_R_PLC.S6.AI14) ,[XIC(Local:6:I.Ch14Underrange) ,XIC(Local:6:I.Ch14Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI14) ];
					RC: "Analog Input Card Slot 6 - Channel 14 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch14Underrange) ,XIC(Local:6:I.Ch14Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch14);
					RC: "$N"
					    "Analog Input Slot 6 channel 15$N"
					    "=================================$N"
					    "Sample Pressure Transmitter range 0 to 100kpa = 4 to 20ma";
					N: [XIO(Local:6:I.Ch15Underrange) XIO(Local:6:I.Ch15Overrange) LinearScalingIn(R1S6Ch15_Conv,0,100,4.0,20.0,Local:6:I.Ch15Data,HMI_R_PLC.S6.AI15) ,[XIC(Local:6:I.Ch15Underrange) ,XIC(Local:6:I.Ch15Overrange) ] MOV(0.0,HMI_R_PLC.S6.AI15) ];
					RC: "Analog Input Card Slot 6 - Channel 15 Range Fault$N"
					    "======================================";
					N: [XIC(Local:6:I.Ch15Underrange) ,XIC(Local:6:I.Ch15Overrange) ]OTE(HMI_R_PLC.S6.Rng_Flt_Ch15);
					N: COP(Local:7:I.Ch0Data,HMI_R_PLC.S7,16);
					N: XIC(SCADA_R_Analyser_Calibrating_Auto_Input)OTE(HMI_R_Gas.Auto_Cal_Stat);
			END_ROUTINE

			ROUTINE Initialise 
					RC: "******************************************************************$N"
					    "Initialise$N"
					    "******************************************************************$N"
					    "Only called on the first scan. It sets all Tags to their correct values and does some checking that they have been set correctly. If checking fails then the STATE of this program will stay at 0. Init_Constants will usually be changed according to site requirements. Init_Readings and Init_Sequence will need to be changed when the total number of tubes is changed. Init_Counters_Timers and Init_Others will never need to be changed";
					N: NOP();
					N: JSR(Init_Constants,0);
					N: JSR(Init_Readings,0);
					N: JSR(Init_Sequence_Buffer,0);
					N: JSR(A_Populate_Tubes_Seq,0);
					N: JSR(Init_Counters_Timers,0);
					N: JSR(Init_Others,0);
					N: [LES(CONSTANT_Fast_Holding_Dead_Time,2000) ,LES(CONSTANT_Dead_Time,2000) ,LES(CONSTANT_Fast_Holding_Duration,4000) ,GRT(CONSTANT_Fast_Holding_Duration,7000) ,SUB(CONSTANT_Fast_Holding_Duration,CONSTANT_Fast_Holding_Dead_Time,TEMP_Fast_Holding_Sampling) LES(TEMP_Fast_Holding_Sampling,2000) ,NEQ(Tubes_Seq[0].Tube_Num,0) ,NEQ(Tubes_Seq[0].Duration,0) ,XIC(Tubes_Seq[0].Enabled) ,EQU(Tubes_Seq[1].Tube_Num,0) ,EQU(Tubes_Seq[1].Duration,0) ,XIO(Tubes_Seq[1].Enabled) ]OTE(TEMP_Failed_Initialisation);
					N: XIC(TEMP_Failed_Initialisation)MOV(0,STATE);
					N: XIO(TEMP_Failed_Initialisation)MOV(1,STATE);
			END_ROUTINE

			ROUTINE Init_a_Reading 
					RC: "******************************************************************$N"
					    "Initialise a Reading$N"
					    "******************************************************************$N"
					    "Sets to zero all the contents of a particular Gases UDT (TEMP_Reading_Idx) in the readings array (SCADA_R_Readings) used by Citect";
					N: NOP();
					N: MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Carbon_Dioxide)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Carbon_Monoxide)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Oxygen)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Methane)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Ethane)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Propane)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Iso_Butane)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].n_Butane)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].C5Plus)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Age)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Seconds_Timestamp)MOV(0,SCADA_R_Readings[TEMP_Reading_Idx].Stale);
			END_ROUTINE

			ROUTINE Init_Constants 
					RC: "******************************************************************$N"
					    "Initialise Constants$N"
					    "******************************************************************$N"
					    "Sets all the constants to their values. Some values will change from site to site, and some will always be the same";
					N: NOP();
					N: MOV(4000,CONSTANT_Dead_Time);
					N: MOV(2000,CONSTANT_Fast_Holding_Dead_Time);
					N: MOV(5000,CONSTANT_Fast_Holding_Duration);
					N: MOV(604800,CONSTANT_Stale_Reading_Age);
					RC: "The values the constants are set to below this rung should never be changed$N"
					    "=================================================";
					N: NOP();
					N: MOV(49,CONSTANT_Seq_Capacity);
					N: MOV(1000,CONSTANT_One_Second);
					N: MOV(0,CONSTANT_Zero);
					N: MOV(2,CONSTANT_Count_Up_Holding);
			END_ROUTINE

			ROUTINE Init_Counters_Timers 
					RC: "******************************************************************$N"
					    "Initialise Counters and Timers$N"
					    "******************************************************************$N"
					    "Sets the Preset operand (.PRE) on all Timers and Counters. These values will never need to be changed. When CONSTANT_Zero is used for a Counter it means that PRE is never used for that Counter. However PRE is always used for Timers: when PRE for a Timer is set to CONSTANT_Zero it means that PRE is being dynamically assigned to by this program ";
					N: NOP();
					N: MOV(CONSTANT_Count_Up_Holding,Holding_Switch_Counter.PRE);
					N: MOV(CONSTANT_Zero,Program_Seconds_Counter.PRE);
					N: MOV(CONSTANT_One_Second,Readings_Age_Timer.PRE);
					N: MOV(CONSTANT_Zero,Take_Manual_Sample_Counter.PRE);
					N: MOV(CONSTANT_Zero,Switching_Timer.PRE);
			END_ROUTINE

			ROUTINE Init_Others 
					RC: "******************************************************************$N"
					    "Initialise Others$N"
					    "******************************************************************$N"
					    "Sets to zero/false all Controller and Program Tags that have not yet been initialised by other subroutines and are not having their values overwritten before being read";
					N: NOP();
					N: MOV(0,SCADA_R_Official_Seq_Index)MOV(0,SCADA_R_Official_Tube_Num)MOV(0,SCADA_R_Switched_To_Seq_Index);
					N: MOV(0,SMRTGS_W_Holding_Seq_Index)MOV(0,SMRTGS_W_Switched_To_Tube_Num);
					N: AFI()OTE(SMRTGS_W_Take_Manual_Sample);
					N: AFI()OTE(SMRTGS_W_Pending_Tubes_Seq_Changes);
					N: AFI()OTE(SMRTGS_W_Smartgas_Manual_Mode);
					N: MOV(0,Last_Holding_Seq_Index)MOV(0,Max_Official_Tube_Num)MOV(0,Readings_Index_For_Age);
					N: MOV(0,SCADA_R_Seq_Updated_Time.Completely_Written)MOV(1970,SCADA_R_Seq_Updated_Time.Year)MOV(0,SCADA_R_Seq_Updated_Time.Month)MOV(0,SCADA_R_Seq_Updated_Time.Day)MOV(0,SCADA_R_Seq_Updated_Time.Hour)MOV(0,SCADA_R_Seq_Updated_Time.Minute)MOV(0,SCADA_R_Seq_Updated_Time.Second)MOV(0,SCADA_R_Seq_Updated_Time.uSec)MOV(1,SCADA_R_Seq_Updated_Time.Completely_Written);
					N: MOV(0,SMRTGS_W_Seq_Updated_Lock_R)MOV(0,SMRTGS_W_Seq_Updated_Lock_W);
			END_ROUTINE

			ROUTINE Init_Readings 
					RC: "******************************************************************$N"
					    "Initialise Readings$N"
					    "******************************************************************$N"
					    "Zeros every element (of UDT Gases) of the readings array (SCADA_R_Readings). Each element contains all the gas values, two relative times and a stale indicator. All are zeroed. It also zeros the $'single reading$' buffer that SMARTGAS-connect requires";
					N: NOP();
					N: MOV(0,SCADA_R_Smartgas_Sample.Carbon_Dioxide)MOV(0,SCADA_R_Smartgas_Sample.Carbon_Monoxide)MOV(0,SCADA_R_Smartgas_Sample.Oxygen)MOV(0,SCADA_R_Smartgas_Sample.Methane);
					RC: "The first (0th) element is being initialised here, but will never be set. This is for simplicity so that SCADA_R_Readings can be indexed by a tube number (rather than tube number minus one).$N"
					    "=================================================";
					N: MOV(0,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(1,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(2,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(3,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(4,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(5,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(6,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(7,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(8,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(9,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(10,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(11,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(12,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(13,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(14,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(15,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(16,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(17,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(18,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(19,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(20,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(21,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(22,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(23,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(24,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(25,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(26,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(27,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(28,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(29,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(30,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(31,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
					N: MOV(32,TEMP_Reading_Idx)JSR(Init_a_Reading,0);
			END_ROUTINE

			ROUTINE Init_Sequence_Buffer 
					RC: "******************************************************************$N"
					    "Initialise Sequence Buffer$N"
					    "******************************************************************$N"
					    "This subroutine sets up a default sequence through the tubes. As soon as the PLC is started up with this program in it it will start automatically switching through the tubes according to this sequence. The recommendation is to set the rungs here to go through the tubes in order and stay on each for the same duration. Once SMARTGAS-connect is running it can be used to alter this sequence by setting SMRTGS_W_Pending_Tubes_Seq_Changes to TRUE (from FALSE), triggering the copy from SMRTGS_W_Tubes_Seq_Buffer (which it has filled) to Tubes_Seq. At initialisation this copy is done without requiring the trigger to activate it - evidence A_Populate_Tubes_Seq being called straight after this subroutine. ";
					N: NOP();
					N: MOV(0,SMRTGS_W_Tubes_Seq_Buffer[0].Tube_Num)MOV(0,SMRTGS_W_Tubes_Seq_Buffer[0].Duration)AFI()OTE(SMRTGS_W_Tubes_Seq_Buffer[0].Enabled);
					N: MOV(1,SMRTGS_W_Tubes_Seq_Buffer[1].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[1].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[1].Enabled);
					N: MOV(2,SMRTGS_W_Tubes_Seq_Buffer[2].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[2].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[2].Enabled);
					N: MOV(3,SMRTGS_W_Tubes_Seq_Buffer[3].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[3].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[3].Enabled);
					N: MOV(4,SMRTGS_W_Tubes_Seq_Buffer[4].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[4].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[4].Enabled);
					N: MOV(5,SMRTGS_W_Tubes_Seq_Buffer[5].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[5].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[5].Enabled);
					N: MOV(6,SMRTGS_W_Tubes_Seq_Buffer[6].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[6].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[6].Enabled);
					N: MOV(7,SMRTGS_W_Tubes_Seq_Buffer[7].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[7].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[7].Enabled);
					N: MOV(8,SMRTGS_W_Tubes_Seq_Buffer[8].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[8].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[8].Enabled);
					N: MOV(9,SMRTGS_W_Tubes_Seq_Buffer[9].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[9].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[9].Enabled);
					N: MOV(10,SMRTGS_W_Tubes_Seq_Buffer[10].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[10].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[10].Enabled);
					N: MOV(11,SMRTGS_W_Tubes_Seq_Buffer[11].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[11].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[11].Enabled);
					N: MOV(12,SMRTGS_W_Tubes_Seq_Buffer[12].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[12].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[12].Enabled);
					N: MOV(13,SMRTGS_W_Tubes_Seq_Buffer[13].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[13].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[13].Enabled);
					N: MOV(14,SMRTGS_W_Tubes_Seq_Buffer[14].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[14].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[14].Enabled);
					N: MOV(15,SMRTGS_W_Tubes_Seq_Buffer[15].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[15].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[15].Enabled);
					N: MOV(16,SMRTGS_W_Tubes_Seq_Buffer[16].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[16].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[16].Enabled);
					N: MOV(17,SMRTGS_W_Tubes_Seq_Buffer[17].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[17].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[17].Enabled);
					N: MOV(18,SMRTGS_W_Tubes_Seq_Buffer[18].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[18].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[18].Enabled);
					N: MOV(19,SMRTGS_W_Tubes_Seq_Buffer[19].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[19].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[19].Enabled);
					N: MOV(20,SMRTGS_W_Tubes_Seq_Buffer[20].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[20].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[20].Enabled);
					N: MOV(21,SMRTGS_W_Tubes_Seq_Buffer[21].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[21].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[21].Enabled);
					N: MOV(22,SMRTGS_W_Tubes_Seq_Buffer[22].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[22].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[22].Enabled);
					N: MOV(23,SMRTGS_W_Tubes_Seq_Buffer[23].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[23].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[23].Enabled);
					N: MOV(24,SMRTGS_W_Tubes_Seq_Buffer[24].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[24].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[24].Enabled);
					N: MOV(25,SMRTGS_W_Tubes_Seq_Buffer[25].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[25].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[25].Enabled);
					N: MOV(26,SMRTGS_W_Tubes_Seq_Buffer[26].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[26].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[26].Enabled);
					N: MOV(27,SMRTGS_W_Tubes_Seq_Buffer[27].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[27].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[27].Enabled);
					N: MOV(28,SMRTGS_W_Tubes_Seq_Buffer[28].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[28].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[28].Enabled);
					N: MOV(29,SMRTGS_W_Tubes_Seq_Buffer[29].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[29].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[29].Enabled);
					N: MOV(30,SMRTGS_W_Tubes_Seq_Buffer[30].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[30].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[30].Enabled);
					N: MOV(31,SMRTGS_W_Tubes_Seq_Buffer[31].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[31].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[31].Enabled);
					N: MOV(32,SMRTGS_W_Tubes_Seq_Buffer[32].Tube_Num)MOV(20000,SMRTGS_W_Tubes_Seq_Buffer[32].Duration)OTE(SMRTGS_W_Tubes_Seq_Buffer[32].Enabled);
			END_ROUTINE

			ROUTINE Main 
					RC: "******************************************************************$N"
					    "Main$N"
					    "******************************************************************$N"
					    "Called by the PLC to begin the scan cycle. This program is the ladder logic component of SMARTGAS-connect used with Tube Bundle systems. It switches tubes and takes samples from the Analyser at the correct or $'official$' moment.";
					N: NOP();
					N: XIC(S:FS)[MOV(0,STATE) ,JSR(Initialise,0) ];
					N: NEQ(STATE,0)JSR(A_Input_Map,0);
					RC: "SMARTGAS-connect sets SMRTGS_W_Pending_Tubes_Seq_Changes to TRUE. This rung picks up that change and sets it back to FALSE after calling A_Populate_Tubes_Seq.$N"
					    "=================================================";
					N: NEQ(STATE,0)XIC(SMRTGS_W_Pending_Tubes_Seq_Changes)[JSR(Update_Sequence_Time,0) JSR(A_Populate_Tubes_Seq,0) ,OTU(SMRTGS_W_Pending_Tubes_Seq_Changes) ];
					N: NEQ(STATE,0)JSR(Read_Operator_Inputs,0);
					N: NEQ(STATE,0)JSR(Automatic_Mode_Logic,0);
					N: NEQ(STATE,0)JSR(Readings_Age_Seconds,0);
					N: JSR(State_Diagnostic,0);
					N: NEQ(STATE,0)JSR(Alarms_Flow,0);
					N: NEQ(STATE,0)JSR(Switch_Tube,0);
					N: NEQ(STATE,0)JSR(Z_Output_Map,0);
					N: NEQ(STATE,0)JSR(HMI_Read,0);
					N: NEQ(STATE,0)JSR(Analyser_Calibration,0);
					N: NEQ(STATE,0)JSR(Pump_Control,0);
					N: JSR(Alarms_System,0);
					N: JSR(_Rail_Monitoring_LW901,0);
			END_ROUTINE

			ROUTINE Pump_Control 
					RC: "Sample Pump selection may be toggled by the calender month, a request from the HMI or via a low pressure alarm from 5 consecutive flow readings.$N"
					    "============================================================================================================";
					N: [XIC(Always.MonthlyOneShot) ,XIC(HMI_W.Tog_Pmp) ,XIC(Ch_Faults.DN) ][OTL(Local_Logic[1]) ,OTU(HMI_W.Tog_Pmp) ];
					RC: "Pump Selection Toggle On$N"
					    "====================";
					N: XIC(Local_Logic[1])XIO(Sample_Pump_Sel)[OTL(Sample_Pump_Sel) ,OTU(Local_Logic[1]) ];
					RC: "Pump Selection Toggle Off$N"
					    "====================";
					N: XIC(Local_Logic[1])XIC(Sample_Pump_Sel)[OTU(Sample_Pump_Sel) ,OTU(Local_Logic[1]) ];
					RC: "Sample Pump A and Sample Pump A Solenoid Energise $N"
					    "as per Toggle selection request$N"
					    "=========================================";
					N: XIC(Sample_Pump_Sel)[OTE(L1.S3.DO.8) ,OTE(L1.S3.DO.1) ];
					RC: "Sample Pump B and Sample Pump B Solenoid Energise $N"
					    "as per Toggle selection request$N"
					    "=========================================";
					N: XIO(Sample_Pump_Sel)[OTE(L1.S3.DO.9) ,OTE(L1.S3.DO.0) ];
					RC: "Bag Sample Pump Operation selection from HMI$N"
					    "=====================================";
					N: [XIC(HMI_W.Tog_Bag_Sam_Start) XIO(L1.S3.DO.10) ,XIC(L1.S3.DO.10) XIC(HMI_W.Tog_Bag_Sam_Stop) ]ONS(ONS[10])OTE(Local_Logic[3]);
					RC: "Toggle Bag Sample SCADA Input, Pump and Solenoid$N"
					    "If Analyser calibration has initiated Bag Sample Disabled$N"
					    "========================================== ";
					N: [XIO(Local_Logic[3]) XIO(SCADA_R_Analyser_Calibrating_Auto_Input) XIC(L1.S3.DO.10) ,XIC(Local_Logic[3]) XIO(SCADA_R_Analyser_Calibrating_Auto_Input) XIO(L1.S3.DO.10) ][OTE(SCADA_R_Bag_Sampling_Input) ,[OTE(L1.S3.DO.2) ,OTE(L1.S3.DO.10) ] ];
			END_ROUTINE

			ROUTINE Readings_Age_Seconds 
					RC: "******************************************************************$N"
					    "Readings Age Seconds$N"
					    "******************************************************************$N"
					    "Keeps the age of each SCADA_R_Readings element (Age in Gases UDT) up to date so Citect can display it. Seconds_Timestamp and Stale in Gases are used in this subroutine but not intended to be displayed by Citect. Seconds_Timestamp is used for aging and Stale is set from 0 to 1 when Age gets to CONSTANT_Stale_Reading_Age. When a reading element is marked as stale all the gas readings in Gases are zero-ed. Thus values that are too old to be useful will not be diplayed by Citect";
					N: NOP();
					N: TON(Readings_Age_Timer,?,?)XIC(Readings_Age_Timer.DN)OSR(One_Second_Moment_OSR,One_Second_Moment)RES(Readings_Age_Timer);
					N: XIC(One_Second_Moment)CTU(Program_Seconds_Counter,?,?);
					N: GRT(SCADA_R_Official_Tube_Num,Max_Official_Tube_Num)MOV(SCADA_R_Official_Tube_Num,Max_Official_Tube_Num);
					N: LEQ(Readings_Index_For_Age,Max_Official_Tube_Num)ADD(1,Readings_Index_For_Age,Readings_Index_For_Age);
					N: GRT(Readings_Index_For_Age,Max_Official_Tube_Num)MOV(1,Readings_Index_For_Age);
					N: NEQ(SCADA_R_Readings[Readings_Index_For_Age].Seconds_Timestamp,0)EQU(SCADA_R_Readings[Readings_Index_For_Age].Stale,0)SUB(Program_Seconds_Counter.ACC,SCADA_R_Readings[Readings_Index_For_Age].Seconds_Timestamp,SCADA_R_Readings[Readings_Index_For_Age].Age)GEQ(SCADA_R_Readings[Readings_Index_For_Age].Age,CONSTANT_Stale_Reading_Age)[MOV(1,SCADA_R_Readings[Readings_Index_For_Age].Stale) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Methane) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Oxygen) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Carbon_Dioxide) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Carbon_Monoxide) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Ethane) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Propane) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Iso_Butane) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].n_Butane) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].C5Plus) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Age) ,MOV(0,SCADA_R_Readings[Readings_Index_For_Age].Seconds_Timestamp) ];
			END_ROUTINE

			ROUTINE Read_Operator_Inputs 
					RC: "******************************************************************$N"
					    "Read Operator Inputs$N"
					    "******************************************************************$N"
					    "Sees what the Analyser or human operator wants done and decides which mode to put this program into. There is an order of precedence which this subroutine enforces: 1./ STATE_Analyser_Calibrating - Analyser calibrating (either human or Analyser initiated) mode 2./ STATE_Bag_Sampling - Bag Sampling mode 3./ STATE_ADT_Maintenance - Maintenance mode 4./ STATE_SMARTGAS_connect_Manual - SMARTGAS-connect Manual mode.                                         ";
					N: NOP();
					N: [XIC(SCADA_R_Analyser_Calibrating_Auto_Input) ,XIC(SCADA_R_Analyser_Calibrating_Man_Input) ]OTE(TEMP_Analyser_Calibrating);
					RC: "Analyser is doing self-calibration or Bag Sampling / Maintenance button pressed or Smartgas Manual mode$N"
					    "=================================================";
					N: [XIC(TEMP_Analyser_Calibrating) [EQU(SMRTGS_W_Switched_To_Tube_Num,0) MOV(1,SMRTGS_W_Switched_To_Tube_Num) ,NEQ(SMRTGS_W_Switched_To_Tube_Num,0) ] MOV(8,STATE) ,XIC(SCADA_R_Bag_Sampling_Input) XIO(TEMP_Analyser_Calibrating) [EQU(SMRTGS_W_Switched_To_Tube_Num,0) MOV(1,SMRTGS_W_Switched_To_Tube_Num) ,NEQ(SMRTGS_W_Switched_To_Tube_Num,0) ] MOV(9,STATE) ,XIC(SCADA_R_Maintenance_Input) XIO(SCADA_R_Bag_Sampling_Input) XIO(TEMP_Analyser_Calibrating) [EQU(SMRTGS_W_Switched_To_Tube_Num,0) MOV(1,SMRTGS_W_Switched_To_Tube_Num) ,NEQ(SMRTGS_W_Switched_To_Tube_Num,0) ] MOV(10,STATE) ,XIC(SMRTGS_W_Smartgas_Manual_Mode) XIO(SCADA_R_Maintenance_Input) XIO(SCADA_R_Bag_Sampling_Input) XIO(TEMP_Analyser_Calibrating) MOV(11,STATE) ]OTE(Manual_Mode);
			END_ROUTINE

			ROUTINE State_Diagnostic 
					RC: "******************************************************************$N"
					    "State Diagnostic$N"
					    "******************************************************************$N"
					    "Shows which STATE the program is in. Turns STATE numbers into human readable form. Useful for observing while in Run Mode";
					N: NOP();
					N: EQU(STATE,0)OTE(STATE_Faulted);
					N: EQU(STATE,1)OTE(STATE_Awaiting);
					N: EQU(STATE,2)OTE(STATE_Pre_Sample);
					N: EQU(STATE,3)OTE(STATE_Post_Sample);
					N: EQU(STATE,4)OTE(STATE_Initial_Pre_Sample);
					N: EQU(STATE,5)OTE(STATE_Initial_Post_Sample);
					N: EQU(STATE,6)OTE(STATE_Fast_Pre_Sample);
					N: EQU(STATE,7)OTE(STATE_Fast_Post_Sample);
					N: EQU(STATE,8)OTE(STATE_Analyser_Calibrating);
					N: EQU(STATE,9)OTE(STATE_Bag_Sampling);
					N: EQU(STATE,10)OTE(STATE_ADT_Maintenance);
					N: EQU(STATE,11)OTE(STATE_SMARTGAS_connect_Manual);
			END_ROUTINE

			ROUTINE Switch_Tube 
					RC: "******************************************************************$N"
					    "Switch Tube$N"
					    "******************************************************************$N"
					    "Makes the sample tube solenoids open and close. The UDT I/O Tags are filled in. See Z_Output_Map for where these Tags are used to set output registers. One of these numbered Sample_Solenoids (Sample_Solenoid_N) must always be open so as not to overwork the purge pump ";
					N: NOP();
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,1)OTE(Sample_Solenoid_1);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,2)OTE(Sample_Solenoid_2);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,3)OTE(Sample_Solenoid_3);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,4)OTE(Sample_Solenoid_4);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,5)OTE(Sample_Solenoid_5);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,6)OTE(Sample_Solenoid_6);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,7)OTE(Sample_Solenoid_7);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,8)OTE(Sample_Solenoid_8);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,9)OTE(Sample_Solenoid_9);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,10)OTE(Sample_Solenoid_10);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,11)OTE(Sample_Solenoid_11);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,12)OTE(Sample_Solenoid_12);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,13)OTE(Sample_Solenoid_13);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,14)OTE(Sample_Solenoid_14);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,15)OTE(Sample_Solenoid_15);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,16)OTE(Sample_Solenoid_16);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,17)OTE(Sample_Solenoid_17);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,18)OTE(Sample_Solenoid_18);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,19)OTE(Sample_Solenoid_19);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,20)OTE(Sample_Solenoid_20);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,21)OTE(Sample_Solenoid_21);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,22)OTE(Sample_Solenoid_22);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,23)OTE(Sample_Solenoid_23);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,24)OTE(Sample_Solenoid_24);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,25)OTE(Sample_Solenoid_25);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,26)OTE(Sample_Solenoid_26);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,27)OTE(Sample_Solenoid_27);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,28)OTE(Sample_Solenoid_28);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,29)OTE(Sample_Solenoid_29);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,30)OTE(Sample_Solenoid_30);
					N: EQU(SMRTGS_W_Switched_To_Tube_Num,31)OTE(Sample_Solenoid_31);
					N: [EQU(SMRTGS_W_Switched_To_Tube_Num,32) ,XIC(Local_Logic[10]) ]OTE(Sample_Solenoid_32);
			END_ROUTINE

			ROUTINE Take_Official_Sample 
					RC: "******************************************************************$N"
					    "Take Official Sample$N"
					    "******************************************************************$N"
					    "Not called frequently but rather at the correct or $'official$' time to take a sample. In the first rung all the $'Analyser$' gas values are put into Raw_Sample. Then the result of scaling is put into Scaled_Sample. Then this Scaled_Sample is put into buffers that SMARTGAS-connect and Citect can use. Alter the scaling input and output values as required (using LinearScalingIn rather than CPT if desired). This is the only place that scaling should need to be done. Note that SMARTGAS-connect and other external SCADA (such as Citect) expect to see already scaled values";
					N: NOP();
					N: MOV(A1_CARBON_DIOXIDE,Raw_Sample.Carbon_Dioxide)MOV(A2_CARBON_MONOXIDE,Raw_Sample.Carbon_Monoxide)MOV(O2_Calibrated_Reading,Raw_Sample.Oxygen)MOV(A1_METHANE,Raw_Sample.Methane)MOV(A1_ETHANE_RAW,Raw_Sample.Ethane)MOV(A1_PROPANE_RAW,Raw_Sample.Propane)MOV(A1_Iso_BUTANE_RAW,Raw_Sample.Iso_Butane)MOV(A1_n_BUTANE_RAW,Raw_Sample.n_Butane)MOV(A1_C5PLUS_RAW,Raw_Sample.C5Plus);
					RC: "No scaling required$N"
					    "=================================================";
					N: CPT(Scaled_Sample.Carbon_Dioxide,Raw_Sample.Carbon_Dioxide);
					RC: "No scaling required$N"
					    "=================================================";
					N: CPT(Scaled_Sample.Carbon_Monoxide,Raw_Sample.Carbon_Monoxide);
					RC: "No scaling required$N"
					    "=================================================";
					N: CPT(Scaled_Sample.Oxygen,Raw_Sample.Oxygen);
					RC: "No scaling required$N"
					    "=================================================";
					N: CPT(Scaled_Sample.Methane,Raw_Sample.Methane);
					RC: "No scaling required$N"
					    "====================================================";
					N: CPT(Scaled_Sample.Ethane,Raw_Sample.Ethane);
					RC: "No scaling required$N"
					    "====================================================";
					N: CPT(Scaled_Sample.Propane,Raw_Sample.Propane);
					RC: "No scaling required$N"
					    "====================================================";
					N: CPT(Scaled_Sample.Iso_Butane,Raw_Sample.Iso_Butane);
					RC: "No scaling required$N"
					    "====================================================";
					N: CPT(Scaled_Sample.n_Butane,Raw_Sample.n_Butane);
					RC: "No scaling required$N"
					    "====================================================";
					N: CPT(Scaled_Sample.C5Plus,Raw_Sample.C5Plus);
					N: MOV(Scaled_Sample.Carbon_Dioxide,SCADA_R_Smartgas_Sample.Carbon_Dioxide)XIO(Manual_Mode)MOV(Scaled_Sample.Carbon_Dioxide,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Carbon_Dioxide);
					N: MOV(Scaled_Sample.Carbon_Monoxide,SCADA_R_Smartgas_Sample.Carbon_Monoxide)XIO(Manual_Mode)MOV(Scaled_Sample.Carbon_Monoxide,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Carbon_Monoxide);
					N: MOV(Scaled_Sample.Oxygen,SCADA_R_Smartgas_Sample.Oxygen)XIO(Manual_Mode)MOV(Scaled_Sample.Oxygen,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Oxygen);
					N: MOV(Scaled_Sample.Methane,SCADA_R_Smartgas_Sample.Methane)XIO(Manual_Mode)MOV(Scaled_Sample.Methane,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Methane);
					N: XIO(Manual_Mode)MOV(Scaled_Sample.Ethane,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Ethane);
					N: XIO(Manual_Mode)MOV(Scaled_Sample.Propane,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Propane);
					N: XIO(Manual_Mode)MOV(Scaled_Sample.Iso_Butane,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Iso_Butane);
					N: XIO(Manual_Mode)MOV(Scaled_Sample.n_Butane,SCADA_R_Readings[SCADA_R_Official_Tube_Num].n_Butane);
					N: XIO(Manual_Mode)MOV(Scaled_Sample.C5Plus,SCADA_R_Readings[SCADA_R_Official_Tube_Num].C5Plus);
					N: XIO(Manual_Mode)MOV(Program_Seconds_Counter.ACC,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Seconds_Timestamp)MOV(0,SCADA_R_Readings[SCADA_R_Official_Tube_Num].Stale);
			END_ROUTINE

			ROUTINE Update_Sequence_Time 
					RC: "******************************************************************$N"
					    "Update_Sequence_Time$N"
					    "******************************************************************$N"
					    "When an updated Sequence is written by SMARTGAS-connect the Timestamp is updated here. Copies of the Sequence exist on many SMARTGAS-connect Servers and the PLC. Each of these nodes has its own Timestamp so it can be known when one has become out of date.";
					N: NOP();
					N: MOV(0,SCADA_R_Seq_Updated_Time.Completely_Written)MOV(PLC_TIME.Year,SCADA_R_Seq_Updated_Time.Year)MOV(PLC_TIME.Month,SCADA_R_Seq_Updated_Time.Month)MOV(PLC_TIME.Day,SCADA_R_Seq_Updated_Time.Day)MOV(PLC_TIME.Hour,SCADA_R_Seq_Updated_Time.Hour)MOV(PLC_TIME.Minute,SCADA_R_Seq_Updated_Time.Minute)MOV(PLC_TIME.Second,SCADA_R_Seq_Updated_Time.Second)MOV(PLC_TIME.uSec,SCADA_R_Seq_Updated_Time.uSec)MOV(1,SCADA_R_Seq_Updated_Time.Completely_Written);
			END_ROUTINE

			ROUTINE Z_Output_Map 
					RC: "******************************************************************$N"
					    "Output Map$N"
					    "******************************************************************$N"
					    "Called last at the end of every scan cycle. It populates the output registers from the device UDT I/O tags";
					N: NOP();
					N: MOV(L1.S2.DO,Local:2:O.Data);
					N: MOV(L1.S3.DO,Local:3:O.Data);
			END_ROUTINE

			ROUTINE _Rail_Monitoring_LW901 
					N: [XIC(APC_ENVR_RAIL_LW901_GREY) ,XIC(APC_ENVR_RAIL_LW901_BLUE) ,XIC(APC_ENVR_RAIL_LW901_YELLOW) ,XIC(APC_ENVR_RAIL_LW901_RED) ,XIC(APC_ENVR_RAIL_LW901_STRESS) ,XIC(APC_ENVR_RAIL_LW901_DISPLACEMENT) ,XIC(APC_ENVR_RAIL_LW901_STEP_DISPLACEMENT) ,XIC(APC_ENVR_RAIL_LW901_CREST_EXTENSOMETER) ,XIC(APC_ENVR_RAIL_LW901_FIXED_INCLINOMETER) ,XIC(APC_ENVR_RAIL_LW901_PIEZOMETER) ]OTE(APC_ENVR_RAIL_LW901_ALARM);
					N: XIC(L1.S4.DI.1)OTE(APC_ENVR_RAIL_LW901_GREY);
					N: XIC(L1.S4.DI.2)OTE(APC_ENVR_RAIL_LW901_BLUE);
					N: XIC(L1.S4.DI.3)OTE(APC_ENVR_RAIL_LW901_YELLOW);
					N: XIC(L1.S4.DI.4)OTE(APC_ENVR_RAIL_LW901_RED);
					N: XIC(L1.S4.DI.5)OTE(APC_ENVR_RAIL_LW901_STRESS);
					N: XIC(L1.S4.DI.6)OTE(APC_ENVR_RAIL_LW901_DISPLACEMENT);
					N: XIC(L1.S4.DI.7)OTE(APC_ENVR_RAIL_LW901_STEP_DISPLACEMENT);
					N: XIC(L1.S4.DI.8)OTE(APC_ENVR_RAIL_LW901_CREST_EXTENSOMETER);
					N: XIC(L1.S4.DI.9)OTE(APC_ENVR_RAIL_LW901_FIXED_INCLINOMETER);
					N: XIC(L1.S4.DI.10)OTE(APC_ENVR_RAIL_LW901_PIEZOMETER);
			END_ROUTINE

	END_PROGRAM

	PROGRAM ModbusMasterTCP (Description := "Provides a client connection to one MB/TCP Device.",
	                         MAIN := "MainRoutine",
	                         MODE := 0,
	                         DisableFlag := 0)
			TAG
				Additional_len : INT (Description := "Used during receiving of incoming packets.",
				            RADIX := Decimal) := 6;
				Additional_len_read : INT (RADIX := Decimal) := 12;
				buff_bit_index : DINT (Description := "Used when parsing int into bools.",
				            RADIX := Decimal) := 0;
				buff_byte_index : DINT (Description := "Used when parsing int into bools.",
				            RADIX := Decimal) := 3;
				CIdx : DINT (Description := "CIdx used in FOR Instructions to indicate connection number.",
				            RADIX := Decimal) := 3;
				CMD_IN : DINT (RADIX := Decimal) := 0;
				CMD_LEN : DINT (RADIX := Decimal) := 32;
				CMD_LEN1 : INT (RADIX := Decimal) := 8;
				coil_wr_index : DINT (RADIX := Decimal) := 9;
				ConnectionIDX : DINT (Description := "Index of the connection to perform operations on.",
				            RADIX := Decimal) := 1;
				Data_Received : BOOL (RADIX := Decimal) := 0;
				IDCounter : INT (Description := "Transaction ID Counter",
				            RADIX := Decimal) := 15758;
				Index : DINT (RADIX := Decimal) := 5;
				INT_DATA_IN : INT (RADIX := Decimal) := -29123;
				INT_IN : INT (RADIX := Decimal) := 5;
				INT_STR_OUT : STRING  := [2,'=$8E$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
						];
				LocalOffset : INT (Description := "Used during receive to store offset when a match transaction ID is found.",
				            RADIX := Decimal) := 2;
				Main_Read_Buffer : STR_4096[5]  := [[0,'=$8D$00$00$00$06$00$05$00$00$00$00$8E(y<$B0$E0$F0=K$1E$CB<$06$15::$EF$F1J<$8F$EC$18>$96$FDgB$C4$AE$C8?}$D9$16Bo$A4oB$85$00$00$00$00$DE$DB?$0B$FA$B3@$9D$00$00$00$00$E8$04=$9D$18$96?$CC$C8$048$04B$11$D7$02+$03$t$00$DE$00$DE$0F$FF$00$00$00$00$00$00$00$00$00$00$03$E7$04D$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$FD$1A$l$10$E1$04W$00$C8$048$04B$11$D7$02+$03$t$00$DE$00$DE$0F$FF$00$00$00$00$00$00$00$00$00$00$03$E7$04D$00$00$00$00$00$00$00$00$00$00 $AA$00$00$005$01$032$02$FD$1A$l$10$E1$04W$00$C8$048$04B$11$D7$02+$03$t$00$DE$00$DE$0F$FF$00$00$00$00$00$00$00$00$00$00$03$E7$04D$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$1Ea$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$1Ea$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00{r$05$11\$15$B3$1A$l$1Ea"$B8$'$0F$03$F2$81$$$00$00$00$17$00$03$14$04W$08$AE$r$05$11\$15$B3$1A$l$1Ea"$B8$'$0F$03$F2$81$$$00$00$00$17$00$03$14$04W$08$AE$r$05$11\$15$B3$1A$l$1Ea"$B8$'$0F$03$F2$81$$$00$00$00$17$00$03$14$04W$08$AE$r$05$11\$15$B3$1A$l$1Ea"$B8$'$0F$03$F2$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D8$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$D9$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DA$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DA$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DC$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DD$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DD$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DE$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DF$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$DF$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E0$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17$AB$E1$00$00$00+$00$03($00$DE$11\$15$B3$1A$l$04$10$04$1A$04$$$04.$048$00y$00$00$00$01$00$01$04W$00$00$00$00$00$00$00$00$00$00$00$17'
						],[0,'=$8E$00$00$00$06$00$05$00$00$00$00$00$E9$FFE$83$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00U$A4?$80$06%Bp$CEOB$C1$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00,k$00$00$00$06$00$05$00$00$00$00,k$00$00$00$06$00$05$00$00$00$00,i$00$00$00;$00$048s$E4@$8D$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00u$CE<v$00$00$00$00$00$00$00$00dK?$80$F9*Bo$07$D8B$AF$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00,i$00$00$00;$00$048s$E4@$8D$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00u$CE<v$00$00$00$00$00$00$00$00dK?$80$F9*Bo$07$D8B$AF$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00C$00$04@!V;i$A7$E8;$AD$F1R;>$00$00$00$00$00$00$00$00$D1r;$AE$00$00$00$00$F7>B$C7O$D3?$82$F3$B6BoRMB$A8$00$00$00$00P$D1<$86$92p<$88$00$00.$7F$00$00$BF$80S&$00$00$00$03$00$85$02S+$00$00$00$03$00$81$02S?$00$00$00$03$00$81$02S@$00$00$00$03$00$82$02SA$00$00$00$03$00$83$02SB$00$00$00C$00$04@$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$D2$F8=^$00$00$00$00$E4&B$C77$BE?$82$F5$C3BoPFB$A8$00$00$00$00~$F1=$AF`$08=$B2$00$00.$81$00$00$BF$80SC$00$00$00$03$00$85$02SH$00$00$00$03$00$81$02SI$00$00$00$03$00$82$02SJ$00$00$00$03$00$83$02SK$00$00$00C$00$04@$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$D2$F8=^$00$00$00$00$E4&B$C77$BE?$82$F5$C3BoPFB$A8$00$00$00$00~$F1=$AF`$08=$B2$00$00.$81$00$00$BF$80S\$00$00$00$03$00$81$02S]$00$00$00$03$00$82$02S^$00$00$00$03$00$83$02S_$00$00$00C$00$04@{$12=B5$F0<=$00$00$00$00$BD$C1<M$BB$l;;$16$CD=$06$00$00$00$00$C9$1FB$C7$052?$82$D4$FEBoN$E3B$A8$00$00$00$003$E9=$C9$8A$A5=$CC$00$00.$84$00$00$BF$80Sf$00$00$00$03$00$82$02Sg$00$00$00$03$00$83$02Sh$00$00$00C$00$04@{$12=B5$F0<=$00$00$00$00$BD$C1<M$BB$l;;$16$CD=$06$00$00$00$00$C9$1FB$C7$052?$82$D4$FEBoN$E3B$A8$00$00$00$003$E9=$C9$8A$A5=$CC$00$00.$84$00$00$BF$80S`$00$00$00$03$00$85$02Se$00$00$00$03$00$81$02Sy$00$00$00$03$00$81$02Sz$00$00$00$03$00$82$02S{$00$00$00$03$00$83$02S|$00$00$00C$00$04@$B8$CE<I$FC$A1:$D1$00$00$00$00$00$00$00$00$00$00$00$00$E0f=$1B$00$00$00$00$E5dB$C7$1F$1D?$82$FD$F3BoOoB$A8$00$00$00$00$13$F7=$87P$C0=$89$00$00.$86$00$00$BF$80S$83$00$00$00$03$00$82$02S$84$00$00$00$03$00$83$02S$85$00$00$00C$00$04@$B8$CE<I$FC$A1:$D1$00$00$00$00$00$00$00$00$00$00$00$00$E0f=$1B$00$00$00$00$E5dB$C7$1F$1D?$82$FD$F3BoOoB$A8$00$00$00$00$13$F7=$87P$C0=$89$00$00.$86$00$00$BF$80S}$00$00$00$03$00$85$02S$82$00$00$00$03$00$81$02S$96$00$00$00$03$00$81$02S$97$00$00$00$03$00$82$02S$98$00$00$00$03$00$83$02S$99$00$00$00C$00$04@$EF$E8<$00$00$00$00$00$00$00$00$00$00$00$00$00c$9E<$01jG<$EE$00$00$00$00$E9$07B$C7+$95?$82$12nBpN$1FB$A8$00$00$00$00"$87=r&$7F=v$00$00.$89$00$00$BF$80S$A0$00$00$00$03$00$82$02S$A1$00$00$00$03$00$83$02S$A2$00$00$00C$00$04@$EF$E8<$00$00$00$00$00$00$00$00$00$00$00$00$00c$9E<$01jG<$EE$00$00$00$00$E9$07B$C7+$95?$82$12nBpN$1FB$A8$00$00$00$00"$87=r&$7F=v$00$00.$89$00$00$BF$80S$9A$00$00$00$03$00$85$02S$9F$00$00$00$03$00$81$02S$B3$00$00$00$03$00$81$02S$B4$00$00$00$03$00$82$02S$B5$00$00$00$03$00$83$02S$B6$00$00$00C$00$04@$90$11<$BAE$D2<o$00$00$00$00$00$00$00$00$E7":$8D$D2`<m$00$00$00$00$E4$E0B$C7$'$FC?$82$pJBpN%B$A8$00$00$00$00$1A$FC=2$17f=5$00$00.$8B$00$00$BF$80S$B7$00$00$00$03$00$85$02S$BC$00$00$00$03$00$81$02S$BD$00$00$00$03$00$82$02S$BE$00$00$00$03$00$83$02S$BF$00$00$00C$00$04@$90$11<$BAE$D2<o$00$00$00$00$00$00$00$00$E7":$8D$D2`<m$00$00$00$00$E4$E0B$C7$'$FC?$82$pJBpN%B$A8$00$00$00$00$1A$FC=2$17f=5$00$00.$8B$00$00$BF$80I$F5$00$00$00$03$00$81$02I$F6$00$00$00$03$00$82$02I$F7$00$00$00$03$00$83$02I$F8$00$00$00C$00$04@$00$00$00$00$F4$EF=P$EFX=$8A$96$CE=$96$00$00$00$00$00$00$00$00X$C8>$'I$D3B$C7$08Q?$82$00$00Bp,$ADB$A8$00$00$00$00$9A$D5>I$C7q>L$00$00$85$1F$00$00$BF$80I$FF$00$00$00$03$00$82$02J$00$00$00$00$03$00$83$02J$01$00$00$00C$00$04@$00$00$00$00$F4$EF=P$EFX=$8A$96$CE=$96$00$00$00$00$00$00$00$00X$C8>$'I$D3B$C7$08Q?$82$00$00Bp,$ADB$A8$00$00$00$00$9A$D5>I$C7q>L$00$00$85$1F$00$00$BF$80I$F9$00$00$00$03$00$85$02I$FE$00$00$00$03$00$81$02J$12$00$00$00$03$00$81$02J$13$00$00$00$03$00$82$02J$14$00$00$00$03$00$83$02J$15$00$00$00C$00$04@$00$00$00$00Z$A7=$1B$05$8A=p4$A3=$85$00$00$00$00$00$00$00$00$A3g>#[uB$C7$D8$8B?$81$14{Bp)$E4B$A8$00$00$00$00$C4$95>+|$DD>.$00$00$85!$00$00$BF$80J$1C$00$00$00$03$00$82$02J$1D$00$00$00$03$00$83$02J$1E$00$00$00C$00$04@$00$00$00$00Z$A7=$1B$05$8A=p4$A3=$85$00$00$00$00$00$00$00$00$A3g>#[uB$C7$D8$8B?$81$14{Bp)$E4B$A8$00$00$00$00$C4$95>+|$DD>.$00$00$85!$00$00$BF$80J$16$00$00$00$03$00$85$02J$1B$00$00$00$03$00$81$02J/$00$00$00$03$00$81$02J0$00$00$00$03$00$82$02J1$00$00$00$03$00$83$02J2$00$00$00C$00$04@!b<s($95=$99$06$B4=5$12$DD=$AE$00$00$00$00$00$00$00$00}$D2>$'<8B$C7$DE1?$81$06%Bp+mB$A8$00$00$00$00$A7$03>W$r$D7>[$00$00$85$$$00$00$BF$80J9$00$00$00$03$00$82$02J:$00$00$00$03$00$83$02J;$00$00$00C$00$04@!b<s($95=$99$06$B4=5$12$DD=$AE$00$00$00$00$00$00$00$00}$D2>$'<8B$C7$DE1?$81$06%Bp+mB$A8$00$00$00$00$A7$03>W$r$D7>[$00$00$85$$$00$00$BF$80J3$00$00$00$03$00$85$02J8$00$00$00$03$00$81$02JL$00$00$00$03$00$81$02JM$00$00$00$03$00$82$02JN$00$00$00$03$00$83$02JO$00$00$00C$00$04@$00$00$00$00$FB$EC=x$1D$89=S|$B5=$84$00$00$00$00$00$00$00$00&t>0MJB$C7$FC$EE?$81$F9$DBBo+$92B$A8$00$00$00$00t$D8>4OV>7$00$00$85&$00$00$BF$80JV$00$00$00$03$00$82$02JW$00$00$00$03$00$83$02JX$00$00$00C$00$04@$00$00$00$00$FB$EC=x$1D$89=S|$B5=$84$00$00$00$00$00$00$00$00&t>0MJB$C7$FC$EE?$81$F9$DBBo+$92B$A8$00$00$00$00t$D8>4OV>7$00$00$85&$00$00$BF$80JP$00$00$00$03$00$85$02JU$00$00$00$03$00$81$02Ji$00$00$00$03$00$81$02Jj$00$00$00$03$00$82$02Jk$00$00$00$03$00$83$02Jl$00$00$00C$00$04@$00$00$00$00$F4o=Zt.=?S$D8=$9F$00$00$00$00$00$00$00$00$E6$A4>$1CVkB$C7$E4$DC?$81"$D2Bp+$11B$A8$00$00$00$00$89$DA>;$81$00>>$00$00$85)$00$00$BF$80Js$00$00$00$03$00$82$02Jt$00$00$00$03$00$83$02Ju$00$00$00C$00$04@$00$00$00$00$F4o=Zt.=?S$D8=$9F$00$00$00$00$00$00$00$00$E6$A4>$1CVkB$C7$E4$DC?$81"$D2Bp+$11B$A8$00$00$00$00$89$DA>;$81$00>>$00$00$85)$00$00$BF$80Jm$00$00$00$03$00$85$02Jr$00$00$00$03$00$81$02J$86$00$00$00$03$00$81$02J$87$00$00$00$03$00$82$02J$88$00$00$00$03$00$83$02J$89$00$00$00C$00$04@$00$00$00$00+$E2=$1E>$$=o$E87=$9F$00$00$00$00$00$00$00$00$t$8B>(RTB$C7$B9$A6?$81$16$86Bp*XB$A8$00$00$00$00($86>=#=>@$00$00$85+$00$00$BF$80J$90$00$00$00$03$00$82$02J$91$00$00$00$03$00$83$02J$92$00$00$00C$00$04@$00$00$00$00+$E2=$1E>$$=o$E87=$9F$00$00$00$00$00$00$00$00$t$8B>(RTB$C7$B9$A6?$81$16$86Bp*XB$A8$00$00$00$00($86>=#=>@$00$00$85+$00$00$BF$80J$8A$00$00$00$03$00$85$02J$8F$00$00$00$03$00$81$02J$A3$00$00$00$03$00$81$02J$A4$00$00$00$03$00$82$02J$A5$00$00$00$03$00$83$02J$A6$00$00$00C$00$04@g$85<AXc=$956$A0=$1A1]=$BB$00$00$00$00$00$00$00$00c$E8>$1BD$DAB$C7$B2$FB?$815@Bp)$ABB$A8$00$00$00$00$D8$A1>V<$E6>Z$00$00$85.$00$00$BF$80J$AD$00$00$00$03$00$82$02J$AE$00$00$00$03$00$83$02J$AF$00$00$00C$00$04@g$85<AXc=$956$A0=$1A1]=$BB$00$00$00$00$00$00$00$00c$E8>$1BD$DAB$C7$B2$FB?$815@Bp)$ABB$A8$00$00$00$00$D8$A1>V<$E6>Z$00$00$85.$00$00$BF$80J$A7$00$00$00$03$00$85$02J$AC$00$00$00$03$00$81$02J$C0$00$00$00$03$00$81$02J$C1$00$00$00$03$00$82$02J$C2$00$00$00$03$00$83$02J$C3$00$00$00C$00$04@$00$00$00$00$0B$DE=$84$F1o=$18f$F7=$9E$00$00$00$00$00$00$00$00$B3@> S$EBB$C7$F6$FA?$81$00$00Bp(uB$A8$00$00$00$00E3>93$E0><$00$00$851$00$00$BF$80J$CA$00$00$00$03$00$82$02J$CB$00$00$00$03$00$83$02J$CC$00$00$00C$00$04@$00$00$00$00$0B$DE=$84$F1o=$18f$F7=$9E$00$00$00$00$00$00$00$00$B3@> S$EBB$C7$F6$FA?$81$00$00Bp(uB$A8$00$00$00$00E3>93$E0><$00$00$851$00$00$BF$80J$C4$00$00$00$03$00$85$02J$C9$00$00$00$03$00$81$02J$DD$00$00$00$03$00$81$02J$DE$00$00$00$03$00$82$02J$DF$00$00$00$03$00$83$02J$E0$00$00$00C$00$04@_$9C<$19$07$BD=$93$88$F6=O$CA$A7=$95$00$00$00$00$00$00$00$00^$03>$1CH$E0B$C7$E3O?$81$F9$DABo($9FB$A8$00$00$00$00N$FF>J$83j>M$00$00$853$00$00$BF$80J$E7$00$00$00$03$00$82$02J$E8$00$00$00$03$00$83$02J$E9$00$00$00C$00$04@_$9C<$19$07$BD=$93$88$F6=O$CA$A7=$95$00$00$00$00$00$00$00$00^$03>$1CH$E0B$C7$E3O?$81$F9$DABo($9FB$A8$00$00$00$00N$FF>J$83j>M$00$00$853$00$00$BF$80J$E1$00$00$00$03$00$85$02J$E6$00$00$00$03$00$81$02J$FA$00$00$00$03$00$81$02J$FB$00$00$00$03$00$82$02J$FC$00$00$00$03$00$83$02J$FD$00$00$00C$00$04@$00$00$00$002A=$99$16$88=$11$C3G=$E3$00$00$00$00$00$00$00$000$86>$1E?$88B$C7$EAb?$81$F7$CEBo*$07B$A8$00$00$00$00$17$B5>k$C5$97>n$00$00$855$00$00$BF$80K$04$00$00$00$03$00$82$02K$05$00$00$00$03$00$83$02K$06$00$00$00C$00$04@$00$00$00$00$B4$BD=RI$BA=ElL=$A5$00$00$00$00$00$00$00$00\->$1DT$F7B$C7$E3$82?$81$FD$F3Bo*$02B$A8$00$00$00$00r$DB>?x$CD>B$00$00$856$00$00$BF$80J$FE$00$00$00$03$00$85$02K$03$00$00$00$03$00$81$02K$17$00$00$00$03$00$81$02K$18$00$00$00$03$00$82$02K$19$00$00$00$03$00$83$02K$1A$00$00$00C$00$04@$00$00$00$00d$A8=$81E$08=B$9F$A1=$90$00$00$00$00$00$00$00$00KQ>$1CU$11B$C7$D8/?$81$02$0BBp*?B$A8$00$00$00$00$C2$B7>9$B4X><$00$00$858$00$00$BF$80K!$00$00$00$03$00$82$02K"$00$00$00$03$00$83$02K#$00$00$00C$00$04@$00$00$00$00d$A8=$81E$08=B$9F$A1=$90$00$00$00$00$00$00$00$00KQ>$1CU$11B$C7$D8/?$81$02$0BBp*?B$A8$00$00$00$00$C2$B7>9$B4X><$00$00$858$00$00$BF$80K$1B$00$00$00$03$00$85$02K $00$00$00$03$00$81$02K4$00$00$00$03$00$81$02K5$00$00$00$03$00$82$02K6$00$00$00$03$00$83$02K7$00$00$00C$00$04@$00$00$00$00Q$03<$EF2f=$801)=t$00$00$00$00$00$00$00$00$EA$05>$'^$83B$C7$D5k?$81$FD$F3Bo*xB$A8$00$00$00$00~o>"$11$82>%$00$00$85:$00$00$BF$80K>$00$00$00$03$00$82$02K?$00$00$00$03$00$83$02K@$00$00$00C$00$04@$00$00$00$00Q$03<$EF2f=$801)=t$00$00$00$00$00$00$00$00$EA$05>$'^$83B$C7$D5k?$81$FD$F3Bo*xB$A8$00$00$00$00~o>"$11$82>%$00$00$85:$00$00$BF$80K8$00$00$00$03$00$85$02K=$00$00$00$03$00$81$02KQ$00$00$00$03$00$81$02KR$00$00$00$03$00$82$02KS$00$00$00$03$00$83$02KT$00$00$00C$00$04@$00$00$00$00{$92=}]$18=8p$19=$A4$00$00$00$00$00$00$00$00$C5 >$1BRFB$C7$00$E5?$82$FD$F3Bo*:B$A8$00$00$00$00$11G>C&w>F$00$00$85=$00$00$BF$80K[$00$00$00$03$00$82$02K\$00$00$00$03$00$83$02K]$00$00$00C$00$04@$00$00$00$00{$92=}]$18=8p$19=$A4$00$00$00$00$00$00$00$00$C5 >$1BRFB$C7$00$E5?$82$FD$F3Bo*:B$A8$00$00$00$00$11G>C&w>F$00$00$85=$00$00'
						ta$00$00$00$1B$00$03$18$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$DDf$00$00$00$1B$00$03$18$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$DDl$00$00$00$1B$00$03$18$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$DDq$00$00$00$1B$00$03$18$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$DDw$00$00$00$1B$00$03$18$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$DD|
						],[0,'A9$00$00$00$06$00$10$00$11$00$02$00$00$03$01$85$02$CB$00$00,$A8$00$00$00$06$01$05$00$CB$00$00$00$00$06$01$05$00$CB$00$0009$00$00$01M$15$B2$03$t"$B8$1Ea$00$00$00$00$00$01M$15$B2$03$t"$B8$1Ea$00$00$00$00$00$01M$15$B2$03$t"$B8$1Ea
						
						]];
				MB1 : MBUS_REAL  := [1,0,0,0.00000000e+000,0];
				MB_Resp_Data : STR_462 (COMMENT.DATA[0] := "Clear the first byte before beginning the for statement.") := [6,'$00$1E$00$1E$00<$00$00$00$00$00$00$00$00$00$02$18$03$01$00$00$00$00$00$00$00$00$08$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$02+$00Y$00X$00W$03$E7$04W$00$00$00$00$00c$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00{$01$C8$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00:$03$14$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00F$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$p$00$04$00$05$00$06$00$07$00$08$00$t$00$l$00$0B$00$p$00$r$00[$00\$01M$00$00$00$00$00$00$00$00$00b$1Ew$00$00$00$00$00$00$00$00$16.$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00v$00w
						];
				MB_TMP_INT : INT (RADIX := Decimal) := -25280;
				Modbus_Bytes : DINT (RADIX := Decimal) := 5;
				Modbus_CMD_Len : INT (Description := "Used to store the modbus operation Length when parsing incoming packets.",
				            RADIX := Decimal) := 28;
				Modbus_Cmd_Len1 : DINT (RADIX := Decimal) := 28;
				Modbus_Cmd_String : STR_462 (Description := "Used during parsing of incoming packets.") := [5,'$05$00$00$00$00$8E(y<$B0$E0$F0=K$1E$CB<$06$15::$EF$F1J<$8F$EC$18>$96$FDgB$C4$AE$C8?}$D9$16Bo$A4ow
						];
				Modbus_ID : STRING (Description := "Used to store the modbus protocol id when parsing incoming packets.") := [2,'=$8E$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
						];
				Modbus_Packet : STR_462 (Description := "Stores the modbus packet during parse operation.") := [12,'=$8E$00$00$00$06$00$05$00$00$00$00$8E(y<$B0$E0$F0=K$1E$CB<$06$15::$EF$F1J<$8F$EC$18>$96$FDgB$C4$AE$C8?}$D9$16Bo$A4ow
						];
				Modbus_TransID : INT (Description := "Used to store the modbus transaction id when parsing incoming packets.",
				            RADIX := Decimal) := 15758;
				Modbus_Unit : STRING (Description := "Used to store the modbus unit id when parsing incoming packets.") := [1,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
						];
				NoReplyCounter : COUNTER[4] (Description := "Used to count consecutive transaction that did not recieve a reply.") := [[0,10,0],[0,10,0],[-2147483648,10,0],[-2147483648,10,0]];
				NumberOfConnections : DINT (Description := "Number of MBTCP Connections configured in the application.",
				            RADIX := Decimal) := 2;
				NumberOfConnections1 : DINT (Description := "Used in FOR instructions, typically one less than NumberOfConnections.",
				            RADIX := Decimal) := 1;
				ONS : BOOL[64] (Description := "One shots used in connecting and read/writes.",
				            RADIX := Decimal) := [2#0,2#1,2#0,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#1
						,2#1,2#1,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0];
				ONSPOLL : BOOL[32] (Description := "One shots used in polling transactions.",
				            RADIX := Decimal) := [2#1,2#1,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				ONS_ConErrs : BOOL[64] (RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#1,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0];
				ONS_ERR : BOOL[32] (Description := "One shots used in error handling.",
				            RADIX := Decimal) := [2#0,2#0,2#1,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#1,2#1,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				PollCounter : DINT (Description := "Incremented each poll and use$N for poll intervals on each transaction.",
				            RADIX := Decimal) := 153051997;
				PollTimer : TIMER (Description := "Timer for the Main Polling loop Base rate.$N") := [-1609351682,100,100];
				RecTransID : INT (Description := "Temporary Diagnostic value.",
				            RADIX := Decimal) := 0;
				RecTransID1 : DINT (Description := "Temporary Diagnostic value.",
				            RADIX := Decimal) := 14489;
				RecTransID2 : DINT (Description := "Temporary Diagnostic value.",
				            RADIX := Decimal) := 14490;
				RetryTimers : TIMER[4] (Description := "Used to time out retries on lost connections to remote devices.") := [[748561,10000,0],[749261,10000,0],[2970327,10000,0],[2970327,10000,0]];
				RG_4x_Pos : DINT (RADIX := Decimal) := 29;
				RG_STR_TMP : STRING  := [2,'$00<$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
						];
				RW_Select : DINT (RADIX := Decimal) := 2;
				String_Pos : INT (RADIX := Decimal) := 58;
				Str_Out : STR_1  := [1,'$05'];
				TempASCII : STRING  := [2,'=$8E$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
						];
				TempInt : DINT (RADIX := Decimal) := 5;
				Trans : MBTransaction
						],1,15749,0];
				TransactionPtr : DINT (RADIX := Decimal) := 5;
				TransFound : BOOL (RADIX := Decimal) := 1;
				TransIDX : DINT (Description := "Index ptr for the transactions array for each connection",
				            RADIX := Decimal) := 5;
				Trans_ONS_00 : BOOL[32] (Description := "One shot used int the transaction trigger/write_now logic",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_ONS_01 : BOOL[32] (Description := "One shot used int the transaction trigger/write_now logic",
				            RADIX := Decimal) := [2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_ONS_02 : BOOL[32] (Description := "One shot used int the transaction trigger/write_now logic",
				            RADIX := Decimal) := [2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_ONS_03 : BOOL[32] (Description := "One shot used int the transaction trigger/write_now logic",
				            RADIX := Decimal) := [2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_Triggers_00 : BOOL[32] (Description := "Connection 0 Transaction Request.  Index = transaction number on connection 0.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_Triggers_01 : BOOL[32] (Description := "Connection 1 Transaction Request.  Index = transaction number on connection 1.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_Triggers_02 : BOOL[32] (Description := "Connection 2 Transaction Request.  Index = transaction number on connection 2.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Trans_Triggers_03 : BOOL[32] (Description := "Connection 3 Transaction Request.  Index = transaction number on connection 3.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				TrIDX : DINT (RADIX := Decimal) := 5;
				Valid : BOOL[32] (COMMENT[1] := "Used during processing of incoming requests.$NTransaction Type 1",
				            COMMENT[2] := "Used during processing of incoming requests.$NTransaction Type 2",
				            COMMENT[3] := "Used during processing of incoming requests.$NTransaction Type 3",
				            COMMENT[4] := "Used during processing of incoming requests.$NTransaction Type 4",
				            COMMENT[5] := "Used during processing of incoming requests.$NTransaction Type 5",
				            COMMENT[15] := "Used during processing of incoming requests.$NTransaction Type 15",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Valid_CMD : BOOL[32] (COMMENT[1] := "Used when building reply packets. Transaction Type 1",
				            COMMENT[2] := "Used when building reply packets. Transaction Type 2",
				            COMMENT[3] := "Used when building reply packets. Transaction Type 3",
				            COMMENT[4] := "Used when building reply packets. Transaction Type 4",
				            RADIX := Decimal) := [2#0,2#0,2#1,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Valid_Command : BOOL (RADIX := Decimal) := 0;
				Valid_Len : BOOL (RADIX := Decimal) := 1;
				Valid_Len1 : BOOL (RADIX := Decimal) := 1;
				WORD_SWAP : INT[2] (RADIX := Decimal) := [24983,666];
				WriteTransIDX : DINT (Description := "Transaction index for incoming data$N",
				            RADIX := Decimal) := 4;
				Write_Now_00 : BOOL[32] (Description := "Transmit Request Flag.  Index = Transaction number on connection 0.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Write_Now_01 : BOOL[32] (Description := "Transmit Request Flag.  Index = Transaction number on connection 1.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Write_Now_02 : BOOL[32] (Description := "Transmit Request Flag.  Index = Transaction number on connection 2.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
				Write_Now_03 : BOOL[32] (Description := "Transmit Request Flag.  Index = Transaction number on connection 3.",
				            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
			END_TAG

			ROUTINE CheckTransCode (Description := "Checks for a match transaction code agains the transaction definitions for a connection.$N")
					RC: "Each rung in this routine handles a connection.  A comparison is done of the incoming ID and the ID of the last outgoing request made.  If a match is found, the TransState, LastError and TransComplete are set to 0 in the transaction. Finally the TransFound flag is set to indicate to the calling routing (Sub_Check_Write_Reply) that a match has been found.  Variable RW_Select is the Connection pointer, TransactionPtr is the Transaction pointer,  and both are set before this routine is called. ";
					N: EQU(RW_Select,0)XIC(MBTU_Transactions_00[TransactionPtr].Enabled)CMP(Modbus_TransID=MBTU_Transactions_00[TransactionPtr].TransID)[XIO(CMD_IN.7) MOV(0,MBTU_Transactions_00[TransactionPtr].TransStat) MOV(0,MBTU_Transactions_00[TransactionPtr].TransLastError) ,XIC(CMD_IN.7) MOV(Modbus_Bytes,MBTU_Transactions_00[TransactionPtr].TransLastError) ]MOV(TransactionPtr,WriteTransIDX)MOV(MBTU_Transactions_00[TransactionPtr].LocalOffset,LocalOffset)[OTL(MBTU_Transactions_00[TransactionPtr].TransComplete) ,OTL(TransFound) ];
					N: EQU(RW_Select,1)XIC(MBTU_Transactions_01[TransactionPtr].Enabled)CMP(Modbus_TransID=MBTU_Transactions_01[TransactionPtr].TransID)[XIO(CMD_IN.7) MOV(0,MBTU_Transactions_01[TransactionPtr].TransStat) MOV(0,MBTU_Transactions_01[TransactionPtr].TransLastError) ,XIC(CMD_IN.7) MOV(Modbus_Bytes,MBTU_Transactions_01[TransactionPtr].TransLastError) ]MOV(TransactionPtr,WriteTransIDX)MOV(MBTU_Transactions_01[TransactionPtr].LocalOffset,LocalOffset)[OTL(MBTU_Transactions_01[TransactionPtr].TransComplete) ,OTL(TransFound) ];
					N: EQU(RW_Select,2)XIC(MBTU_Transactions_02[TransactionPtr].Enabled)CMP(Modbus_TransID=MBTU_Transactions_02[TransactionPtr].TransID)[XIO(CMD_IN.7) MOV(0,MBTU_Transactions_02[TransactionPtr].TransStat) MOV(0,MBTU_Transactions_02[TransactionPtr].TransLastError) ,XIC(CMD_IN.7) MOV(Modbus_Bytes,MBTU_Transactions_02[TransactionPtr].TransLastError) ]MOV(TransactionPtr,WriteTransIDX)MOV(MBTU_Transactions_02[TransactionPtr].LocalOffset,LocalOffset)[OTL(MBTU_Transactions_02[TransactionPtr].TransComplete) ,OTL(TransFound) ];
					N: EQU(RW_Select,3)XIC(MBTU_Transactions_03[TransactionPtr].Enabled)CMP(Modbus_TransID=MBTU_Transactions_03[TransactionPtr].TransID)[XIO(CMD_IN.7) MOV(0,MBTU_Transactions_03[TransactionPtr].TransStat) MOV(0,MBTU_Transactions_03[TransactionPtr].TransLastError) ,XIC(CMD_IN.7) MOV(Modbus_Bytes,MBTU_Transactions_03[TransactionPtr].TransLastError) ]MOV(TransactionPtr,WriteTransIDX)MOV(MBTU_Transactions_03[TransactionPtr].LocalOffset,LocalOffset)[OTL(MBTU_Transactions_03[TransactionPtr].TransComplete) ,OTL(TransFound) ];
			END_ROUTINE

			ROUTINE ClearCommBuffersAndTriggers (Description := "Clears all internal values for a fresh start.")
					RC: "This routine initializes variables when Modbus TCP communications is enabled.  It is called from the MainRoutine.  It uses FOR instructions to iterate through the various arrays.   Arrays were used  to give the user flexibility in the number of connections and transactions per connection.  Values cleared include TransTriggers_xx, the MainReadBuffer array, and MBConnected array.   FOR statements call ClearConnected and ClearTransTrigger.";
					N: OTU(MBTU_Connections[0].MBTI_Connected);
					N: OTU(MBTU_Connections[1].MBTI_Connected);
					N: OTU(MBTU_Connections[2].MBTI_Connected);
					N: OTU(MBTU_Connections[3].MBTI_Connected);
					RC: "Clear the TransTriggers for connection 0 and 1.$N"
					    "";
					N: MOV(0,CIdx)FOR(ClearTransTrigger,Index,0,MBTU_Connections[0].MBTI_NumberOfTransactions,1)MOV(1,CIdx)FOR(ClearTransTrigger,Index,0,MBTU_Connections[1].MBTI_NumberOfTransactions,1);
					RC: "Clear the TransTriggers for connection 2 and 3.";
					N: MOV(2,CIdx)FOR(ClearTransTrigger,Index,0,MBTU_Connections[2].MBTI_NumberOfTransactions,1)MOV(3,CIdx)FOR(ClearTransTrigger,Index,0,MBTU_Connections[3].MBTI_NumberOfTransactions,1);
					RC: "Clear all the Main_Read_Buffer elements by setting the string lengths to 0.";
					N: MOV(0,Main_Read_Buffer[0].LEN)MOV(0,Main_Read_Buffer[1].LEN)MOV(0,Main_Read_Buffer[2].LEN)MOV(0,Main_Read_Buffer[3].LEN);
			END_ROUTINE

			ROUTINE ClearTransTrigger 
					RC: "This routine is called from ClearCommBuffersAndTriggers to clear the Trans_Triggers_xx values.   It is called from a FOR instruction to iterate through the transactions since each connection can contain a variable number of transactions.$N"
					    "Each line handles one connection.$N"
					    "";
					N: EQU(CIdx,0)OTU(MBTU_Transactions_00[Index].ReqBuilt)OTU(Trans_Triggers_00[Index]);
					N: EQU(CIdx,1)OTU(MBTU_Transactions_01[Index].ReqBuilt)OTU(Trans_Triggers_01[Index]);
					N: EQU(CIdx,2)OTU(MBTU_Transactions_02[Index].ReqBuilt)OTU(Trans_Triggers_02[Index]);
					N: EQU(CIdx,3)OTU(MBTU_Transactions_03[Index].ReqBuilt)OTU(Trans_Triggers_03[Index]);
			END_ROUTINE

			ROUTINE MainRoutine 
					RC: "All information provided $QAS IS$Q - No Warranty or implied merchantability. $N"
					    "Refer to the RSLogix 5000 End User License Agreement (EULA) in the Release Notes.$N"
					    "********************************$N"
					    "Revision History$N"
					    "********************************$N"
					    "Release 1.04$N"
					    "********************************$N"
					    "$N"
					    "This program as configured will support connection to up to 4 ModbusTCP addresses with up to 5 transactions to each address.  $N"
					    "This can be modfied if you needs are outside of these contraints.$N"
					    "It will also require 200-230k of controller memory in itself plus any required for the users application.$N"
					    "Multiple devices can be connected to a single address if the Modbus addressed devices is a gateway by using the Unit ID in the transaction definitions to specify devices on the other side of the gateway.";
					N: NOP();
					RC: "Overall Clearing of all Sockets and Messages";
					N: [XIC(MBTU_EnMBTCP) ONS(ONS[1]) ,[XIO(MBTU_EnMBTCP) ONS(ONS[2]) ,XIC(S:FS) ] JSR(ClearCommBuffersAndTriggers,0) ][JSR(_SUB_SET_PATH,0) FLL(0,MBTI_Instance[0],NumberOfConnections) ,MSG(MBTI_Delete_All_MSG) ];
					RC: "Delete all failure handler.  Most likely cause is the MBTU_EnetModulePort being set incorrectly.$N"
					    "";
					N: XIC(MBTI_Delete_All_MSG.ER)ONS(ONS_ConErrs[0])MOV(-7,MBTU_Connections[0].MBTI_ConnLastError)MOV(-7,MBTU_Connections[1].MBTI_ConnLastError)MOV(-7,MBTU_Connections[2].MBTI_ConnLastError)MOV(-7,MBTU_Connections[3].MBTI_ConnLastError);
					N: LBL(Connection0)XIO(MBTU_Connections[0].MBTU_Enable)JMP(Connection1);
					RC: "This section maintains the connections.  If a connection is enabled it will monitor and do connections on an as needed basis.  This includes initial connections and any reconnections due to remote devices being turned off, network problems, etc.$N"
					    "$N"
					    "Begin Connection 0$N"
					    "First determine if a Socket needs to be created, i.e. when a connection is not currently made and is it enabled.";
					N: XIC(MBTI_Delete_All_MSG.DN)XIO(RetryTimers[0].DN)XIC(MBTU_EnMBTCP)ONS(ONS[3])XIO(MBTU_Connections[0].MBTI_Connected)MSG(MBTI_Create_Sock_MSG_00);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Create_Sock_MSG_00.ER)ONS(ONS_ConErrs[1])MOV(-8,MBTU_Connections[0].MBTI_ConnLastError);
					RC: "Now build the necessary information to connect to the device specified in the MBTU_DestAddress_xx and attempt a connection.$N"
					    "";
					N: XIC(MBTI_Create_Sock_MSG_00.DN)XIO(RetryTimers[0].DN)ONS(ONS[4])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[0].MBTI_Connected)MOV(MBTI_Instance[0],MBTI_Connect_Sock_MSG_00.Instance)MOV(MBTI_Instance[0],MBTI_Write_Data_MSG_00.Instance)MID(MBTU_Connections[0].MBTU_DestAddress,MBTU_Connections[0].MBTU_DestAddress.LEN,1,MBTI_DestAddress_00.DestAddr)MOV(MBTI_Instance[0],MBTI_Read_Data_MSG_00.Instance)MOV(MBTI_Instance[0],MBTI_Delete_Socket_MSG_00.Instance)ADD(8,MBTI_DestAddress_00.DestAddr.LEN,MBTI_Connect_Sock_MSG_00.REQ_LEN)MOV(0,NoReplyCounter[0].ACC)MSG(MBTI_Connect_Sock_MSG_00);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Connect_Sock_MSG_00.ER)ONS(ONS_ConErrs[2])MOV(-9,MBTU_Connections[0].MBTI_ConnLastError);
					RC: "If a connection is successfullly made, set the MBConnected bit to indicate to the rest of the application that the connection now requires servicing.";
					N: XIC(MBTI_Connect_Sock_MSG_00.DN)ONS(ONS[5])XIC(MBTU_EnMBTCP)MOV(0,MBTU_Connections[0].MBTI_ConnLastError)OTL(MBTU_Connections[0].MBTI_Connected);
					RC: "Handle errors in connecting here.  The usually cause of issues here is non-existing devices, improper addresses, or devices that don$'t support the proper port number (Modbus TCP uses port address 502).";
					N: XIC(MBTI_Connect_Sock_MSG_00.ER)ONS(ONS[6])XIC(MBTU_EnMBTCP)MSG(MBTI_Delete_Socket_MSG_00)OTU(MBTU_Connections[0].MBTI_Connected);
					RC: "This rung handles retrying on connections.  The timer determines the retry interval.  This will activate when a connection is not made or when connections are dropped.$N"
					    "";
					N: XIC(MBTI_Delete_All_MSG.DN)XIC(MBTU_Connections[0].MBTU_Enable)XIO(MBTU_Connections[0].MBTI_Connected)XIO(RetryTimers[0].DN)TON(RetryTimers[0],?,?);
					N: XIO(MBTU_Connections[0].MBTI_Connected)ONS(ONS_ConErrs[3])MOV(-10,MBTU_Connections[0].MBTI_ConnLastError);
					N: LBL(Connection1)XIO(MBTU_Connections[1].MBTU_Enable)JMP(Connection2);
					RC: "Begin Connection 1$N"
					    "$N"
					    "First determine if a Socket needs to be created, i.e. when a connection is not currently made and is it enabled.";
					N: XIC(MBTI_Delete_All_MSG.DN)XIO(RetryTimers[1].DN)ONS(ONS[13])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[1].MBTI_Connected)MSG(MBTI_Create_Sock_MSG_01);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Create_Sock_MSG_01.ER)ONS(ONS_ConErrs[11])MOV(-8,MBTU_Connections[1].MBTI_ConnLastError);
					RC: "Now build the necessary information to connect to the device specified in the MBTU_DestAddress_xx and attempt a connection.";
					N: XIC(MBTI_Create_Sock_MSG_01.DN)XIO(RetryTimers[1].DN)ONS(ONS[14])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[1].MBTI_Connected)MOV(MBTI_Instance[1],MBTI_Connect_Sock_MSG_01.Instance)MOV(MBTI_Instance[1],MBTI_Write_Data_MSG_01.Instance)MID(MBTU_Connections[1].MBTU_DestAddress,MBTU_Connections[1].MBTU_DestAddress.LEN,1,MBTI_DestAddress_01.DestAddr)MOV(MBTI_Instance[1],MBTI_Read_Data_MSG_01.Instance)MOV(MBTI_Instance[1],MBTI_Delete_Socket_MSG_01.Instance)ADD(8,MBTI_DestAddress_01.DestAddr.LEN,MBTI_Connect_Sock_MSG_01.REQ_LEN)MSG(MBTI_Connect_Sock_MSG_01);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Connect_Sock_MSG_01.ER)ONS(ONS_ConErrs[12])MOV(-9,MBTU_Connections[1].MBTI_ConnLastError);
					RC: "If a connection is successfullly made, set the MBConnected bit to indicate to the rest of the application that the connection now requires servicing.";
					N: XIC(MBTI_Connect_Sock_MSG_01.DN)ONS(ONS[15])XIC(MBTU_EnMBTCP)MOV(0,MBTU_Connections[1].MBTI_ConnLastError)OTL(MBTU_Connections[1].MBTI_Connected);
					RC: "Handle errors in connecting here.  The usually cause of issues here is non-existing devices, improper addresses, or deivces that don$'t support the proper port number (Modbus TCP uses port address 502).";
					N: XIC(MBTI_Connect_Sock_MSG_01.ER)ONS(ONS[16])XIC(MBTU_EnMBTCP)MSG(MBTI_Delete_Socket_MSG_01)OTU(MBTU_Connections[1].MBTI_Connected);
					RC: "This rung handles retrying on connections.  The timer determines the retry interval.  This will activate when a connection is not made or when connections are dropped.$N"
					    "";
					N: XIC(MBTI_Delete_All_MSG.DN)XIC(MBTU_Connections[1].MBTU_Enable)XIO(MBTU_Connections[1].MBTI_Connected)XIO(RetryTimers[1].DN)TON(RetryTimers[1],?,?);
					N: XIO(MBTU_Connections[1].MBTI_Connected)ONS(ONS_ConErrs[13])MOV(-10,MBTU_Connections[1].MBTI_ConnLastError);
					N: LBL(Connection2)XIO(MBTU_Connections[2].MBTU_Enable)JMP(Connection3);
					RC: "Begin Connection 2$N"
					    "$N"
					    "First determine if a Socket needs to be created, i.e. when a connection is not currently made and is it enabled.$N"
					    "";
					N: XIC(MBTI_Delete_All_MSG.DN)XIO(RetryTimers[2].DN)ONS(ONS[23])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[2].MBTI_Connected)MSG(MBTI_Create_Sock_MSG_02);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Create_Sock_MSG_01.ER)ONS(ONS_ConErrs[21])MOV(-8,MBTU_Connections[2].MBTI_ConnLastError);
					RC: "Now build the necessary information to connect to the device specified in the MBTU_DestAddress_xx and attempt a connection.$N"
					    "";
					N: XIC(MBTI_Create_Sock_MSG_02.DN)XIO(RetryTimers[2].DN)ONS(ONS[24])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[2].MBTI_Connected)MOV(MBTI_Instance[2],MBTI_Connect_Sock_MSG_02.Instance)MOV(MBTI_Instance[2],MBTI_Write_Data_MSG_02.Instance)MID(MBTU_Connections[2].MBTU_DestAddress,MBTU_Connections[2].MBTU_DestAddress.LEN,1,MBTI_DestAddress_02.DestAddr)MOV(MBTI_Instance[2],MBTI_Read_Data_MSG_02.Instance)MOV(MBTI_Instance[2],MBTI_Delete_Socket_MSG_02.Instance)ADD(8,MBTI_DestAddress_02.DestAddr.LEN,MBTI_Connect_Sock_MSG_02.REQ_LEN)MSG(MBTI_Connect_Sock_MSG_02);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Connect_Sock_MSG_02.ER)ONS(ONS_ConErrs[22])MOV(-9,MBTU_Connections[2].MBTI_ConnLastError);
					RC: "If a connection is successfullly made, set the MBConnected bit to indicate to the rest of the application that the connection now requires servicing.";
					N: XIC(MBTI_Connect_Sock_MSG_02.DN)ONS(ONS[25])XIC(MBTU_EnMBTCP)MOV(0,MBTU_Connections[2].MBTI_ConnLastError)OTL(MBTU_Connections[2].MBTI_Connected);
					RC: "Handle errors in connecting here.  The usually cause of issues here is non-existing devices, improper addresses, or deivces that don$'t support the proper port number (Modbus TCP uses port address 502).";
					N: XIC(MBTI_Connect_Sock_MSG_02.ER)ONS(ONS[26])XIC(MBTU_EnMBTCP)MSG(MBTI_Delete_Socket_MSG_02)OTU(MBTU_Connections[2].MBTI_Connected);
					RC: "This rung handles retrying on connections.  The timer determines the retry interval.  This will activate when a connection is not made or when connections are dropped.$N"
					    "";
					N: XIC(MBTI_Delete_All_MSG.DN)XIC(MBTU_Connections[2].MBTU_Enable)XIO(MBTU_Connections[2].MBTI_Connected)XIO(RetryTimers[2].DN)TON(RetryTimers[2],?,?);
					N: XIO(MBTU_Connections[2].MBTI_Connected)ONS(ONS_ConErrs[23])MOV(-10,MBTU_Connections[2].MBTI_ConnLastError);
					N: LBL(Connection3)XIO(MBTU_Connections[3].MBTU_Enable)JMP(ConnectionDone);
					RC: "Begin Connection 3$N"
					    "$N"
					    "First determine if a Socket needs to be created, i.e. when a connection is not currently made and is it enabled.";
					N: XIC(MBTI_Delete_All_MSG.DN)XIO(RetryTimers[3].DN)ONS(ONS[33])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[3].MBTI_Connected)MSG(MBTI_Create_Sock_MSG_03);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Create_Sock_MSG_03.ER)ONS(ONS_ConErrs[31])MOV(-8,MBTU_Connections[3].MBTI_ConnLastError);
					RC: "Now build the necessary information to connect to the device specified in the MBTU_DestAddress_xx and attempt a connection.";
					N: XIC(MBTI_Create_Sock_MSG_03.DN)XIO(RetryTimers[3].DN)ONS(ONS[34])XIC(MBTU_EnMBTCP)XIO(MBTU_Connections[3].MBTI_Connected)MOV(MBTI_Instance[3],MBTI_Connect_Sock_MSG_03.Instance)MOV(MBTI_Instance[3],MBTI_Write_Data_MSG_03.Instance)MID(MBTU_Connections[3].MBTU_DestAddress,MBTU_Connections[3].MBTU_DestAddress.LEN,1,MBTI_DestAddress_03.DestAddr)MOV(MBTI_Instance[3],MBTI_Read_Data_MSG_03.Instance)MOV(MBTI_Instance[3],MBTI_Delete_Socket_MSG_03.Instance)ADD(8,MBTI_DestAddress_03.DestAddr.LEN,MBTI_Connect_Sock_MSG_03.REQ_LEN)MSG(MBTI_Connect_Sock_MSG_03);
					RC: "Create Socket Error Handler";
					N: XIC(MBTI_Connect_Sock_MSG_03.ER)ONS(ONS_ConErrs[32])MOV(-9,MBTU_Connections[3].MBTI_ConnLastError);
					RC: "If a connection is successfullly made, set the MBConnected bit to indicate to the rest of the application that the connection now requires servicing.";
					N: XIC(MBTI_Connect_Sock_MSG_03.DN)ONS(ONS[35])XIC(MBTU_EnMBTCP)MOV(0,MBTU_Connections[3].MBTI_ConnLastError)OTL(MBTU_Connections[3].MBTI_Connected);
					RC: "Handle errors in connecting here.  The usually cause of issues here is non-existing devices, improper addresses, or deivces that don$'t support the proper port number (Modbus TCP uses port address 502).";
					N: XIC(MBTI_Connect_Sock_MSG_03.ER)ONS(ONS[36])XIC(MBTU_EnMBTCP)MSG(MBTI_Delete_Socket_MSG_03)OTU(MBTU_Connections[3].MBTI_Connected);
					RC: "This rung handles retrying on connections.  The timer determines the retry interval.  This will activate when a connection is not made or when connections are dropped.$N"
					    "";
					N: XIC(MBTI_Delete_All_MSG.DN)XIC(MBTU_Connections[3].MBTU_Enable)XIO(MBTU_Connections[3].MBTI_Connected)XIO(RetryTimers[3].DN)TON(RetryTimers[3],?,?);
					N: XIO(MBTU_Connections[3].MBTI_Connected)ONS(ONS_ConErrs[33])MOV(-10,MBTU_Connections[3].MBTI_ConnLastError);
					RC: "End of Connection Maintainance Section";
					N: LBL(ConnectionDone)NOP();
					RC: "This is the main poll routine.  It handles all determinations of polling times as well as processing incoming and outgoing data.$N"
					    "$N"
					    "This rung handles the reads and write functions on each enabled connection.$N"
					    "";
					N: CMP(1<=NumberOfConnections)JSR(Process_Connections,0);
					RC: "Polling Timer$N"
					    "The polling timer is the heart of the communications.  All the polling intervals specified in the transaction definitions are specified in the number of these intervals.  Care should be taken in modifying this value, with values too high or low may cause lost data, transaction being thrown out due to expired Transaction ID$'s, etc.";
					N: XIO(PollTimer.DN)TON(PollTimer,?,?);
					RC: "The polling count is used to calculate when each enabled request on an enabled connection is to be polled.  An evaluation of the timing is done in _SUB_CheckPollInterval.  TransTrigger values are set when a transaction should be done.  Transaction timeouts occur at the polling interval.$N"
					    "";
					N: XIC(PollTimer.DN)ONS(ONSPOLL[0])ADD(PollCounter,1,PollCounter);
					RC: "For each connection (1 per rung below), use a FOR instruction to iterate through the transactions.  Note that each connection can have a unique number of transaction, thereby the need for this method.$N"
					    "";
					N: XIC(PollTimer.DN)ONS(ONSPOLL[1])MOV(0,CIdx)FOR(_SUB_CheckPollInterval,TrIDX,0,MBTU_Connections[0].MBTI_NumberOfTransactions,1);
					N: XIC(PollTimer.DN)ONS(ONSPOLL[2])MOV(1,CIdx)FOR(_SUB_CheckPollInterval,TrIDX,0,MBTU_Connections[1].MBTI_NumberOfTransactions,1);
					N: XIC(PollTimer.DN)ONS(ONSPOLL[3])MOV(2,CIdx)FOR(_SUB_CheckPollInterval,TrIDX,0,MBTU_Connections[2].MBTI_NumberOfTransactions,1);
					N: XIC(PollTimer.DN)ONS(ONSPOLL[4])MOV(3,CIdx)FOR(_SUB_CheckPollInterval,TrIDX,0,MBTU_Connections[3].MBTI_NumberOfTransactions,1);
					N: LBL(EndOfMainRoutine)NOP();
			END_ROUTINE

			ROUTINE Packet_Processing 
					RC: "This Routine processes incoming data from a single connection where RW_Select is the Connection ID.   The routine Process_Connections sets RW_Select before calling this routing.  Once a whole packet is detected, it will parse the packet, find a matching request using the transaction code, and move any data that$'s been received with a matching Transaction ID.$N"
					    "$N"
					    "Only process transaction if the connection is valid.  If not jump to the end.$N"
					    "";
					N: XIO(MBTU_Connections[RW_Select].MBTI_Connected)JMP(Exit1);
					RC: "This will check main read buffer for new modbus string.$N"
					    "First check the header (7 bytes). Bytes 4 an 5 will contain additional packet length.$N"
					    "If all bytes of this message are received, the packet will be extracted from the Main read buffer and parsed.$N"
					    "";
					N: GEQ(Main_Read_Buffer[RW_Select].LEN,7)COP(Main_Read_Buffer[RW_Select].DATA[4],Additional_len,1)SWPB(Additional_len,REVERSE,Additional_len)ADD(Additional_len,6,Additional_len_read)GEQ(Main_Read_Buffer[RW_Select].LEN,Additional_len_read)MID(Main_Read_Buffer[RW_Select],Additional_len_read,1,Modbus_Packet)DELETE(Main_Read_Buffer[RW_Select],Additional_len_read,1,Main_Read_Buffer[RW_Select])OTE(Data_Received);
					RC: "Check for malformed packets by checking transaction type and protocol identifier.   Clear the buffer  if found.  $N"
					    "This is just a safety measure in case corrupt data ever gets left in the buffer.$N"
					    "";
					N: XIO(Data_Received)MOV(Main_Read_Buffer[RW_Select].DATA[8],CMD_IN)[NEQ(Main_Read_Buffer[RW_Select].DATA[2],0) ,NEQ(Main_Read_Buffer[RW_Select].DATA[3],0) ,LES(CMD_IN,1) ,GRT(CMD_IN,6) NEQ(CMD_IN,15) NEQ(CMD_IN,16) ]MOV(0,Main_Read_Buffer[RW_Select].LEN)JMP(Exit1);
					RC: "Once data is ready,  extract the Modbus_ID, Modbus_Unit, and extract the data packet from the Modbus TCP packet";
					N: XIC(Data_Received)MID(Modbus_Packet,2,1,Modbus_ID)MUL(Modbus_ID.DATA[0],256,Modbus_TransID)OR(Modbus_ID.DATA[1],Modbus_TransID,Modbus_TransID)MID(Modbus_Packet,1,7,Modbus_Unit)SUB(Additional_len,1,Modbus_Bytes)MID(Modbus_Packet,Modbus_Bytes,8,Modbus_Cmd_String);
					N: XIC(Data_Received)MOV(Modbus_Cmd_String.DATA[0],CMD_IN);
					RC: "For these transaction types (all writes), the only thing necessary is to mark the Transaction ID as received  $N"
					    "SUB__Check_Write_Reply will match the transaction code to the request and mark the packet as received.$N"
					    "$N"
					    "";
					N: XIC(Data_Received)[[EQU(CMD_IN,5) ,EQU(CMD_IN,6) ] OTE(Valid[5]) ,[EQU(CMD_IN,15) ,EQU(CMD_IN,16) ] OTE(Valid[15]) ][JSR(SUB_Check_Write_Reply,0) ,OTL(Valid_Command) ];
					RC: "Analyze incoming command for bit read commands$N"
					    "Trans Types 1 and 2.$N"
					    "Addresses 0xxxx and 1xxxx handling";
					N: XIC(Data_Received)EQU(CMD_IN,1)MOV(Modbus_Cmd_String.DATA[1],Modbus_CMD_Len)MUL(Modbus_CMD_Len,8,Modbus_CMD_Len)OTE(Valid[1]);
					N: XIC(Data_Received)EQU(CMD_IN,2)MOV(Modbus_Cmd_String.DATA[1],Modbus_CMD_Len)MUL(Modbus_CMD_Len,8,Modbus_CMD_Len)OTE(Valid[2]);
					RC: "For Transaction types of 1 and 2, call Sub_Check_Write_Reply to match Transaction code and mark received, $N"
					    "then Sub_Resp_Str_Bit to parse the data and write it to the local data arrays.";
					N: XIC(Data_Received)[XIC(Valid[1]) ,XIC(Valid[2]) ][JSR(SUB_Check_Write_Reply,0) XIC(TransFound) JSR(SUB_Resp_Str_BIT,0) ,OTL(Valid_Command) ];
					RC: "Analyze incoming command for REGISTER commands$N"
					    "Transaction Types 3, and 4.$N"
					    "Adresses 3xxxxx and 4xxxxx handling$N"
					    "Finally calling SUB_Check_Write_Reply to match the Transaction ID ot the request and mark the transaction as received and SUB_Resp_Str_WORD to unpack the data and write it to the local arrays.$N"
					    "";
					N: XIC(Data_Received)[EQU(CMD_IN,3) OTE(Valid[3]) ,EQU(CMD_IN,4) OTE(Valid[4]) ]AND(Modbus_Cmd_String.DATA[1],255,Modbus_CMD_Len)DIV(Modbus_CMD_Len,2,Modbus_CMD_Len)[JSR(SUB_Check_Write_Reply,0) XIC(TransFound) JSR(SUB_Resp_Str_WORD,0) ,OTL(Valid_Command) ];
					RC: "Check for Exception Replies from the remote device.  This is indicated by the 8th bit being sent in the return transaction type.  i.e. Transaction type of 3 would be returned as 131 decimal.$N"
					    "";
					N: XIC(Data_Received)XIC(CMD_IN.7)JSR(SUB_Check_Write_Reply,0);
					N: OTU(Valid_Command);
					N: LBL(Exit1)NOP();
			END_ROUTINE

			ROUTINE Process_Connections 
					RC: "This routine is called from MainRoutine on the polling interval and processes all connections and Transactions.  $N"
					    "FOR instructions are used to allow for flexibility in the number of transactions per connection. $N"
					    "First there are four rungs that process outgoing and incoming request, then one final one for $N"
					    "processing any packets that have been received.";
					N: SBR()NOP();
					RC: "First call Process Tranactions to read and write any data necessary for each of the four connection$N"
					    ".$N"
					    "";
					N: XIC(MBTU_Connections[0].MBTU_Enable)MOV(0,ConnectionIDX)FOR(Process_Transaction,TransIDX,0,MBTU_Connections[0].MBTI_NumberOfTransactions,1);
					N: XIC(MBTU_Connections[1].MBTU_Enable)MOV(1,ConnectionIDX)FOR(Process_Transaction,TransIDX,0,MBTU_Connections[1].MBTI_NumberOfTransactions,1);
					N: XIC(MBTU_Connections[2].MBTU_Enable)MOV(2,ConnectionIDX)FOR(Process_Transaction,TransIDX,0,MBTU_Connections[2].MBTI_NumberOfTransactions,1);
					N: XIC(MBTU_Connections[3].MBTU_Enable)MOV(3,ConnectionIDX)FOR(Process_Transaction,TransIDX,0,MBTU_Connections[3].MBTI_NumberOfTransactions,1);
					RC: "Now process any received traffic from any of the connections.$N"
					    "";
					N: SUB(NumberOfConnections,1,NumberOfConnections1)FOR(Packet_Processing,RW_Select,0,NumberOfConnections1,1);
					N: RET();
			END_ROUTINE

			ROUTINE Process_Transaction 
					RC: "This routine processes incoming requests and creates outgoing responses to a single connection and transaction as set in ConnectionIDX and TransIDX.$N"
					    "This is routine is called using a FOR instruction that rotates through all the possible transactions.  Transactions that are not enabled are skipped over.";
					N: [NEQ(ConnectionIDX,0) ,XIO(MBTU_Transactions_00[TransIDX].Enabled) ]JMP(Con1);
					RC: "Rebuild the request string if the ReqBuilt flag is cleared or this is a write operation.";
					N: [XIC(Trans_Triggers_00[TransIDX]) [EQU(MBTU_Transactions_00[TransIDX].TransType,5) ,EQU(MBTU_Transactions_00[TransIDX].TransType,6) ,EQU(MBTU_Transactions_00[TransIDX].TransType,15) ,EQU(MBTU_Transactions_00[TransIDX].TransType,16) ] ,XIO(MBTU_Transactions_00[TransIDX].ReqBuilt) ]JSR(SUB_BuildRequestString,1,MBTU_Transactions_00[TransIDX],MBTU_Transactions_00[TransIDX])OTL(MBTU_Transactions_00[TransIDX].ReqBuilt);
					RC: "Create a new transaction ID in the Request String and trigger a write of the request$N"
					    "";
					N: XIC(MBTU_Transactions_00[TransIDX].ReqBuilt)XIC(Trans_Triggers_00[TransIDX])XIC(MBTU_Connections[0].MBTI_Connected)ONS(Trans_ONS_00[TransIDX])DELETE(MBTU_Transactions_00[TransIDX].Request,2,1,MBTU_Transactions_00[TransIDX].Request)[EQU(IDCounter,32767) MOV(0,IDCounter) ,NEQ(IDCounter,32767) ]ADD(IDCounter,1,IDCounter)MOV(IDCounter,MBTU_Transactions_00[TransIDX].TransID)JSR(_SUB_Int2ST,1,MBTU_Transactions_00[TransIDX].TransID,TempASCII)CONCAT(TempASCII,MBTU_Transactions_00[TransIDX].Request,MBTU_Transactions_00[TransIDX].Request)[OTL(Write_Now_00[TransIDX]) ,OTU(Trans_Triggers_00[TransIDX]) ];
					RC: "Before we write, check to see if we have a reply, $N"
					    "if none increment the noReply counter for this connection.  $N"
					    "If so reset the count.$N"
					    "After 10 reset the connection.";
					N: XIC(MBTU_Transactions_00[TransIDX].TransComplete)MOV(0,NoReplyCounter[0].ACC);
					RC: "If  this transaction is flagged for transmit, then copy the request string into MBTI_Write_DataOut, set the packet size, do the write message function and clear the Write_Now flag .$N"
					    "";
					N: XIC(MBTU_Connections[0].MBTI_Connected)XIC(Write_Now_00[TransIDX])XIO(MBTI_Write_Data_MSG_00.EN)[COP(MBTU_Transactions_00[TransIDX].Request,MBTI_Write_Data_Out[0].Buffer,1) ADD(MBTI_Write_Data_Out[0].Buffer.LEN,16,MBTI_Write_Data_MSG_00.REQ_LEN) ,XIO(MBTU_Transactions_00[TransIDX].TransComplete) CTU(NoReplyCounter[0],?,?) ][MSG(MBTI_Write_Data_MSG_00) ,MOV(-1,MBTU_Transactions_00[TransIDX].TransStat) OTU(MBTU_Transactions_00[TransIDX].TransComplete) OTU(Write_Now_00[TransIDX]) ];
					N: XIC(NoReplyCounter[0].DN)MOV(0,NoReplyCounter[0].ACC)MOV(-15,MBTU_Connections[0].MBTI_ConnLastError)MSG(MBTI_Delete_Socket_MSG_00)OTU(MBTU_Connections[0].MBTI_Connected);
					RC: "Process errors from write instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Write_Data_MSG_00.ER)ONS(ONS_ERR[0])[EQU(MBTI_Write_Data_MSG_00.ERR,255) MOV(-2,MBTU_Transactions_00[0].TransLastError) [EQU(MBTI_Write_Data_MSG_00.EXERR,51) ,EQU(MBTI_Write_Data_MSG_00.EXERR,54) ,EQU(MBTI_Write_Data_MSG_00.EXERR,60) ] ,[EQU(MBTI_Write_Data_MSG_00.ERR,5) ,EQU(MBTI_Write_Data_MSG_00.ERR,8) ] MOV(-3,MBTU_Transactions_00[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_00)OTU(MBTU_Connections[0].MBTI_Connected);
					RC: "Now check for any incoming traffic on the connection";
					N: XIC(MBTU_Connections[0].MBTI_Connected)XIO(MBTI_Read_Data_MSG_00.EN)MSG(MBTI_Read_Data_MSG_00);
					RC: "If any data is received we will add it to the main read buffer.$N"
					    "This is done to handle partial packets with incomplete Modbus commands spanning more than one packet.$N"
					    " ";
					N: XIC(MBTU_Connections[0].MBTI_Connected)XIC(MBTI_Read_Data_MSG_00.DN)GRT(MBTI_Read_Resp[0].Buf.LEN,0)CONCAT(Main_Read_Buffer[0],MBTI_Read_Resp[0].Buf,Main_Read_Buffer[0]);
					RC: "Process errors from the read instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Read_Data_MSG_00.ER)ONS(ONS_ERR[20])[EQU(MBTI_Read_Data_MSG_00.ERR,255) MOV(-4,MBTU_Transactions_00[TransIDX].TransLastError) [EQU(MBTI_Write_Data_MSG_00.EXERR,51) ,EQU(MBTI_Write_Data_MSG_00.EXERR,60) ,EQU(MBTI_Write_Data_MSG_00.EXERR,54) ] ,EQU(MBTI_Read_Data_MSG_00.ERR,5) MOV(-5,MBTU_Transactions_00[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_00)OTU(MBTU_Connections[0].MBTI_Connected);
					RC: "Begin the Processing of Connection 1 when the ConnectionIDX is set to 1 and 1 is enabled.$N"
					    "";
					N: LBL(Con1)[NEQ(ConnectionIDX,1) ,XIO(MBTU_Transactions_01[TransIDX].Enabled) ]JMP(Con2);
					RC: "Rebuild the request string if the ReqBuilt flag is cleared or this is a write operation.";
					N: [XIC(Trans_Triggers_01[TransIDX]) [EQU(MBTU_Transactions_01[TransIDX].TransType,5) ,EQU(MBTU_Transactions_01[TransIDX].TransType,6) ,EQU(MBTU_Transactions_01[TransIDX].TransType,15) ,EQU(MBTU_Transactions_01[TransIDX].TransType,16) ] ,XIO(MBTU_Transactions_01[TransIDX].ReqBuilt) ]JSR(SUB_BuildRequestString,1,MBTU_Transactions_01[TransIDX],MBTU_Transactions_01[TransIDX])OTL(MBTU_Transactions_01[TransIDX].ReqBuilt);
					RC: "Create a new transaction ID in the Request String and trigger a write of the request$N"
					    "";
					N: XIC(MBTU_Transactions_01[TransIDX].ReqBuilt)XIC(Trans_Triggers_01[TransIDX])XIC(MBTU_Connections[1].MBTI_Connected)ONS(Trans_ONS_01[TransIDX])DELETE(MBTU_Transactions_01[TransIDX].Request,2,1,MBTU_Transactions_01[TransIDX].Request)[EQU(IDCounter,32767) MOV(0,IDCounter) ,NEQ(IDCounter,32767) ]ADD(IDCounter,1,IDCounter)MOV(IDCounter,MBTU_Transactions_01[TransIDX].TransID)JSR(_SUB_Int2ST,1,MBTU_Transactions_01[TransIDX].TransID,TempASCII)CONCAT(TempASCII,MBTU_Transactions_01[TransIDX].Request,MBTU_Transactions_01[TransIDX].Request)[OTL(Write_Now_01[TransIDX]) ,OTU(Trans_Triggers_01[TransIDX]) ];
					RC: "Before we write, check to see if we have a reply, $N"
					    "if none increment the noReply counter for this connection.  $N"
					    "If so reset the count.$N"
					    "After 10 reset the connection.";
					N: XIC(MBTU_Transactions_01[TransIDX].TransComplete)MOV(0,NoReplyCounter[1].ACC);
					RC: "If  this transaction is flagged for transmit, then copy the request string into MBTI_Write_DataOut, set the packet size, do the write message function and clear the Write_Now flag .$N"
					    "";
					N: XIC(MBTU_Connections[1].MBTI_Connected)XIC(Write_Now_01[TransIDX])XIO(MBTI_Write_Data_MSG_01.EN)[COP(MBTU_Transactions_01[TransIDX].Request,MBTI_Write_Data_Out[1].Buffer,1) ADD(MBTI_Write_Data_Out[1].Buffer.LEN,16,MBTI_Write_Data_MSG_01.REQ_LEN) ,XIO(MBTU_Transactions_01[TransIDX].TransComplete) CTU(NoReplyCounter[1],?,?) ][MSG(MBTI_Write_Data_MSG_01) ,MOV(-1,MBTU_Transactions_01[TransIDX].TransStat) OTU(MBTU_Transactions_01[TransIDX].TransComplete) OTU(Write_Now_01[TransIDX]) ];
					N: XIC(NoReplyCounter[1].DN)MOV(0,NoReplyCounter[1].ACC)MOV(-15,MBTU_Connections[1].MBTI_ConnLastError)MSG(MBTI_Delete_Socket_MSG_01)OTU(MBTU_Connections[1].MBTI_Connected);
					RC: "Process errors from write instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Write_Data_MSG_01.ER)ONS(ONS_ERR[1])[EQU(MBTI_Write_Data_MSG_01.ERR,255) MOV(-2,MBTU_Transactions_01[TransIDX].TransLastError) [EQU(MBTI_Write_Data_MSG_01.EXERR,51) ,EQU(MBTI_Write_Data_MSG_01.EXERR,54) ,EQU(MBTI_Write_Data_MSG_01.EXERR,60) ] ,[EQU(MBTI_Write_Data_MSG_01.ERR,5) ,EQU(MBTI_Write_Data_MSG_01.ERR,8) ] MOV(-3,MBTU_Transactions_01[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_01)OTU(MBTU_Connections[1].MBTI_Connected);
					RC: "Now check for any incoming traffic on the connection";
					N: XIC(MBTU_Connections[1].MBTI_Connected)XIO(MBTI_Read_Data_MSG_01.EN)MSG(MBTI_Read_Data_MSG_01);
					RC: "If any data is received we will add it to the main read buffer.$N"
					    "This is done to handle partial packets with incomplete Modbus commands spanning more than one packet.$N"
					    " ";
					N: XIC(MBTU_Connections[1].MBTI_Connected)XIC(MBTI_Read_Data_MSG_01.DN)GRT(MBTI_Read_Resp[1].Buf.LEN,0)CONCAT(Main_Read_Buffer[1],MBTI_Read_Resp[1].Buf,Main_Read_Buffer[1]);
					RC: "Process errors from the read instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Read_Data_MSG_01.ER)ONS(ONS_ERR[21])[EQU(MBTI_Read_Data_MSG_01.ERR,255) MOV(-4,MBTU_Transactions_01[TransIDX].TransLastError) [EQU(MBTI_Read_Data_MSG_01.EXERR,51) ,EQU(MBTI_Read_Data_MSG_01.EXERR,54) ,EQU(MBTI_Read_Data_MSG_01.EXERR,60) ] ,EQU(MBTI_Read_Data_MSG_01.ERR,5) MOV(-5,MBTU_Transactions_01[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_01)OTU(MBTU_Connections[1].MBTI_Connected);
					RC: "Begin the Processing of Connection 2 when the ConnectionIDX is set to 2 and two is enabled.$N"
					    "";
					N: LBL(Con2)[NEQ(ConnectionIDX,2) ,XIO(MBTU_Transactions_02[TransIDX].Enabled) ]JMP(Con3);
					RC: "Rebuild the request string if the ReqBuilt flag is cleared or this is a write operation.";
					N: [XIC(Trans_Triggers_02[TransIDX]) [EQU(MBTU_Transactions_02[TransIDX].TransType,5) ,EQU(MBTU_Transactions_02[TransIDX].TransType,6) ,EQU(MBTU_Transactions_02[TransIDX].TransType,15) ,EQU(MBTU_Transactions_02[TransIDX].TransType,16) ] ,XIO(MBTU_Transactions_02[TransIDX].ReqBuilt) ]JSR(SUB_BuildRequestString,1,MBTU_Transactions_02[TransIDX],MBTU_Transactions_02[TransIDX])OTL(MBTU_Transactions_02[TransIDX].ReqBuilt);
					RC: "Create a new transaction ID in the Request String and trigger a write of the request$N"
					    "";
					N: XIC(MBTU_Transactions_02[TransIDX].ReqBuilt)XIC(Trans_Triggers_02[TransIDX])XIC(MBTU_Connections[2].MBTI_Connected)ONS(Trans_ONS_02[TransIDX])DELETE(MBTU_Transactions_02[TransIDX].Request,2,1,MBTU_Transactions_02[TransIDX].Request)[EQU(IDCounter,32767) MOV(0,IDCounter) ,NEQ(IDCounter,32767) ]ADD(IDCounter,1,IDCounter)MOV(IDCounter,MBTU_Transactions_02[TransIDX].TransID)JSR(_SUB_Int2ST,1,MBTU_Transactions_02[TransIDX].TransID,TempASCII)CONCAT(TempASCII,MBTU_Transactions_02[TransIDX].Request,MBTU_Transactions_02[TransIDX].Request)[OTL(Write_Now_02[TransIDX]) ,OTU(Trans_Triggers_02[TransIDX]) ];
					RC: "Before we write, check to see if we have a reply, $N"
					    "if none increment the noReply counter for this connection.  $N"
					    "If so reset the count.$N"
					    "After 10 reset the connection.";
					N: XIC(MBTU_Transactions_02[TransIDX].TransComplete)MOV(0,NoReplyCounter[2].ACC);
					RC: "If  this transaction is flagged for transmit, then copy the request string into MBTI_Write_DataOut, set the packet size, do the write message function and clear the Write_Now flag .$N"
					    "";
					N: XIC(MBTU_Connections[2].MBTI_Connected)XIC(Write_Now_02[TransIDX])XIO(MBTI_Write_Data_MSG_02.EN)[COP(MBTU_Transactions_02[TransIDX].Request,MBTI_Write_Data_Out[2].Buffer,1) ADD(MBTI_Write_Data_Out[2].Buffer.LEN,16,MBTI_Write_Data_MSG_02.REQ_LEN) ,XIO(MBTU_Transactions_02[TransIDX].TransComplete) CTU(NoReplyCounter[2],?,?) ][MSG(MBTI_Write_Data_MSG_02) ,MOV(-1,MBTU_Transactions_02[TransIDX].TransStat) OTU(MBTU_Transactions_02[TransIDX].TransComplete) OTU(Write_Now_02[TransIDX]) ];
					N: XIC(NoReplyCounter[2].DN)MOV(0,NoReplyCounter[2].ACC)MOV(-15,MBTU_Connections[2].MBTI_ConnLastError)MSG(MBTI_Delete_Socket_MSG_02)OTU(MBTU_Connections[2].MBTI_Connected);
					RC: "Process errors from write instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Write_Data_MSG_02.ER)ONS(ONS_ERR[2])[EQU(MBTI_Write_Data_MSG_02.ERR,255) MOV(-2,MBTU_Transactions_02[TransIDX].TransLastError) [EQU(MBTI_Write_Data_MSG_02.EXERR,51) ,EQU(MBTI_Write_Data_MSG_02.EXERR,54) ,EQU(MBTI_Write_Data_MSG_02.EXERR,60) ] ,[EQU(MBTI_Write_Data_MSG_02.ERR,5) ,EQU(MBTI_Write_Data_MSG_02.ERR,8) ] MOV(-3,MBTU_Transactions_02[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_02)OTU(MBTU_Connections[2].MBTI_Connected);
					RC: "Now check for any incoming traffic on the connection";
					N: XIC(MBTU_Connections[2].MBTI_Connected)XIO(MBTI_Read_Data_MSG_02.EN)MSG(MBTI_Read_Data_MSG_02);
					RC: "If any data is received we will add it to the main read buffer.$N"
					    "This is done to handle partial packets with incomplete Modbus commands spanning more than one packet.$N"
					    " ";
					N: XIC(MBTU_Connections[2].MBTI_Connected)XIC(MBTI_Read_Data_MSG_02.DN)GRT(MBTI_Read_Resp[2].Buf.LEN,0)CONCAT(Main_Read_Buffer[2],MBTI_Read_Resp[2].Buf,Main_Read_Buffer[2]);
					RC: "Process errors from the read instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Read_Data_MSG_02.ER)ONS(ONS_ERR[22])[EQU(MBTI_Read_Data_MSG_02.ERR,255) MOV(-4,MBTU_Transactions_02[TransIDX].TransLastError) [EQU(MBTI_Read_Data_MSG_02.EXERR,51) ,EQU(MBTI_Read_Data_MSG_02.EXERR,54) ,EQU(MBTI_Read_Data_MSG_02.EXERR,60) ] ,EQU(MBTI_Read_Data_MSG_02.ERR,5) MOV(-5,MBTU_Transactions_02[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_02)OTU(MBTU_Connections[2].MBTI_Connected);
					RC: "Begin the Processing of Connection 3 when the ConnectionIDX is set to 3 and 3 is enabled.$N"
					    "";
					N: LBL(Con3)[NEQ(ConnectionIDX,3) ,XIO(MBTU_Transactions_03[TransIDX].Enabled) ]JMP(ConEnd);
					RC: "Rebuild the request string if the ReqBuilt flag is cleared or this is a write operation.";
					N: [XIC(Trans_Triggers_03[TransIDX]) [EQU(MBTU_Transactions_03[TransIDX].TransType,5) ,EQU(MBTU_Transactions_03[TransIDX].TransType,6) ,EQU(MBTU_Transactions_03[TransIDX].TransType,15) ,EQU(MBTU_Transactions_03[TransIDX].TransType,16) ] ,XIO(MBTU_Transactions_03[TransIDX].ReqBuilt) ]JSR(SUB_BuildRequestString,1,MBTU_Transactions_03[TransIDX],MBTU_Transactions_03[TransIDX])OTL(MBTU_Transactions_03[TransIDX].ReqBuilt);
					RC: "Create a new transaction ID in the Request String and trigger a write of the request$N"
					    "";
					N: XIC(MBTU_Transactions_03[TransIDX].ReqBuilt)XIC(Trans_Triggers_03[TransIDX])ONS(Trans_ONS_03[TransIDX])DELETE(MBTU_Transactions_03[TransIDX].Request,2,1,MBTU_Transactions_03[TransIDX].Request)[EQU(IDCounter,32767) MOV(0,IDCounter) ,NEQ(IDCounter,32767) ]ADD(IDCounter,1,IDCounter)MOV(IDCounter,MBTU_Transactions_03[TransIDX].TransID)JSR(_SUB_Int2ST,1,MBTU_Transactions_03[TransIDX].TransID,TempASCII)CONCAT(TempASCII,MBTU_Transactions_03[TransIDX].Request,MBTU_Transactions_03[TransIDX].Request)[OTL(Write_Now_03[TransIDX]) ,OTU(Trans_Triggers_03[TransIDX]) ];
					RC: "Before we write, check to see if we have a reply, $N"
					    "if none increment the noReply counter for this connection.  $N"
					    "If so reset the count.$N"
					    "After 10 reset the connection.";
					N: XIC(MBTU_Transactions_03[TransIDX].TransComplete)MOV(0,NoReplyCounter[3].ACC);
					RC: "If  this transaction is flagged for transmit, then copy the request string into MBTI_Write_DataOut, set the packet size, do the write message function and clear the Write_Now flag .$N"
					    "";
					N: XIC(MBTU_Connections[3].MBTI_Connected)XIC(Write_Now_03[TransIDX])XIO(MBTI_Write_Data_MSG_03.EN)[COP(MBTU_Transactions_03[TransIDX].Request,MBTI_Write_Data_Out[3].Buffer,1) ADD(MBTI_Write_Data_Out[3].Buffer.LEN,16,MBTI_Write_Data_MSG_03.REQ_LEN) ,XIO(MBTU_Transactions_03[TransIDX].TransComplete) CTU(NoReplyCounter[3],?,?) ][MSG(MBTI_Write_Data_MSG_03) ,MOV(-1,MBTU_Transactions_03[TransIDX].TransStat) OTU(MBTU_Transactions_03[TransIDX].TransComplete) OTU(Write_Now_03[TransIDX]) ];
					N: XIC(NoReplyCounter[3].DN)MOV(0,NoReplyCounter[3].ACC)MOV(-15,MBTU_Connections[3].MBTI_ConnLastError)MSG(MBTI_Delete_Socket_MSG_03)OTU(MBTU_Connections[3].MBTI_Connected);
					RC: "Process errors from write instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Write_Data_MSG_03.ER)ONS(ONS_ERR[3])[EQU(MBTI_Write_Data_MSG_03.ERR,255) MOV(-2,MBTU_Transactions_03[TransIDX].TransLastError) [EQU(MBTI_Write_Data_MSG_03.EXERR,51) ,EQU(MBTI_Write_Data_MSG_03.EXERR,54) ,EQU(MBTI_Write_Data_MSG_03.EXERR,60) ] ,[EQU(MBTI_Write_Data_MSG_03.ERR,5) ,EQU(MBTI_Write_Data_MSG_03.ERR,8) ] MOV(-3,MBTU_Transactions_03[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_03)OTU(MBTU_Connections[3].MBTI_Connected);
					RC: "Now check for any incoming traffic on the connection";
					N: XIC(MBTU_Connections[3].MBTI_Connected)XIO(MBTI_Read_Data_MSG_03.EN)MSG(MBTI_Read_Data_MSG_03);
					RC: "If any data is received we will add it to the main read buffer.$N"
					    "This is done to handle partial packets with incomplete Modbus commands spanning more than one packet.$N"
					    " ";
					N: XIC(MBTU_Connections[3].MBTI_Connected)XIC(MBTI_Read_Data_MSG_03.DN)GRT(MBTI_Read_Resp[3].Buf.LEN,0)CONCAT(Main_Read_Buffer[3],MBTI_Read_Resp[3].Buf,Main_Read_Buffer[3]);
					RC: "Process errors from the read instruction here.  Disconnect if necessary, and clear the MBTI_Connected flag to trigger a reconnect.";
					N: XIC(MBTI_Read_Data_MSG_03.ER)ONS(ONS_ERR[23])[EQU(MBTI_Read_Data_MSG_03.ERR,255) MOV(-4,MBTU_Transactions_03[TransIDX].TransLastError) [EQU(MBTI_Read_Data_MSG_03.EXERR,51) ,EQU(MBTI_Read_Data_MSG_03.EXERR,54) ,EQU(MBTI_Read_Data_MSG_03.EXERR,60) ] ,EQU(MBTI_Read_Data_MSG_03.ERR,5) MOV(-5,MBTU_Transactions_03[TransIDX].TransLastError) ]MSG(MBTI_Delete_Socket_MSG_03)OTU(MBTU_Connections[3].MBTI_Connected);
					N: LBL(ConEnd)NOP();
			END_ROUTINE

			ROUTINE SUB_BuildRequestString (Description := "Builds  a modbus request string based on a transaction objects configuration.$N")
					RC: "This routine builds a request string. This is done only when the ReqBuiilt flag is cleared on read operations.  The actual requesting packet doesn$'t change other than the transaction id when the ReqBuilt flag is set.  On Write transactions, since the embedded data is potentially changing with every transmission. This routing is called from Packet_Processsing by passing a reference to the transaction.  The resulting string is wrtten to the Request string in the transaction definitions,  MBTU_Transactions_xx.";
					N: SBR(Trans)NOP();
					RC: "First make sure we have a good transaction Code.  $N"
					    "If not set the last error and clear the enable for this transaction.";
					N: [LES(Trans.TransType,1) ,GRT(Trans.TransType,6) ]NEQ(Trans.TransType,15)NEQ(Trans.TransType,16)MOV(-12,Trans.TransLastError)OTU(Trans.Enabled)RET(Trans);
					RC: "These are single write operations set the count to 1$N"
					    " for range checking.";
					N: [EQU(Trans.TransType,5) ,EQU(Trans.TransType,6) ]MOV(1,Trans.Count);
					RC: "Check discrete operations to make sure the transaction will fit in the local data arrays.";
					N: [EQU(Trans.TransType,1) ,EQU(Trans.TransType,2) ,EQU(Trans.TransType,5) ,EQU(Trans.TransType,15) ][CMP(Trans.LocalOffset+Trans.Count>1024) ,LES(Trans.LocalOffset,0) ,LES(Trans.Count,0) ]MOV(-13,Trans.TransLastError)OTU(Trans.Enabled)RET(Trans);
					RC: "Check Register operations to make sure they fit within the local data arrays.";
					N: [EQU(Trans.TransType,3) ,EQU(Trans.TransType,4) ,EQU(Trans.TransType,6) ,EQU(Trans.TransType,16) ][CMP(Trans.LocalOffset+Trans.Count>256) ,LES(Trans.LocalOffset,0) ,LES(Trans.Count,0) ]MOV(-13,Trans.TransLastError)OTU(Trans.Enabled)RET(Trans);
					RC: "Begin by building the MBAP Header$N"
					    "Transaction Identifier$N"
					    "Protocol Identifier (always 0)$N"
					    "Length (based on transaction)$N"
					    "Unit Identifier";
					N: FLL(0,Trans.Request,1)JSR(_SUB_Int2ST,1,Trans.TransID,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request)MOV(0,TempInt)JSR(_SUB_Int2ST,1,TempInt,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "Handle all length 6 transactions here  This adds the additional length to the header.$N"
					    "";
					N: [EQU(Trans.TransType,15) DIV(Trans.Count,8,TempInt) [CMP(TempInt*8=Trans.Count) ,CMP(TempInt*8<Trans.Count) ADD(TempInt,1,TempInt) ] ADD(TempInt,7,TempInt) ,LEQ(Trans.TransType,6) GEQ(Trans.TransType,1) MOV(6,TempInt) ,EQU(Trans.TransType,16) MOV(Trans.Count,TempInt) MUL(TempInt,2,TempInt) ADD(TempInt,7,TempInt) ]JSR(_SUB_Int2ST,1,TempInt,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "This adds the Unit ID to the header.  Most of the time this will be 0 unless the Ethernet device is a gateway and a remote address on the other side of the gateway needs to be specified.";
					N: JSR(_SUB_Byte2ST,1,Trans.UID,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "End of MBAP and begin PDAP$N"
					    "$N"
					    "Start by adding the transaction type value.$N"
					    "";
					N: JSR(_SUB_Byte2ST,1,Trans.TransType,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "The beginning address is added here.  Note that this does not include the initial data type prefix, 0, 1, 3, or 4, only the value following that in the Modicon reference.$N"
					    "";
					N: JSR(_SUB_Int2ST,1,Trans.BeginAddress,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "Add a reference count next for transactions requiring them.  This includes all multiple reads and writes.  Singles get filled in in subsequent rungs.";
					N: [GEQ(Trans.TransType,1) LEQ(Trans.TransType,4) ,EQU(Trans.TransType,15) ,EQU(Trans.TransType,16) ]JSR(_SUB_Int2ST,1,Trans.Count,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "Write Single Coil gets a value of either 0x0000 or 0xFF00";
					N: EQU(Trans.TransType,5)[XIO(MBTU_MB_0xx[Trans.LocalOffset]) MOV(0,TempInt) ,XIC(MBTU_MB_0xx[Trans.LocalOffset]) MOV(65280,TempInt) ]JSR(_SUB_Int2ST,1,TempInt,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "Write Single Register Puts the SingleValue next";
					N: EQU(Trans.TransType,6)JSR(_SUB_Int2ST,1,MBTU_MB_4xx[Trans.LocalOffset],TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request);
					RC: "Write Mult Registers$N"
					    "Add Register Data$N"
					    "$N"
					    "The next two rungs add byte count for trans types of 15 and 16.$N"
					    "$N"
					    "";
					N: EQU(Trans.TransType,15)DIV(Trans.Count,8,TempInt)[CMP(TempInt*8=Trans.Count) ,CMP(TempInt*8<>Trans.Count) ADD(TempInt,1,TempInt) ]JSR(_SUB_Byte2ST,1,TempInt,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request)MOV(0,buff_byte_index)CLR(buff_bit_index)CLR(MB_Resp_Data.DATA[0])MOV(TempInt,MB_Resp_Data.LEN)SUB(Trans.Count,1,TempInt)ADD(TempInt,Trans.LocalOffset,TempInt)FOR(_SUB_0x_RD,coil_wr_index,MBTU_Transactions_00[TransIDX].LocalOffset,TempInt,1)CONCAT(Trans.Request,MB_Resp_Data,Trans.Request);
					N: EQU(Trans.TransType,16)MUL(Trans.Count,2,TempInt)JSR(_SUB_Byte2ST,1,TempInt,TempASCII)CONCAT(Trans.Request,TempASCII,Trans.Request)MOV(0,MB_Resp_Data.LEN)SUB(Trans.Count,1,TempInt)ADD(TempInt,Trans.LocalOffset,TempInt)FOR(_SUB_4x_RD,RG_4x_Pos,Trans.LocalOffset,TempInt,1)CONCAT(Trans.Request,MB_Resp_Data,Trans.Request);
					N: RET(Trans);
			END_ROUTINE

			ROUTINE SUB_Check_Write_Reply 
					RC: "This routine is called from PacketProcessing after the Transaction ID on an incoming packet is parsed.    The CheckTransCode is called for each existing transaction ID until a match is found.  If none is found the TransFound bit is left cleared to indicat a packet was received with a out of date transaction ID, causing the data to be discarded since the location cannot be determined.";
					N: XIC(MBTU_EnMBTCP)OTU(TransFound)FOR(CheckTransCode,TransactionPtr,0,MBTU_Connections[RW_Select].MBTI_NumberOfTransactions,1);
			END_ROUTINE

			ROUTINE SUB_Resp_Str_BIT 
					RC: "This routine unpacks the reply data for binary read operations and writes the data to the local arrays using the _SUB_0x_WR routine.$N"
					    "$N"
					    "Check for a valid response length in bits.$N"
					    "Currently limited to 256, but can be increased";
					N: GEQ(CMD_LEN,1)LEQ(CMD_LEN,256)[XIC(Valid[1]) ,XIC(Valid[2]) ]OTE(Valid_Len);
					N: XIC(Valid_Len)[XIC(Valid[1]) OTE(Valid_CMD[1]) ,XIC(Valid[2]) OTE(Valid_CMD[2]) ];
					RC: "Set up and call the _SUB_0x_WR function and call it to unpack the data and write it into the local data arrays at the LocalOffset specified in the transaction.$N"
					    "";
					N: [XIC(Valid_CMD[1]) ,XIC(Valid_CMD[2]) ]MOV(2,buff_byte_index)CLR(buff_bit_index)SUB(Modbus_CMD_Len,1,CMD_LEN1)ADD(CMD_LEN1,LocalOffset,CMD_LEN1)FOR(_SUB_0x_WR,coil_wr_index,LocalOffset,CMD_LEN1,1);
			END_ROUTINE

			ROUTINE SUB_Resp_Str_WORD 
					RC: "Called from Packet_Processing to parse register data and write it to the local arrays using _Sub_4x_WR.$N"
					    "$N"
					    "First Check the range of registers to make sure we$'re within specified limits.$N"
					    "Length is limited to 120";
					N: GEQ(Modbus_CMD_Len,1)LEQ(Modbus_CMD_Len,120)OTE(Valid_Len1);
					N: XIC(Valid_Len1)[XIC(Valid[3]) OTE(Valid_CMD[3]) ,XIC(Valid[4]) OTE(Valid_CMD[4]) ];
					RC: "Set up values for the _Sub_4x_WR routine.  Starting position and length.$N"
					    "";
					N: [XIC(Valid_CMD[3]) ,XIC(Valid_CMD[4]) ]MOV(2,String_Pos)SUB(Modbus_CMD_Len,1,Modbus_Cmd_Len1)ADD(Modbus_Cmd_Len1,LocalOffset,Modbus_Cmd_Len1)FOR(_SUB_4x_WR,RG_4x_Pos,LocalOffset,Modbus_Cmd_Len1,1);
			END_ROUTINE

			ROUTINE _SUB_0x_RD 
					RC: "This routine is called from SUB_BuildRequestString and packs the 0x coils into integers for data transmission.  ";
					N: XIC(MBTU_MB_0xx[coil_wr_index])OTE(MB_Resp_Data.DATA[buff_byte_index].[buff_bit_index]);
					N: ADD(buff_bit_index,1,buff_bit_index)GRT(buff_bit_index,7)CLR(buff_bit_index)ADD(buff_byte_index,1,buff_byte_index)CLR(MB_Resp_Data.DATA[buff_byte_index]);
			END_ROUTINE

			ROUTINE _SUB_0x_WR 
					RC: "This routine is called using a FOR instruction from SUB_Resp_Str_Bit to iterate through the data portion of the packet and unpack write the individual bits (0xx or 1xx) into the local data array.  $N"
					    "Trans Type 1 data goes into the MBTU_MB_0xx and type 2 goes into MBTU_MB_1xx.$N"
					    "$N"
					    "First check WriteTransIDX to make sure it$'s in range.";
					N: LES(WriteTransIDX,0)GRT(WriteTransIDX,MBTU_Connections[ConnectionIDX].MBTI_NumberOfTransactions)JMP(EndSub0xWrt);
					RC: "Here is where the data is written locally.";
					N: XIC(Modbus_Cmd_String.DATA[buff_byte_index].[buff_bit_index])[XIC(Valid_CMD[1]) OTL(MBTU_MB_0xx[coil_wr_index]) ,XIC(Valid_CMD[2]) OTL(MBTU_MB_1xx[coil_wr_index]) ];
					N: XIO(Modbus_Cmd_String.DATA[buff_byte_index].[buff_bit_index])[XIC(Valid_CMD[1]) OTU(MBTU_MB_0xx[coil_wr_index]) ,XIC(Valid_CMD[2]) OTU(MBTU_MB_1xx[coil_wr_index]) ];
					RC: "take care of incrementing buff_bit_index and buff_byte_index.  Roll overs are handled as well.$N"
					    "";
					N: ADD(buff_bit_index,1,buff_bit_index)GRT(buff_bit_index,7)CLR(buff_bit_index)ADD(buff_byte_index,1,buff_byte_index);
					N: LBL(EndSub0xWrt)NOP();
			END_ROUTINE

			ROUTINE _SUB_4x_RD 
					RC: "Called by SUB_BuildRequestString to read MBTU_MB_4xx values and convert to string to be included in write register request strings.$N"
					    "";
					N: JSR(_SUB_Int2ST,1,MBTU_MB_4xx[RG_4x_Pos],RG_STR_TMP)CONCAT(MB_Resp_Data,RG_STR_TMP,MB_Resp_Data);
			END_ROUTINE

			ROUTINE _SUB_4x_WR 
					RC: "This function is called from a FOR instruction from SUB_Resp_Str_WORD.  Data is moved from the packet received and written to local data tags using the local offset specified in the transaction definition. $N"
					    "Transaction type 3 writes to MBTU_MB_4xx and Transaction type 4 writes to  MBTU_MB_3xx ";
					N: GEQ(WriteTransIDX,0)LEQ(WriteTransIDX,MBTU_Connections[ConnectionIDX].MBTI_NumberOfTransactions)COP(Modbus_Cmd_String.DATA[String_Pos],MB_TMP_INT,1)[XIC(Valid_CMD[3]) SWPB(MB_TMP_INT,REVERSE,MBTU_MB_4xx[RG_4x_Pos]) ,XIC(Valid_CMD[4]) SWPB(MB_TMP_INT,REVERSE,MBTU_MB_3xx[RG_4x_Pos]) ]ADD(String_Pos,2,String_Pos);
			END_ROUTINE

			ROUTINE _SUB_Byte2ST 
					RC: "This route converts a byte into a two character string to be added to the request string.   Called by SUB_BuildRequestString.";
					N: SBR(INT_IN)MOV(1,Str_Out.LEN)COP(INT_IN,Str_Out.DATA[0],1)RET(Str_Out);
			END_ROUTINE

			ROUTINE _SUB_CheckPollInterval (Description := "Pass and index and connection Number and will set the Trans_Triggers_XX when appropriate.$N")
					RC: "This Routine checks the poll interval for each transaction using modulo division from the Poll Counter.  If the result is 0, the transaction needs to be polled.  This is done in a way that can handle a variable number of transactions per connection.  It is called from a For instruction that iterates through TrIdx for the transaction and the CIdx set to the desired connection.$N"
					    "$N"
					    "If the transaction is disabled, return right away";
					N: EQU(CIdx,0)XIO(MBTU_Transactions_00[TrIDX].Enabled)JMP(EndCheckPollInterval);
					RC: "If the transaction is disabled, return right away";
					N: EQU(CIdx,1)XIO(MBTU_Transactions_01[TrIDX].Enabled)JMP(EndCheckPollInterval);
					RC: "If the transaction is disabled, return right away";
					N: EQU(CIdx,2)XIO(MBTU_Transactions_02[TrIDX].Enabled)JMP(EndCheckPollInterval);
					RC: "If the transaction is disabled, return right away";
					N: EQU(CIdx,3)XIO(MBTU_Transactions_03[TrIDX].Enabled)JMP(EndCheckPollInterval);
					RC: "Can$'t have a poll interval less than 1, so disable the transaction if it is incorrect to prevent problems.$N"
					    "";
					N: EQU(CIdx,0)LEQ(MBTU_Transactions_00[TrIDX].PollInterval,0)OTU(MBTU_Transactions_00[TrIDX].Enabled);
					RC: "Can$'t have a poll interval less than 1, so disable the transaction if it is incorrect to prevent problems.$N"
					    "";
					N: EQU(CIdx,1)LEQ(MBTU_Transactions_01[TrIDX].PollInterval,0)OTU(MBTU_Transactions_01[TrIDX].Enabled);
					RC: "Can$'t have a poll interval less than 1, so disable the transaction if it is incorrect to prevent problems.$N"
					    "";
					N: EQU(CIdx,2)LEQ(MBTU_Transactions_02[TrIDX].PollInterval,0)OTU(MBTU_Transactions_02[TrIDX].Enabled);
					RC: "Can$'t have a poll interval less than 1, so disable the transaction if it is incorrect to prevent problems.$N"
					    "";
					N: EQU(CIdx,3)LEQ(MBTU_Transactions_03[TrIDX].PollInterval,0)OTU(MBTU_Transactions_03[TrIDX].Enabled);
					RC: "Do the Poll Counter modulo division here, if the result (the remainder) is 0 then set the Trans_Trigger_xx flag.  This will cause the request string for this transaction to be transmitted in the Process_Transaction routine.";
					N: EQU(CIdx,0)XIC(MBTU_Transactions_00[TrIDX].Enabled)MOD(PollCounter,MBTU_Transactions_00[TrIDX].PollInterval,TempInt)EQU(TempInt,0)OTL(Trans_Triggers_00[TrIDX]);
					RC: "Do the Poll Counter modulo division here, if the result (the remainder) is 0 then set the Trans_Trigger_xx flag.  This will cause the request string for this transaction to be transmitted in the Process_Transaction routine.";
					N: EQU(CIdx,1)XIC(MBTU_Transactions_01[TrIDX].Enabled)MOD(PollCounter,MBTU_Transactions_01[TrIDX].PollInterval,TempInt)EQU(TempInt,0)OTL(Trans_Triggers_01[TrIDX]);
					RC: "Do the Poll Counter modulo division here, if the result (the remainder) is 0 then set the Trans_Trigger_xx flag.  This will cause the request string for this transaction to be transmitted in the Process_Transaction routine.";
					N: EQU(CIdx,2)XIC(MBTU_Transactions_02[TrIDX].Enabled)MOD(PollCounter,MBTU_Transactions_02[TrIDX].PollInterval,TempInt)EQU(TempInt,0)OTL(Trans_Triggers_02[TrIDX]);
					RC: "Do the Poll Counter modulo division here, if the result (the remainder) is 0 then set the Trans_Trigger_xx flag.  This will cause the request string for this transaction to be transmitted in the Process_Transaction routine.";
					N: EQU(CIdx,3)XIC(MBTU_Transactions_03[TrIDX].Enabled)MOD(PollCounter,MBTU_Transactions_03[TrIDX].PollInterval,TempInt)EQU(TempInt,0)OTL(Trans_Triggers_03[TrIDX]);
					N: LBL(EndCheckPollInterval)NOP();
			END_ROUTINE

			ROUTINE _SUB_Int2ST 
					RC: "This routine converts an integer value to a 4 character string for use in the request string.$N"
					    "It is called from SUB_BuildRequestString$N"
					    "";
					N: SBR(INT_DATA_IN)SWPB(INT_DATA_IN,REVERSE,INT_DATA_IN)COP(INT_DATA_IN,INT_STR_OUT.DATA[0],2)MOV(2,INT_STR_OUT.LEN)RET(INT_STR_OUT);
			END_ROUTINE

			ROUTINE _SUB_SET_PATH (Description := "Sets the path for all Socket messages.")
					RC: "This routine sets the path value based on the variable MBTU_EnetModulePort in all applicable msg blocks including Delete, Read, write, Connect, Create, and Delete all.$N"
					    "$N"
					    "Start with Global functions and connection 0.$N"
					    "$N"
					    "";
					N: COP(MBTU_EnetModulePort,MBTI_Delete_All_MSG.Path,1)COP(MBTU_EnetModulePort,MBTI_Read_Data_MSG_00.Path,1)COP(MBTU_EnetModulePort,MBTI_Write_Data_MSG_00.Path,1)COP(MBTU_EnetModulePort,MBTI_Connect_Sock_MSG_00.Path,1)COP(MBTU_EnetModulePort,MBTI_Create_Sock_MSG_00.Path,1);
					RC: "Now set Connection 1.";
					N: COP(MBTU_EnetModulePort,MBTI_Read_Data_MSG_01.Path,1)COP(MBTU_EnetModulePort,MBTI_Write_Data_MSG_01.Path,1)COP(MBTU_EnetModulePort,MBTI_Connect_Sock_MSG_01.Path,1)COP(MBTU_EnetModulePort,MBTI_Create_Sock_MSG_01.Path,1);
					RC: "Now set Connection 2.$N"
					    "";
					N: COP(MBTU_EnetModulePort,MBTI_Read_Data_MSG_02.Path,1)COP(MBTU_EnetModulePort,MBTI_Write_Data_MSG_02.Path,1)COP(MBTU_EnetModulePort,MBTI_Connect_Sock_MSG_02.Path,1)COP(MBTU_EnetModulePort,MBTI_Create_Sock_MSG_02.Path,1);
					RC: "Now set Connection 3.$N"
					    "";
					N: COP(MBTU_EnetModulePort,MBTI_Read_Data_MSG_03.Path,1)COP(MBTU_EnetModulePort,MBTI_Write_Data_MSG_03.Path,1)COP(MBTU_EnetModulePort,MBTI_Connect_Sock_MSG_03.Path,1)COP(MBTU_EnetModulePort,MBTI_Create_Sock_MSG_03.Path,1);
			END_ROUTINE

	END_PROGRAM

	TASK MainTask (Type := CONTINUOUS,
	               Rate := 10,
	               Priority := 10,
	               Watchdog := 500,
	               DisableUpdateOutputs := No,
	               InhibitTask := No)
			Common;
			MainProgram;
	END_TASK

	TASK MODBUS_COMS (Type := PERIODIC,
	                  Rate := 100,
	                  Priority := 10,
	                  Watchdog := 500,
	                  DisableUpdateOutputs := No,
	                  InhibitTask := No)
			ModbusMasterTCP;
	END_TASK

	TREND Raw_O2 (SamplePeriod := 100,
	              NumberOfCaptures := 1,
	              CaptureSizeType := Samples,
	              CaptureSize := 6000,
	              StartTriggerType := No Trigger,
	              StopTriggerType := No Trigger,
	              TrendxVersion := "5.2")
			Template := [208,207,17,224,161,177,26,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,3,0,254,255,9,0,6,0,0,0,0,0,0,0
,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,16,0,0,2,0,0,0,1,0,0,0,254,255,255,255,0,0,0,0,0,0,0,0
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,255,255,255,254,255,255,255
,254,255,255,255,4,0,0,0,5,0,0,0,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,82,0,111,0,111,0,116,0,32,0,69,0,110,0,116,0
,114,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,22,0,5,0,255,255,255,255,255,255,255,255,1,0,0,0,14,52,81,191,9,48,205,65,159,190,222,136,174,167,50,40
,0,0,0,0,0,0,0,0,0,0,0,0,112,78,170,181,36,195,207,1,3,0,0,0,128,4,0,0,0,0,0,0,67,0,111,0,110,0,116,0
,101,0,110,0,116,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,2,1,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,4,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255
,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0
,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0
,17,0,0,0,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,4,0,0,0,212,127,0,0,65,52,0,0,0,0,0,0,13,0,0,0,255,254,255,6,82,0,97,0,119,0,95,0
,79,0,50,0,0,0,0,0,0,0,0,0,255,255,255,255,200,0,0,0,255,157,3,0,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,255,254,255,0,255,254,255,0,1,96,234,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,234,3,0,0,2,0,255,255,1
,0,13,0,67,86,105,101,119,76,105,110,101,73,110,102,111,3,0,0,0,1,0,0,0,0,0,160,65,0,0,176,65,255,254,255,0,255,254,255,0
,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,9,65,0,50,0,95,0,79,0
,88,0,89,0,71,0,69,0,78,0,32,1,0,0,0,255,254,255,0,255,254,255,0,1,128,3,0,0,0,1,0,0,0,0,0,160,65,0,0,176
,65,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255
,21,79,0,50,0,95,0,67,0,97,0,108,0,105,0,98,0,114,0,97,0,116,0,101,0,100,0,95,0,82,0,101,0,97,0,100,0,105,0,110
,0,103,0,32,1,0,0,0,255,254,255,0,255,254,255,0,9,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0
,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0
,2,0,0,0,255,0,0,255,0,0,0,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,200,66,0,0
,0,0,0,0,0,0,0,0,192,62,0,0,0,0,1,0,0,0,0,0,0,0,2,0,1,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0
,0,0,2,0,1,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,44,0,0,0,0,0,0,0,0,0
,192,62,0,0,192,62,0,0,128,62,0,0,0,0,171,170,42,61,171,170,234,62,0,0,192,62,0,0,0,62,171,170,42,62,128,128,128,0,128,128
,128,0,255,239,255,254,255,191,255,247,173,208,255,83,1,0,0,0,184,2,0,0,203,208,255,83,1,0,0,0,184,2,0,0,255,254,255,0,1,0
,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,40,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0
,243,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,254,255,5
,65,0,114,0,105,0,97,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,0,32,1,0,0,0,255,254,255,0,255,254,255,0,3
,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,0,32,1,0,0,0,255,254,255,0,255,254,255,0,0,0,0,0
,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0
,0,0,0,0,0,0,0,0,0,0,0,0,2,0,255,255,1,0,9,0,67,76,105,110,101,73,110,102,111,3,0,0,0,1,0,0,0,0,0,160
,65,0,0,176,65,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255
,0,255,254,255,9,65,0,50,0,95,0,79,0,88,0,89,0,71,0,69,0,78,0,32,1,0,0,0,255,254,255,0,255,254,255,0,4,128,3,0
,0,0,1,0,0,0,0,0,160,65,0,0,176,65,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254
,255,0,255,254,255,0,255,254,255,0,255,254,255,21,79,0,50,0,95,0,67,0,97,0,108,0,105,0,98,0,114,0,97,0,116,0,101,0,100,0
,95,0,82,0,101,0,97,0,100,0,105,0,110,0,103,0,32,1,0,0,0,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,1,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,70,3,0];
		PEN A2_OXYGEN (Color := 16#00ff_0000,
		               Visible := 1,
		               Style := 0,
		               Type := Analog,
		               Width := 1,
		               Marker := 0,
		               Min := 20.0,
		               Max := 22.0)
		END_PEN

		PEN O2_Calibrated_Reading (Color := 16#0000_ff00,
		                           Visible := 1,
		                           Style := 0,
		                           Type := Analog,
		                           Width := 1,
		                           Marker := 0,
		                           Min := 20.0,
		                           Max := 22.0)
		END_PEN

	END_TREND

CONFIG CST(SystemTimeMasterID := 0) END_CONFIG

CONFIG TimeSynchronize(Priority1 := 128,
	                                 Priority2 := 128,
	                                 PTPEnable := 0) END_CONFIG

CONFIG WallClockTime(LocalTimeAdjustment := 0,
	                     TimeZone := 0) END_CONFIG

END_CONTROLLER

